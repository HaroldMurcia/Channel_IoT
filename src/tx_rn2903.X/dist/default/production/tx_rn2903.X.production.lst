

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 27 21:54:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 05/05/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18LF45K50 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    99  0000                     
   100 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   101  0000                     
   102 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   103  0000                     
   104                           	psect	idataBANK0
   105  006917                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _selectedFont
   109  006917  65                 	db	low _OledFont0
   110  006918  7C                 	db	high _OledFont0
   111                           
   112                           ;initializer for _Contrast_level
   113  006919  13                 	db	19
   114                           
   115                           	psect	mediumconst
   116  007C64                     __pmediumconst:
   117                           	callstack 0
   118  007C64  00                 	db	0
   119  007C65                     _OledFont0:
   120                           	callstack 0
   121  007C65  00                 	db	0
   122  007C66  00                 	db	0
   123  007C67  00                 	db	0
   124  007C68  00                 	db	0
   125  007C69  00                 	db	0
   126  007C6A  00                 	db	0
   127  007C6B  00                 	db	0
   128  007C6C  00                 	db	0
   129  007C6D  00                 	db	0
   130  007C6E  00                 	db	0
   131  007C6F  00                 	db	0
   132  007C70  5F                 	db	95
   133  007C71  00                 	db	0
   134  007C72  00                 	db	0
   135  007C73  00                 	db	0
   136  007C74  00                 	db	0
   137  007C75  00                 	db	0
   138  007C76  00                 	db	0
   139  007C77  03                 	db	3
   140  007C78  00                 	db	0
   141  007C79  03                 	db	3
   142  007C7A  00                 	db	0
   143  007C7B  00                 	db	0
   144  007C7C  00                 	db	0
   145  007C7D  64                 	db	100
   146  007C7E  3C                 	db	60
   147  007C7F  26                 	db	38
   148  007C80  64                 	db	100
   149  007C81  3C                 	db	60
   150  007C82  26                 	db	38
   151  007C83  24                 	db	36
   152  007C84  00                 	db	0
   153  007C85  26                 	db	38
   154  007C86  49                 	db	73
   155  007C87  49                 	db	73
   156  007C88  7F                 	db	127
   157  007C89  49                 	db	73
   158  007C8A  49                 	db	73
   159  007C8B  32                 	db	50
   160  007C8C  00                 	db	0
   161  007C8D  42                 	db	66
   162  007C8E  25                 	db	37
   163  007C8F  12                 	db	18
   164  007C90  08                 	db	8
   165  007C91  24                 	db	36
   166  007C92  52                 	db	82
   167  007C93  21                 	db	33
   168  007C94  00                 	db	0
   169  007C95  20                 	db	32
   170  007C96  50                 	db	80
   171  007C97  4E                 	db	78
   172  007C98  55                 	db	85
   173  007C99  22                 	db	34
   174  007C9A  58                 	db	88
   175  007C9B  28                 	db	40
   176  007C9C  00                 	db	0
   177  007C9D  00                 	db	0
   178  007C9E  00                 	db	0
   179  007C9F  00                 	db	0
   180  007CA0  03                 	db	3
   181  007CA1  00                 	db	0
   182  007CA2  00                 	db	0
   183  007CA3  00                 	db	0
   184  007CA4  00                 	db	0
   185  007CA5  00                 	db	0
   186  007CA6  00                 	db	0
   187  007CA7  1C                 	db	28
   188  007CA8  22                 	db	34
   189  007CA9  41                 	db	65
   190  007CAA  00                 	db	0
   191  007CAB  00                 	db	0
   192  007CAC  00                 	db	0
   193  007CAD  00                 	db	0
   194  007CAE  00                 	db	0
   195  007CAF  00                 	db	0
   196  007CB0  41                 	db	65
   197  007CB1  22                 	db	34
   198  007CB2  1C                 	db	28
   199  007CB3  00                 	db	0
   200  007CB4  00                 	db	0
   201  007CB5  00                 	db	0
   202  007CB6  15                 	db	21
   203  007CB7  15                 	db	21
   204  007CB8  0E                 	db	14
   205  007CB9  0E                 	db	14
   206  007CBA  15                 	db	21
   207  007CBB  15                 	db	21
   208  007CBC  00                 	db	0
   209  007CBD  00                 	db	0
   210  007CBE  08                 	db	8
   211  007CBF  08                 	db	8
   212  007CC0  3E                 	db	62
   213  007CC1  08                 	db	8
   214  007CC2  08                 	db	8
   215  007CC3  00                 	db	0
   216  007CC4  00                 	db	0
   217  007CC5  00                 	db	0
   218  007CC6  00                 	db	0
   219  007CC7  00                 	db	0
   220  007CC8  50                 	db	80
   221  007CC9  30                 	db	48
   222  007CCA  00                 	db	0
   223  007CCB  00                 	db	0
   224  007CCC  00                 	db	0
   225  007CCD  00                 	db	0
   226  007CCE  08                 	db	8
   227  007CCF  08                 	db	8
   228  007CD0  08                 	db	8
   229  007CD1  08                 	db	8
   230  007CD2  08                 	db	8
   231  007CD3  00                 	db	0
   232  007CD4  00                 	db	0
   233  007CD5  00                 	db	0
   234  007CD6  00                 	db	0
   235  007CD7  00                 	db	0
   236  007CD8  40                 	db	64
   237  007CD9  00                 	db	0
   238  007CDA  00                 	db	0
   239  007CDB  00                 	db	0
   240  007CDC  00                 	db	0
   241  007CDD  40                 	db	64
   242  007CDE  20                 	db	32
   243  007CDF  10                 	db	16
   244  007CE0  08                 	db	8
   245  007CE1  04                 	db	4
   246  007CE2  02                 	db	2
   247  007CE3  01                 	db	1
   248  007CE4  00                 	db	0
   249  007CE5  00                 	db	0
   250  007CE6  3E                 	db	62
   251  007CE7  41                 	db	65
   252  007CE8  41                 	db	65
   253  007CE9  41                 	db	65
   254  007CEA  3E                 	db	62
   255  007CEB  00                 	db	0
   256  007CEC  00                 	db	0
   257  007CED  00                 	db	0
   258  007CEE  00                 	db	0
   259  007CEF  41                 	db	65
   260  007CF0  7F                 	db	127
   261  007CF1  40                 	db	64
   262  007CF2  00                 	db	0
   263  007CF3  00                 	db	0
   264  007CF4  00                 	db	0
   265  007CF5  00                 	db	0
   266  007CF6  42                 	db	66
   267  007CF7  61                 	db	97
   268  007CF8  51                 	db	81
   269  007CF9  49                 	db	73
   270  007CFA  6E                 	db	110
   271  007CFB  00                 	db	0
   272  007CFC  00                 	db	0
   273  007CFD  00                 	db	0
   274  007CFE  22                 	db	34
   275  007CFF  41                 	db	65
   276  007D00  49                 	db	73
   277  007D01  49                 	db	73
   278  007D02  36                 	db	54
   279  007D03  00                 	db	0
   280  007D04  00                 	db	0
   281  007D05  00                 	db	0
   282  007D06  18                 	db	24
   283  007D07  14                 	db	20
   284  007D08  12                 	db	18
   285  007D09  7F                 	db	127
   286  007D0A  10                 	db	16
   287  007D0B  00                 	db	0
   288  007D0C  00                 	db	0
   289  007D0D  00                 	db	0
   290  007D0E  27                 	db	39
   291  007D0F  49                 	db	73
   292  007D10  49                 	db	73
   293  007D11  49                 	db	73
   294  007D12  71                 	db	113
   295  007D13  00                 	db	0
   296  007D14  00                 	db	0
   297  007D15  00                 	db	0
   298  007D16  3C                 	db	60
   299  007D17  4A                 	db	74
   300  007D18  49                 	db	73
   301  007D19  48                 	db	72
   302  007D1A  70                 	db	112
   303  007D1B  00                 	db	0
   304  007D1C  00                 	db	0
   305  007D1D  00                 	db	0
   306  007D1E  43                 	db	67
   307  007D1F  21                 	db	33
   308  007D20  11                 	db	17
   309  007D21  0D                 	db	13
   310  007D22  03                 	db	3
   311  007D23  00                 	db	0
   312  007D24  00                 	db	0
   313  007D25  00                 	db	0
   314  007D26  36                 	db	54
   315  007D27  49                 	db	73
   316  007D28  49                 	db	73
   317  007D29  49                 	db	73
   318  007D2A  36                 	db	54
   319  007D2B  00                 	db	0
   320  007D2C  00                 	db	0
   321  007D2D  00                 	db	0
   322  007D2E  06                 	db	6
   323  007D2F  09                 	db	9
   324  007D30  49                 	db	73
   325  007D31  29                 	db	41
   326  007D32  1E                 	db	30
   327  007D33  00                 	db	0
   328  007D34  00                 	db	0
   329  007D35  00                 	db	0
   330  007D36  00                 	db	0
   331  007D37  00                 	db	0
   332  007D38  12                 	db	18
   333  007D39  00                 	db	0
   334  007D3A  00                 	db	0
   335  007D3B  00                 	db	0
   336  007D3C  00                 	db	0
   337  007D3D  00                 	db	0
   338  007D3E  00                 	db	0
   339  007D3F  00                 	db	0
   340  007D40  52                 	db	82
   341  007D41  30                 	db	48
   342  007D42  00                 	db	0
   343  007D43  00                 	db	0
   344  007D44  00                 	db	0
   345  007D45  00                 	db	0
   346  007D46  00                 	db	0
   347  007D47  08                 	db	8
   348  007D48  14                 	db	20
   349  007D49  14                 	db	20
   350  007D4A  22                 	db	34
   351  007D4B  00                 	db	0
   352  007D4C  00                 	db	0
   353  007D4D  00                 	db	0
   354  007D4E  14                 	db	20
   355  007D4F  14                 	db	20
   356  007D50  14                 	db	20
   357  007D51  14                 	db	20
   358  007D52  14                 	db	20
   359  007D53  14                 	db	20
   360  007D54  00                 	db	0
   361  007D55  00                 	db	0
   362  007D56  00                 	db	0
   363  007D57  22                 	db	34
   364  007D58  14                 	db	20
   365  007D59  14                 	db	20
   366  007D5A  08                 	db	8
   367  007D5B  00                 	db	0
   368  007D5C  00                 	db	0
   369  007D5D  00                 	db	0
   370  007D5E  02                 	db	2
   371  007D5F  01                 	db	1
   372  007D60  59                 	db	89
   373  007D61  05                 	db	5
   374  007D62  02                 	db	2
   375  007D63  00                 	db	0
   376  007D64  00                 	db	0
   377  007D65  3E                 	db	62
   378  007D66  41                 	db	65
   379  007D67  5D                 	db	93
   380  007D68  55                 	db	85
   381  007D69  4D                 	db	77
   382  007D6A  51                 	db	81
   383  007D6B  2E                 	db	46
   384  007D6C  00                 	db	0
   385  007D6D  40                 	db	64
   386  007D6E  7C                 	db	124
   387  007D6F  4A                 	db	74
   388  007D70  09                 	db	9
   389  007D71  4A                 	db	74
   390  007D72  7C                 	db	124
   391  007D73  40                 	db	64
   392  007D74  00                 	db	0
   393  007D75  41                 	db	65
   394  007D76  7F                 	db	127
   395  007D77  49                 	db	73
   396  007D78  49                 	db	73
   397  007D79  49                 	db	73
   398  007D7A  49                 	db	73
   399  007D7B  36                 	db	54
   400  007D7C  00                 	db	0
   401  007D7D  1C                 	db	28
   402  007D7E  22                 	db	34
   403  007D7F  41                 	db	65
   404  007D80  41                 	db	65
   405  007D81  41                 	db	65
   406  007D82  41                 	db	65
   407  007D83  22                 	db	34
   408  007D84  00                 	db	0
   409  007D85  41                 	db	65
   410  007D86  7F                 	db	127
   411  007D87  41                 	db	65
   412  007D88  41                 	db	65
   413  007D89  41                 	db	65
   414  007D8A  22                 	db	34
   415  007D8B  1C                 	db	28
   416  007D8C  00                 	db	0
   417  007D8D  41                 	db	65
   418  007D8E  7F                 	db	127
   419  007D8F  49                 	db	73
   420  007D90  49                 	db	73
   421  007D91  5D                 	db	93
   422  007D92  41                 	db	65
   423  007D93  63                 	db	99
   424  007D94  00                 	db	0
   425  007D95  41                 	db	65
   426  007D96  7F                 	db	127
   427  007D97  49                 	db	73
   428  007D98  09                 	db	9
   429  007D99  1D                 	db	29
   430  007D9A  01                 	db	1
   431  007D9B  03                 	db	3
   432  007D9C  00                 	db	0
   433  007D9D  1C                 	db	28
   434  007D9E  22                 	db	34
   435  007D9F  41                 	db	65
   436  007DA0  49                 	db	73
   437  007DA1  49                 	db	73
   438  007DA2  3A                 	db	58
   439  007DA3  08                 	db	8
   440  007DA4  00                 	db	0
   441  007DA5  41                 	db	65
   442  007DA6  7F                 	db	127
   443  007DA7  08                 	db	8
   444  007DA8  08                 	db	8
   445  007DA9  08                 	db	8
   446  007DAA  7F                 	db	127
   447  007DAB  41                 	db	65
   448  007DAC  00                 	db	0
   449  007DAD  00                 	db	0
   450  007DAE  41                 	db	65
   451  007DAF  41                 	db	65
   452  007DB0  7F                 	db	127
   453  007DB1  41                 	db	65
   454  007DB2  41                 	db	65
   455  007DB3  00                 	db	0
   456  007DB4  00                 	db	0
   457  007DB5  30                 	db	48
   458  007DB6  40                 	db	64
   459  007DB7  41                 	db	65
   460  007DB8  41                 	db	65
   461  007DB9  3F                 	db	63
   462  007DBA  01                 	db	1
   463  007DBB  01                 	db	1
   464  007DBC  00                 	db	0
   465  007DBD  41                 	db	65
   466  007DBE  7F                 	db	127
   467  007DBF  08                 	db	8
   468  007DC0  0C                 	db	12
   469  007DC1  12                 	db	18
   470  007DC2  61                 	db	97
   471  007DC3  41                 	db	65
   472  007DC4  00                 	db	0
   473  007DC5  41                 	db	65
   474  007DC6  7F                 	db	127
   475  007DC7  41                 	db	65
   476  007DC8  40                 	db	64
   477  007DC9  40                 	db	64
   478  007DCA  40                 	db	64
   479  007DCB  60                 	db	96
   480  007DCC  00                 	db	0
   481  007DCD  41                 	db	65
   482  007DCE  7F                 	db	127
   483  007DCF  42                 	db	66
   484  007DD0  0C                 	db	12
   485  007DD1  42                 	db	66
   486  007DD2  7F                 	db	127
   487  007DD3  41                 	db	65
   488  007DD4  00                 	db	0
   489  007DD5  41                 	db	65
   490  007DD6  7F                 	db	127
   491  007DD7  42                 	db	66
   492  007DD8  0C                 	db	12
   493  007DD9  11                 	db	17
   494  007DDA  7F                 	db	127
   495  007DDB  01                 	db	1
   496  007DDC  00                 	db	0
   497  007DDD  1C                 	db	28
   498  007DDE  22                 	db	34
   499  007DDF  41                 	db	65
   500  007DE0  41                 	db	65
   501  007DE1  41                 	db	65
   502  007DE2  22                 	db	34
   503  007DE3  1C                 	db	28
   504  007DE4  00                 	db	0
   505  007DE5  41                 	db	65
   506  007DE6  7F                 	db	127
   507  007DE7  49                 	db	73
   508  007DE8  09                 	db	9
   509  007DE9  09                 	db	9
   510  007DEA  09                 	db	9
   511  007DEB  06                 	db	6
   512  007DEC  00                 	db	0
   513  007DED  0C                 	db	12
   514  007DEE  12                 	db	18
   515  007DEF  21                 	db	33
   516  007DF0  21                 	db	33
   517  007DF1  61                 	db	97
   518  007DF2  52                 	db	82
   519  007DF3  4C                 	db	76
   520  007DF4  00                 	db	0
   521  007DF5  41                 	db	65
   522  007DF6  7F                 	db	127
   523  007DF7  09                 	db	9
   524  007DF8  09                 	db	9
   525  007DF9  19                 	db	25
   526  007DFA  69                 	db	105
   527  007DFB  46                 	db	70
   528  007DFC  00                 	db	0
   529  007DFD  66                 	db	102
   530  007DFE  49                 	db	73
   531  007DFF  49                 	db	73
   532  007E00  49                 	db	73
   533  007E01  49                 	db	73
   534  007E02  49                 	db	73
   535  007E03  33                 	db	51
   536  007E04  00                 	db	0
   537  007E05  03                 	db	3
   538  007E06  01                 	db	1
   539  007E07  41                 	db	65
   540  007E08  7F                 	db	127
   541  007E09  41                 	db	65
   542  007E0A  01                 	db	1
   543  007E0B  03                 	db	3
   544  007E0C  00                 	db	0
   545  007E0D  01                 	db	1
   546  007E0E  3F                 	db	63
   547  007E0F  41                 	db	65
   548  007E10  40                 	db	64
   549  007E11  41                 	db	65
   550  007E12  3F                 	db	63
   551  007E13  01                 	db	1
   552  007E14  00                 	db	0
   553  007E15  01                 	db	1
   554  007E16  0F                 	db	15
   555  007E17  31                 	db	49
   556  007E18  40                 	db	64
   557  007E19  31                 	db	49
   558  007E1A  0F                 	db	15
   559  007E1B  01                 	db	1
   560  007E1C  00                 	db	0
   561  007E1D  01                 	db	1
   562  007E1E  1F                 	db	31
   563  007E1F  61                 	db	97
   564  007E20  14                 	db	20
   565  007E21  61                 	db	97
   566  007E22  1F                 	db	31
   567  007E23  01                 	db	1
   568  007E24  00                 	db	0
   569  007E25  41                 	db	65
   570  007E26  41                 	db	65
   571  007E27  36                 	db	54
   572  007E28  08                 	db	8
   573  007E29  36                 	db	54
   574  007E2A  41                 	db	65
   575  007E2B  41                 	db	65
   576  007E2C  00                 	db	0
   577  007E2D  01                 	db	1
   578  007E2E  03                 	db	3
   579  007E2F  44                 	db	68
   580  007E30  78                 	db	120
   581  007E31  44                 	db	68
   582  007E32  03                 	db	3
   583  007E33  01                 	db	1
   584  007E34  00                 	db	0
   585  007E35  43                 	db	67
   586  007E36  61                 	db	97
   587  007E37  51                 	db	81
   588  007E38  49                 	db	73
   589  007E39  45                 	db	69
   590  007E3A  43                 	db	67
   591  007E3B  61                 	db	97
   592  007E3C  00                 	db	0
   593  007E3D  00                 	db	0
   594  007E3E  00                 	db	0
   595  007E3F  7F                 	db	127
   596  007E40  41                 	db	65
   597  007E41  41                 	db	65
   598  007E42  00                 	db	0
   599  007E43  00                 	db	0
   600  007E44  00                 	db	0
   601  007E45  01                 	db	1
   602  007E46  02                 	db	2
   603  007E47  04                 	db	4
   604  007E48  08                 	db	8
   605  007E49  10                 	db	16
   606  007E4A  20                 	db	32
   607  007E4B  40                 	db	64
   608  007E4C  00                 	db	0
   609  007E4D  00                 	db	0
   610  007E4E  00                 	db	0
   611  007E4F  41                 	db	65
   612  007E50  41                 	db	65
   613  007E51  7F                 	db	127
   614  007E52  00                 	db	0
   615  007E53  00                 	db	0
   616  007E54  00                 	db	0
   617  007E55  00                 	db	0
   618  007E56  04                 	db	4
   619  007E57  02                 	db	2
   620  007E58  01                 	db	1
   621  007E59  01                 	db	1
   622  007E5A  02                 	db	2
   623  007E5B  04                 	db	4
   624  007E5C  00                 	db	0
   625  007E5D  00                 	db	0
   626  007E5E  40                 	db	64
   627  007E5F  40                 	db	64
   628  007E60  40                 	db	64
   629  007E61  40                 	db	64
   630  007E62  40                 	db	64
   631  007E63  40                 	db	64
   632  007E64  00                 	db	0
   633  007E65  00                 	db	0
   634  007E66  01                 	db	1
   635  007E67  02                 	db	2
   636  007E68  00                 	db	0
   637  007E69  00                 	db	0
   638  007E6A  00                 	db	0
   639  007E6B  00                 	db	0
   640  007E6C  00                 	db	0
   641  007E6D  00                 	db	0
   642  007E6E  34                 	db	52
   643  007E6F  4A                 	db	74
   644  007E70  4A                 	db	74
   645  007E71  4A                 	db	74
   646  007E72  3C                 	db	60
   647  007E73  40                 	db	64
   648  007E74  00                 	db	0
   649  007E75  00                 	db	0
   650  007E76  41                 	db	65
   651  007E77  3F                 	db	63
   652  007E78  48                 	db	72
   653  007E79  48                 	db	72
   654  007E7A  48                 	db	72
   655  007E7B  30                 	db	48
   656  007E7C  00                 	db	0
   657  007E7D  00                 	db	0
   658  007E7E  3C                 	db	60
   659  007E7F  42                 	db	66
   660  007E80  42                 	db	66
   661  007E81  42                 	db	66
   662  007E82  24                 	db	36
   663  007E83  00                 	db	0
   664  007E84  00                 	db	0
   665  007E85  00                 	db	0
   666  007E86  30                 	db	48
   667  007E87  48                 	db	72
   668  007E88  48                 	db	72
   669  007E89  49                 	db	73
   670  007E8A  3F                 	db	63
   671  007E8B  40                 	db	64
   672  007E8C  00                 	db	0
   673  007E8D  00                 	db	0
   674  007E8E  3C                 	db	60
   675  007E8F  4A                 	db	74
   676  007E90  4A                 	db	74
   677  007E91  4A                 	db	74
   678  007E92  2C                 	db	44
   679  007E93  00                 	db	0
   680  007E94  00                 	db	0
   681  007E95  00                 	db	0
   682  007E96  00                 	db	0
   683  007E97  48                 	db	72
   684  007E98  7E                 	db	126
   685  007E99  49                 	db	73
   686  007E9A  09                 	db	9
   687  007E9B  00                 	db	0
   688  007E9C  00                 	db	0
   689  007E9D  00                 	db	0
   690  007E9E  26                 	db	38
   691  007E9F  49                 	db	73
   692  007EA0  49                 	db	73
   693  007EA1  49                 	db	73
   694  007EA2  3F                 	db	63
   695  007EA3  01                 	db	1
   696  007EA4  00                 	db	0
   697  007EA5  41                 	db	65
   698  007EA6  7F                 	db	127
   699  007EA7  48                 	db	72
   700  007EA8  04                 	db	4
   701  007EA9  44                 	db	68
   702  007EAA  78                 	db	120
   703  007EAB  40                 	db	64
   704  007EAC  00                 	db	0
   705  007EAD  00                 	db	0
   706  007EAE  00                 	db	0
   707  007EAF  44                 	db	68
   708  007EB0  7D                 	db	125
   709  007EB1  40                 	db	64
   710  007EB2  00                 	db	0
   711  007EB3  00                 	db	0
   712  007EB4  00                 	db	0
   713  007EB5  00                 	db	0
   714  007EB6  00                 	db	0
   715  007EB7  40                 	db	64
   716  007EB8  44                 	db	68
   717  007EB9  3D                 	db	61
   718  007EBA  00                 	db	0
   719  007EBB  00                 	db	0
   720  007EBC  00                 	db	0
   721  007EBD  41                 	db	65
   722  007EBE  7F                 	db	127
   723  007EBF  10                 	db	16
   724  007EC0  18                 	db	24
   725  007EC1  24                 	db	36
   726  007EC2  42                 	db	66
   727  007EC3  42                 	db	66
   728  007EC4  00                 	db	0
   729  007EC5  00                 	db	0
   730  007EC6  40                 	db	64
   731  007EC7  41                 	db	65
   732  007EC8  7F                 	db	127
   733  007EC9  40                 	db	64
   734  007ECA  40                 	db	64
   735  007ECB  00                 	db	0
   736  007ECC  00                 	db	0
   737  007ECD  42                 	db	66
   738  007ECE  7E                 	db	126
   739  007ECF  02                 	db	2
   740  007ED0  7C                 	db	124
   741  007ED1  02                 	db	2
   742  007ED2  7E                 	db	126
   743  007ED3  40                 	db	64
   744  007ED4  00                 	db	0
   745  007ED5  42                 	db	66
   746  007ED6  7E                 	db	126
   747  007ED7  44                 	db	68
   748  007ED8  02                 	db	2
   749  007ED9  42                 	db	66
   750  007EDA  7C                 	db	124
   751  007EDB  40                 	db	64
   752  007EDC  00                 	db	0
   753  007EDD  00                 	db	0
   754  007EDE  3C                 	db	60
   755  007EDF  42                 	db	66
   756  007EE0  42                 	db	66
   757  007EE1  42                 	db	66
   758  007EE2  3C                 	db	60
   759  007EE3  00                 	db	0
   760  007EE4  00                 	db	0
   761  007EE5  00                 	db	0
   762  007EE6  41                 	db	65
   763  007EE7  7F                 	db	127
   764  007EE8  49                 	db	73
   765  007EE9  09                 	db	9
   766  007EEA  09                 	db	9
   767  007EEB  06                 	db	6
   768  007EEC  00                 	db	0
   769  007EED  00                 	db	0
   770  007EEE  06                 	db	6
   771  007EEF  09                 	db	9
   772  007EF0  09                 	db	9
   773  007EF1  49                 	db	73
   774  007EF2  7F                 	db	127
   775  007EF3  41                 	db	65
   776  007EF4  00                 	db	0
   777  007EF5  00                 	db	0
   778  007EF6  42                 	db	66
   779  007EF7  7E                 	db	126
   780  007EF8  44                 	db	68
   781  007EF9  02                 	db	2
   782  007EFA  02                 	db	2
   783  007EFB  04                 	db	4
   784  007EFC  00                 	db	0
   785  007EFD  00                 	db	0
   786  007EFE  64                 	db	100
   787  007EFF  4A                 	db	74
   788  007F00  4A                 	db	74
   789  007F01  4A                 	db	74
   790  007F02  36                 	db	54
   791  007F03  00                 	db	0
   792  007F04  00                 	db	0
   793  007F05  00                 	db	0
   794  007F06  04                 	db	4
   795  007F07  3F                 	db	63
   796  007F08  44                 	db	68
   797  007F09  44                 	db	68
   798  007F0A  20                 	db	32
   799  007F0B  00                 	db	0
   800  007F0C  00                 	db	0
   801  007F0D  00                 	db	0
   802  007F0E  02                 	db	2
   803  007F0F  3E                 	db	62
   804  007F10  40                 	db	64
   805  007F11  40                 	db	64
   806  007F12  22                 	db	34
   807  007F13  7E                 	db	126
   808  007F14  40                 	db	64
   809  007F15  02                 	db	2
   810  007F16  0E                 	db	14
   811  007F17  32                 	db	50
   812  007F18  40                 	db	64
   813  007F19  32                 	db	50
   814  007F1A  0E                 	db	14
   815  007F1B  02                 	db	2
   816  007F1C  00                 	db	0
   817  007F1D  02                 	db	2
   818  007F1E  1E                 	db	30
   819  007F1F  62                 	db	98
   820  007F20  18                 	db	24
   821  007F21  62                 	db	98
   822  007F22  1E                 	db	30
   823  007F23  02                 	db	2
   824  007F24  00                 	db	0
   825  007F25  42                 	db	66
   826  007F26  62                 	db	98
   827  007F27  14                 	db	20
   828  007F28  08                 	db	8
   829  007F29  14                 	db	20
   830  007F2A  62                 	db	98
   831  007F2B  42                 	db	66
   832  007F2C  00                 	db	0
   833  007F2D  01                 	db	1
   834  007F2E  43                 	db	67
   835  007F2F  45                 	db	69
   836  007F30  38                 	db	56
   837  007F31  05                 	db	5
   838  007F32  03                 	db	3
   839  007F33  01                 	db	1
   840  007F34  00                 	db	0
   841  007F35  00                 	db	0
   842  007F36  46                 	db	70
   843  007F37  62                 	db	98
   844  007F38  52                 	db	82
   845  007F39  4A                 	db	74
   846  007F3A  46                 	db	70
   847  007F3B  62                 	db	98
   848  007F3C  00                 	db	0
   849  007F3D  00                 	db	0
   850  007F3E  00                 	db	0
   851  007F3F  08                 	db	8
   852  007F40  36                 	db	54
   853  007F41  41                 	db	65
   854  007F42  00                 	db	0
   855  007F43  00                 	db	0
   856  007F44  00                 	db	0
   857  007F45  00                 	db	0
   858  007F46  00                 	db	0
   859  007F47  00                 	db	0
   860  007F48  7F                 	db	127
   861  007F49  00                 	db	0
   862  007F4A  00                 	db	0
   863  007F4B  00                 	db	0
   864  007F4C  00                 	db	0
   865  007F4D  00                 	db	0
   866  007F4E  00                 	db	0
   867  007F4F  00                 	db	0
   868  007F50  41                 	db	65
   869  007F51  36                 	db	54
   870  007F52  08                 	db	8
   871  007F53  00                 	db	0
   872  007F54  00                 	db	0
   873  007F55  00                 	db	0
   874  007F56  18                 	db	24
   875  007F57  08                 	db	8
   876  007F58  08                 	db	8
   877  007F59  10                 	db	16
   878  007F5A  10                 	db	16
   879  007F5B  18                 	db	24
   880  007F5C  00                 	db	0
   881  007F5D  AA                 	db	170
   882  007F5E  55                 	db	85
   883  007F5F  AA                 	db	170
   884  007F60  55                 	db	85
   885  007F61  AA                 	db	170
   886  007F62  55                 	db	85
   887  007F63  AA                 	db	170
   888  007F64  55                 	db	85
   889  007F65                     __end_of_OledFont0:
   890                           	callstack 0
   891  0000                     _ANSELA	set	3931
   892  0000                     _ANSELE	set	3935
   893  0000                     _ANSELB	set	3932
   894  0000                     _ANSELC	set	3933
   895  0000                     _ANSELD	set	3934
   896  0000                     _LATCbits	set	3979
   897  0000                     _LATBbits	set	3978
   898  0000                     _TRISCbits	set	3988
   899  0000                     _TRISBbits	set	3987
   900  0000                     _LATEbits	set	3981
   901  0000                     _TRISEbits	set	3990
   902  0000                     _LATAbits	set	3977
   903  0000                     _TRISAbits	set	3986
   904  0000                     _ACTCON	set	4021
   905  0000                     _OSCTUNE	set	3995
   906  0000                     _OSCCON2	set	4050
   907  0000                     _OSCCON	set	4051
   908  0000                     _INTCONbits	set	4082
   909  0000                     _INTCON2bits	set	4081
   910  0000                     _WPUB	set	3973
   911  0000                     _TRISD	set	3989
   912  0000                     _TRISC	set	3988
   913  0000                     _TRISB	set	3987
   914  0000                     _TRISA	set	3986
   915  0000                     _TRISE	set	3990
   916  0000                     _LATC	set	3979
   917  0000                     _LATB	set	3978
   918  0000                     _LATA	set	3977
   919  0000                     _LATD	set	3980
   920  0000                     _LATE	set	3981
   921  0000                     _TXREG1	set	4013
   922  0000                     _RCREG1	set	4014
   923  0000                     _RCSTA1bits	set	4011
   924  0000                     _TXSTA1bits	set	4012
   925  0000                     _PIR1bits	set	3998
   926  0000                     _SPBRGH1	set	4016
   927  0000                     _SPBRG1	set	4015
   928  0000                     _TXSTA1	set	4012
   929  0000                     _RCSTA1	set	4011
   930  0000                     _BAUDCON1	set	4024
   931  0000                     _PLLRDY	set	32407
   932  007F65                     STR_4:
   933  007F65  73                 	db	115	;'s'
   934  007F66  79                 	db	121	;'y'
   935  007F67  73                 	db	115	;'s'
   936  007F68  20                 	db	32
   937  007F69  73                 	db	115	;'s'
   938  007F6A  65                 	db	101	;'e'
   939  007F6B  74                 	db	116	;'t'
   940  007F6C  20                 	db	32
   941  007F6D  70                 	db	112	;'p'
   942  007F6E  69                 	db	105	;'i'
   943  007F6F  6E                 	db	110	;'n'
   944  007F70  64                 	db	100	;'d'
   945  007F71  69                 	db	105	;'i'
   946  007F72  67                 	db	103	;'g'
   947  007F73  20                 	db	32
   948  007F74  47                 	db	71	;'G'
   949  007F75  50                 	db	80	;'P'
   950  007F76  49                 	db	73	;'I'
   951  007F77  4F                 	db	79	;'O'
   952  007F78  31                 	db	49	;'1'
   953  007F79  30                 	db	48	;'0'
   954  007F7A  20                 	db	32
   955  007F7B  30                 	db	48	;'0'
   956  007F7C  0D                 	db	13
   957  007F7D  0A                 	db	10
   958  007F7E  00                 	db	0
   959  007F7F                     STR_5:
   960  007F7F  73                 	db	115	;'s'
   961  007F80  79                 	db	121	;'y'
   962  007F81  73                 	db	115	;'s'
   963  007F82  20                 	db	32
   964  007F83  73                 	db	115	;'s'
   965  007F84  65                 	db	101	;'e'
   966  007F85  74                 	db	116	;'t'
   967  007F86  20                 	db	32
   968  007F87  70                 	db	112	;'p'
   969  007F88  69                 	db	105	;'i'
   970  007F89  6E                 	db	110	;'n'
   971  007F8A  64                 	db	100	;'d'
   972  007F8B  69                 	db	105	;'i'
   973  007F8C  67                 	db	103	;'g'
   974  007F8D  20                 	db	32
   975  007F8E  47                 	db	71	;'G'
   976  007F8F  50                 	db	80	;'P'
   977  007F90  49                 	db	73	;'I'
   978  007F91  4F                 	db	79	;'O'
   979  007F92  31                 	db	49	;'1'
   980  007F93  31                 	db	49	;'1'
   981  007F94  20                 	db	32
   982  007F95  30                 	db	48	;'0'
   983  007F96  0D                 	db	13
   984  007F97  0A                 	db	10
   985  007F98  00                 	db	0
   986  007F99                     STR_2:
   987  007F99  73                 	db	115	;'s'
   988  007F9A  79                 	db	121	;'y'
   989  007F9B  73                 	db	115	;'s'
   990  007F9C  20                 	db	32
   991  007F9D  73                 	db	115	;'s'
   992  007F9E  65                 	db	101	;'e'
   993  007F9F  74                 	db	116	;'t'
   994  007FA0  20                 	db	32
   995  007FA1  70                 	db	112	;'p'
   996  007FA2  69                 	db	105	;'i'
   997  007FA3  6E                 	db	110	;'n'
   998  007FA4  64                 	db	100	;'d'
   999  007FA5  69                 	db	105	;'i'
  1000  007FA6  67                 	db	103	;'g'
  1001  007FA7  20                 	db	32
  1002  007FA8  47                 	db	71	;'G'
  1003  007FA9  50                 	db	80	;'P'
  1004  007FAA  49                 	db	73	;'I'
  1005  007FAB  4F                 	db	79	;'O'
  1006  007FAC  31                 	db	49	;'1'
  1007  007FAD  30                 	db	48	;'0'
  1008  007FAE  20                 	db	32
  1009  007FAF  31                 	db	49	;'1'
  1010  007FB0  0D                 	db	13
  1011  007FB1  0A                 	db	10
  1012  007FB2  00                 	db	0
  1013  007FB3                     STR_3:
  1014  007FB3  73                 	db	115	;'s'
  1015  007FB4  79                 	db	121	;'y'
  1016  007FB5  73                 	db	115	;'s'
  1017  007FB6  20                 	db	32
  1018  007FB7  73                 	db	115	;'s'
  1019  007FB8  65                 	db	101	;'e'
  1020  007FB9  74                 	db	116	;'t'
  1021  007FBA  20                 	db	32
  1022  007FBB  70                 	db	112	;'p'
  1023  007FBC  69                 	db	105	;'i'
  1024  007FBD  6E                 	db	110	;'n'
  1025  007FBE  64                 	db	100	;'d'
  1026  007FBF  69                 	db	105	;'i'
  1027  007FC0  67                 	db	103	;'g'
  1028  007FC1  20                 	db	32
  1029  007FC2  47                 	db	71	;'G'
  1030  007FC3  50                 	db	80	;'P'
  1031  007FC4  49                 	db	73	;'I'
  1032  007FC5  4F                 	db	79	;'O'
  1033  007FC6  31                 	db	49	;'1'
  1034  007FC7  31                 	db	49	;'1'
  1035  007FC8  20                 	db	32
  1036  007FC9  31                 	db	49	;'1'
  1037  007FCA  0D                 	db	13
  1038  007FCB  0A                 	db	10
  1039  007FCC  00                 	db	0
  1040  007FCD                     STR_6:
  1041  007FCD  63                 	db	99	;'c'
  1042  007FCE  6F                 	db	111	;'o'
  1043  007FCF  6D                 	db	109	;'m'
  1044  007FD0  61                 	db	97	;'a'
  1045  007FD1  6E                 	db	110	;'n'
  1046  007FD2  64                 	db	100	;'d'
  1047  007FD3  6F                 	db	111	;'o'
  1048  007FD4  20                 	db	32
  1049  007FD5  65                 	db	101	;'e'
  1050  007FD6  6E                 	db	110	;'n'
  1051  007FD7  76                 	db	118	;'v'
  1052  007FD8  69                 	db	105	;'i'
  1053  007FD9  61                 	db	97	;'a'
  1054  007FDA  64                 	db	100	;'d'
  1055  007FDB  6F                 	db	111	;'o'
  1056  007FDC  00                 	db	0
  1057  007FDD                     STR_1:
  1058  007FDD  4C                 	db	76	;'L'
  1059  007FDE  45                 	db	69	;'E'
  1060  007FDF  44                 	db	68	;'D'
  1061  007FE0  20                 	db	32
  1062  007FE1  54                 	db	84	;'T'
  1063  007FE2  65                 	db	101	;'e'
  1064  007FE3  73                 	db	115	;'s'
  1065  007FE4  74                 	db	116	;'t'
  1066  007FE5  3A                 	db	58	;':'
  1067  007FE6  00                 	db	0
  1068  007FE7                     STR_7:
  1069  007FE7  45                 	db	69	;'E'
  1070  007FE8  6E                 	db	110	;'n'
  1071  007FE9  63                 	db	99	;'c'
  1072  007FEA  65                 	db	101	;'e'
  1073  007FEB  6E                 	db	110	;'n'
  1074  007FEC  64                 	db	100	;'d'
  1075  007FED  69                 	db	105	;'i'
  1076  007FEE  64                 	db	100	;'d'
  1077  007FEF  6F                 	db	111	;'o'
  1078  007FF0  00                 	db	0
  1079  007FF1                     STR_11:
  1080  007FF1  41                 	db	65	;'A'
  1081  007FF2  70                 	db	112	;'p'
  1082  007FF3  61                 	db	97	;'a'
  1083  007FF4  67                 	db	103	;'g'
  1084  007FF5  61                 	db	97	;'a'
  1085  007FF6  64                 	db	100	;'d'
  1086  007FF7  6F                 	db	111	;'o'
  1087  007FF8  00                 	db	0
  1088  007FF9                     STR_9:
  1089  007FF9  25                 	db	37
  1090  007FFA  63                 	db	99	;'c'
  1091  007FFB  00                 	db	0
  1092  007FFC                     STR_8:
  1093  007FFC  25                 	db	37
  1094  007FFD  64                 	db	100	;'d'
  1095  007FFE  00                 	db	0
  1096  007FFF  00                 	db	0	; dummy byte at the end
  1097  0000                     
  1098                           ; #config settings
  1099                           
  1100                           	psect	cinit
  1101  006B90                     __pcinit:
  1102                           	callstack 0
  1103  006B90                     start_initialization:
  1104                           	callstack 0
  1105  006B90                     __initialization:
  1106                           	callstack 0
  1107                           
  1108                           ; Initialize objects allocated to BANK0 (3 bytes)
  1109                           ; load TBLPTR registers with __pidataBANK0
  1110  006B90  0E17               	movlw	low __pidataBANK0
  1111  006B92  6EF6               	movwf	tblptrl,c
  1112  006B94  0E69               	movlw	high __pidataBANK0
  1113  006B96  6EF7               	movwf	tblptrh,c
  1114  006B98  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1115  006B9A  6EF8               	movwf	tblptru,c
  1116  006B9C  0009               	tblrd		*+	;fetch initializer
  1117  006B9E  CFF5 F0FA          	movff	tablat,__pdataBANK0
  1118  006BA2  0009               	tblrd		*+	;fetch initializer
  1119  006BA4  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
  1120  006BA8  0009               	tblrd		*+	;fetch initializer
  1121  006BAA  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
  1122                           
  1123                           ; Clear objects allocated to BANK0 (48 bytes)
  1124  006BAE  EE00  F0CA         	lfsr	0,__pbssBANK0
  1125  006BB2  0E30               	movlw	48
  1126  006BB4                     clear_0:
  1127  006BB4  6AEE               	clrf	postinc0,c
  1128  006BB6  06E8               	decf	wreg,f,c
  1129  006BB8  E1FD               	bnz	clear_0
  1130                           
  1131                           ; Clear objects allocated to COMRAM (1 bytes)
  1132  006BBA  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1133  006BBC                     end_of_initialization:
  1134                           	callstack 0
  1135  006BBC                     __end_of__initialization:
  1136                           	callstack 0
  1137  006BBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1138  006BBE  6EF8               	movwf	tblptru,c
  1139  006BC0  0100               	movlb	0
  1140  006BC2  EFD4  F03A         	goto	_main	;jump to C main() function
  1141                           
  1142                           	psect	bssCOMRAM
  1143  00005F                     __pbssCOMRAM:
  1144                           	callstack 0
  1145  00005F                     _eusart1RxLastError:
  1146                           	callstack 0
  1147  00005F                     	ds	1
  1148                           
  1149                           	psect	bssBANK0
  1150  0000CA                     __pbssBANK0:
  1151                           	callstack 0
  1152  0000CA                     _nout:
  1153                           	callstack 0
  1154  0000CA                     	ds	2
  1155  0000CC                     _width:
  1156                           	callstack 0
  1157  0000CC                     	ds	2
  1158  0000CE                     _prec:
  1159                           	callstack 0
  1160  0000CE                     	ds	2
  1161  0000D0                     _flags:
  1162                           	callstack 0
  1163  0000D0                     	ds	2
  1164  0000D2                     _log:
  1165                           	callstack 0
  1166  0000D2                     	ds	2
  1167  0000D4                     _EUSART1_ErrorHandler:
  1168                           	callstack 0
  1169  0000D4                     	ds	2
  1170  0000D6                     _EUSART1_OverrunErrorHandler:
  1171                           	callstack 0
  1172  0000D6                     	ds	2
  1173  0000D8                     _EUSART1_FramingErrorHandler:
  1174                           	callstack 0
  1175  0000D8                     	ds	2
  1176  0000DA                     _dbuf:
  1177                           	callstack 0
  1178  0000DA                     	ds	32
  1179                           
  1180                           	psect	dataBANK0
  1181  0000FA                     __pdataBANK0:
  1182                           	callstack 0
  1183  0000FA                     _selectedFont:
  1184                           	callstack 0
  1185  0000FA                     	ds	2
  1186  0000FC                     _Contrast_level:
  1187                           	callstack 0
  1188  0000FC                     	ds	1
  1189                           
  1190                           	psect	cstackBANK0
  1191  000060                     __pcstackBANK0:
  1192                           	callstack 0
  1193  000060                     sprintf@ap:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x0
  1197  000060                     	ds	2
  1198  000062                     sprintf@f:
  1199                           	callstack 0
  1200                           
  1201                           ; 6 bytes @ 0x2
  1202  000062                     	ds	6
  1203  000068                     ??_main:
  1204                           
  1205                           ; 1 bytes @ 0x8
  1206  000068                     	ds	2
  1207  00006A                     main@READ:
  1208                           	callstack 0
  1209                           
  1210                           ; 64 bytes @ 0xA
  1211  00006A                     	ds	64
  1212  0000AA                     main@read:
  1213                           	callstack 0
  1214                           
  1215                           ; 32 bytes @ 0x4A
  1216  0000AA                     	ds	32
  1217                           
  1218                           	psect	cstackCOMRAM
  1219  000001                     __pcstackCOMRAM:
  1220                           	callstack 0
  1221  000001                     ?_get_Data:
  1222                           	callstack 0
  1223  000001                     ?_strlen:
  1224                           	callstack 0
  1225  000001                     ?___aodiv:
  1226                           	callstack 0
  1227  000001                     ?___aomod:
  1228                           	callstack 0
  1229  000001                     EUSART1_Write@txData:
  1230                           	callstack 0
  1231  000001                     oled_writeCommand@command:
  1232                           	callstack 0
  1233  000001                     oled_writeData@data:
  1234                           	callstack 0
  1235  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1236                           	callstack 0
  1237  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1238                           	callstack 0
  1239  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1240                           	callstack 0
  1241  000001                     delayms@length:
  1242                           	callstack 0
  1243  000001                     oled_setFont@font:
  1244                           	callstack 0
  1245  000001                     fputc@c:
  1246                           	callstack 0
  1247  000001                     strlen@s:
  1248                           	callstack 0
  1249  000001                     ___aodiv@dividend:
  1250                           	callstack 0
  1251  000001                     ___aomod@dividend:
  1252                           	callstack 0
  1253                           
  1254                           ; 8 bytes @ 0x0
  1255  000001                     	ds	1
  1256  000002                     Set_Page_Address@address:
  1257                           	callstack 0
  1258  000002                     Set_Column_Address@address:
  1259                           	callstack 0
  1260  000002                     oled_setDisplay@displayType:
  1261                           	callstack 0
  1262  000002                     oled_setContrastControlRegister@mod:
  1263                           	callstack 0
  1264  000002                     oled_initialDispayLine@line:
  1265                           	callstack 0
  1266  000002                     oled_powerControl@vol:
  1267                           	callstack 0
  1268  000002                     oled_regulorResistorSelect@r:
  1269                           	callstack 0
  1270  000002                     sendCommand@texto:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x1
  1274  000002                     	ds	1
  1275  000003                     ??_get_Data:
  1276  000003                     ??_oled_devInit:
  1277  000003                     ??_delayms:
  1278  000003                     oled_putChar@station_dot:
  1279                           	callstack 0
  1280  000003                     fputc@fp:
  1281                           	callstack 0
  1282  000003                     strlen@a:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x2
  1286  000003                     	ds	1
  1287  000004                     ??_RN_Leds:
  1288  000004                     oled_putChar@start_page:
  1289                           	callstack 0
  1290  000004                     delayms@counter:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x3
  1294  000004                     	ds	1
  1295  000005                     ??_fputc:
  1296  000005                     ??_oled_putChar:
  1297  000005                     RN_Leds@state:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x4
  1301  000005                     	ds	4
  1302  000009                     ___aodiv@divisor:
  1303                           	callstack 0
  1304  000009                     ___aomod@divisor:
  1305                           	callstack 0
  1306                           
  1307                           ; 8 bytes @ 0x8
  1308  000009                     	ds	1
  1309  00000A                     ?_ctoa:
  1310                           	callstack 0
  1311  00000A                     ctoa@fp:
  1312                           	callstack 0
  1313  00000A                     fputs@s:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x9
  1317  00000A                     	ds	1
  1318  00000B                     oled_putChar@k:
  1319                           	callstack 0
  1320                           
  1321                           ; 1 bytes @ 0xA
  1322  00000B                     	ds	1
  1323  00000C                     oled_putChar@index:
  1324                           	callstack 0
  1325  00000C                     ctoa@c:
  1326                           	callstack 0
  1327  00000C                     fputs@fp:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0xB
  1331  00000C                     	ds	1
  1332  00000D                     ??_ctoa:
  1333  00000D                     oled_clearRow@page:
  1334                           	callstack 0
  1335  00000D                     oled_putString@string:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0xC
  1339  00000D                     	ds	1
  1340  00000E                     oled_clearRow@index:
  1341                           	callstack 0
  1342  00000E                     fputs@c:
  1343                           	callstack 0
  1344  00000E                     ctoa@l:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0xD
  1348  00000E                     	ds	1
  1349  00000F                     oled_putString@station_dot:
  1350                           	callstack 0
  1351  00000F                     fputs@i:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0xE
  1355  00000F                     	ds	1
  1356  000010                     oled_putString@start_page:
  1357                           	callstack 0
  1358  000010                     ctoa@w:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0xF
  1362  000010                     	ds	1
  1363  000011                     ?_pad:
  1364                           	callstack 0
  1365  000011                     oled_putString@index:
  1366                           	callstack 0
  1367  000011                     ___aodiv@counter:
  1368                           	callstack 0
  1369  000011                     ___aomod@counter:
  1370                           	callstack 0
  1371  000011                     pad@fp:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x10
  1375  000011                     	ds	1
  1376  000012                     ___aodiv@sign:
  1377                           	callstack 0
  1378  000012                     ___aomod@sign:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x11
  1382  000012                     	ds	1
  1383  000013                     ?_abs:
  1384                           	callstack 0
  1385  000013                     pad@buf:
  1386                           	callstack 0
  1387  000013                     abs@a:
  1388                           	callstack 0
  1389  000013                     ___aodiv@quotient:
  1390                           	callstack 0
  1391                           
  1392                           ; 8 bytes @ 0x12
  1393  000013                     	ds	2
  1394  000015                     ??_abs:
  1395  000015                     pad@p:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x14
  1399  000015                     	ds	2
  1400  000017                     ??_pad:
  1401                           
  1402                           ; 1 bytes @ 0x16
  1403  000017                     	ds	1
  1404  000018                     pad@i:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x17
  1408  000018                     	ds	2
  1409  00001A                     pad@w:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x19
  1413  00001A                     	ds	2
  1414  00001C                     ?_dtoa:
  1415                           	callstack 0
  1416  00001C                     dtoa@fp:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x1B
  1420  00001C                     	ds	2
  1421  00001E                     dtoa@d:
  1422                           	callstack 0
  1423                           
  1424                           ; 8 bytes @ 0x1D
  1425  00001E                     	ds	8
  1426  000026                     ??_dtoa:
  1427                           
  1428                           ; 1 bytes @ 0x25
  1429  000026                     	ds	8
  1430  00002E                     _dtoa$1539:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x2D
  1434  00002E                     	ds	2
  1435  000030                     dtoa@p:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x2F
  1439  000030                     	ds	2
  1440  000032                     dtoa@w:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x31
  1444  000032                     	ds	2
  1445  000034                     dtoa@s:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x33
  1449  000034                     	ds	2
  1450  000036                     dtoa@n:
  1451                           	callstack 0
  1452                           
  1453                           ; 8 bytes @ 0x35
  1454  000036                     	ds	8
  1455  00003E                     dtoa@i:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x3D
  1459  00003E                     	ds	2
  1460  000040                     ?_vfpfcnvrt:
  1461                           	callstack 0
  1462  000040                     vfpfcnvrt@fp:
  1463                           	callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x3F
  1466  000040                     	ds	2
  1467  000042                     vfpfcnvrt@fmt:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x41
  1471  000042                     	ds	2
  1472  000044                     vfpfcnvrt@ap:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x43
  1476  000044                     	ds	2
  1477  000046                     ??_vfpfcnvrt:
  1478                           
  1479                           ; 1 bytes @ 0x45
  1480  000046                     	ds	2
  1481  000048                     vfpfcnvrt@ll:
  1482                           	callstack 0
  1483                           
  1484                           ; 8 bytes @ 0x47
  1485  000048                     	ds	8
  1486  000050                     vfpfcnvrt@c:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x4F
  1490  000050                     	ds	1
  1491  000051                     ?_vfprintf:
  1492                           	callstack 0
  1493  000051                     vfprintf@fp:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x50
  1497  000051                     	ds	2
  1498  000053                     vfprintf@fmt:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x52
  1502  000053                     	ds	2
  1503  000055                     vfprintf@ap:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x54
  1507  000055                     	ds	2
  1508  000057                     vfprintf@cfmt:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x56
  1512  000057                     	ds	2
  1513  000059                     ?_sprintf:
  1514                           	callstack 0
  1515  000059                     sprintf@s:
  1516                           	callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x58
  1519  000059                     	ds	2
  1520  00005B                     sprintf@fmt:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x5A
  1524  00005B                     	ds	4
  1525  00005F                     
  1526                           ; 1 bytes @ 0x5E
  1527 ;;
  1528 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1529 ;;
  1530 ;; *************** function _main *****************
  1531 ;; Defined at:
  1532 ;;		line 92 in file "main.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  READ           64   10[BANK0 ] unsigned char [64]
  1537 ;;  read           32   74[BANK0 ] unsigned char [32]
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0
  1548 ;;      Locals:         0      96       0       0       0       0       0       0       0
  1549 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1550 ;;      Totals:         0      98       0       0       0       0       0       0       0
  1551 ;;Total ram usage:       98 bytes
  1552 ;; Hardware stack levels required when called: 8
  1553 ;; This function calls:
  1554 ;;		_EUSART1_Read
  1555 ;;		_RN_Leds
  1556 ;;		_SYSTEM_Initialize
  1557 ;;		_delayms
  1558 ;;		_get_Data
  1559 ;;		_init_port
  1560 ;;		_oled_clear
  1561 ;;		_oled_init
  1562 ;;		_oled_putString
  1563 ;;		_sprintf
  1564 ;;		_test_leds
  1565 ;; This function is called by:
  1566 ;;		Startup code after reset
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text0
  1571  0075A8                     __ptext0:
  1572                           	callstack 0
  1573  0075A8                     _main:
  1574                           	callstack 23
  1575  0075A8                     
  1576                           ;main.c: 96:     SYSTEM_Initialize();
  1577  0075A8  ECAE  F034         	call	_SYSTEM_Initialize	;wreg free
  1578  0075AC                     
  1579                           ;main.c: 97:     init_port();
  1580  0075AC  ECB5  F034         	call	_init_port	;wreg free
  1581  0075B0                     
  1582                           ;main.c: 98:     delayms(500);
  1583  0075B0  0E01               	movlw	1
  1584  0075B2  6E02               	movwf	(delayms@length+1)^0,c
  1585  0075B4  0EF4               	movlw	244
  1586  0075B6  6E01               	movwf	delayms@length^0,c
  1587  0075B8  ECE3  F035         	call	_delayms	;wreg free
  1588  0075BC                     
  1589                           ;main.c: 100:     oled_init();
  1590  0075BC  EC49  F035         	call	_oled_init	;wreg free
  1591  0075C0                     
  1592                           ;main.c: 101:     oled_clear();
  1593  0075C0  ECF6  F034         	call	_oled_clear	;wreg free
  1594  0075C4                     
  1595                           ;main.c: 102:     test_leds();
  1596  0075C4  ECA8  F036         	call	_test_leds	;wreg free
  1597  0075C8                     l2449:
  1598                           
  1599                           ;main.c: 108:     {;main.c: 109:         oled_clear();
  1600  0075C8  ECF6  F034         	call	_oled_clear	;wreg free
  1601  0075CC                     
  1602                           ;main.c: 110:         RN_Leds(1);
  1603  0075CC  0E01               	movlw	1
  1604  0075CE  EC86  F038         	call	_RN_Leds
  1605  0075D2                     
  1606                           ;main.c: 111:         oled_putString("comando enviado",0,0);
  1607  0075D2  0ECD               	movlw	low STR_6
  1608  0075D4  6E0D               	movwf	oled_putString@string^0,c
  1609  0075D6  0E7F               	movlw	high STR_6
  1610  0075D8  6E0E               	movwf	(oled_putString@string+1)^0,c
  1611  0075DA  0E00               	movlw	0
  1612  0075DC  6E0F               	movwf	oled_putString@station_dot^0,c
  1613  0075DE  0E00               	movlw	0
  1614  0075E0  6E10               	movwf	oled_putString@start_page^0,c
  1615  0075E2  EC7E  F037         	call	_oled_putString	;wreg free
  1616  0075E6                     
  1617                           ;main.c: 112:         oled_putString("Encendido",0,1);
  1618  0075E6  0EE7               	movlw	low STR_7
  1619  0075E8  6E0D               	movwf	oled_putString@string^0,c
  1620  0075EA  0E7F               	movlw	high STR_7
  1621  0075EC  6E0E               	movwf	(oled_putString@string+1)^0,c
  1622  0075EE  0E00               	movlw	0
  1623  0075F0  6E0F               	movwf	oled_putString@station_dot^0,c
  1624  0075F2  0E01               	movlw	1
  1625  0075F4  6E10               	movwf	oled_putString@start_page^0,c
  1626  0075F6  EC7E  F037         	call	_oled_putString	;wreg free
  1627  0075FA                     
  1628                           ;main.c: 113:         sprintf(read,"%d",EUSART1_Read());
  1629  0075FA  0EAA               	movlw	low main@read
  1630  0075FC  6E59               	movwf	sprintf@s^0,c
  1631  0075FE  0E00               	movlw	high main@read
  1632  007600  6E5A               	movwf	(sprintf@s+1)^0,c
  1633  007602  0EFC               	movlw	low STR_8
  1634  007604  6E5B               	movwf	sprintf@fmt^0,c
  1635  007606  0E7F               	movlw	high STR_8
  1636  007608  6E5C               	movwf	(sprintf@fmt+1)^0,c
  1637  00760A  EC21  F035         	call	_EUSART1_Read	;wreg free
  1638  00760E  0100               	movlb	0	; () banked
  1639  007610  6F68               	movwf	??_main& (0+255),b
  1640  007612  5168               	movf	??_main& (0+255),w,b
  1641  007614  6E5D               	movwf	(?_sprintf+4)^0,c
  1642  007616  6A5E               	clrf	(?_sprintf+5)^0,c
  1643  007618  EC7F  F036         	call	_sprintf	;wreg free
  1644  00761C                     
  1645                           ;main.c: 114:         sprintf(READ,"%c",get_Data());
  1646  00761C  0E6A               	movlw	low main@READ
  1647  00761E  6E59               	movwf	sprintf@s^0,c
  1648  007620  0E00               	movlw	high main@READ
  1649  007622  6E5A               	movwf	(sprintf@s+1)^0,c
  1650  007624  0EF9               	movlw	low STR_9
  1651  007626  6E5B               	movwf	sprintf@fmt^0,c
  1652  007628  0E7F               	movlw	high STR_9
  1653  00762A  6E5C               	movwf	(sprintf@fmt+1)^0,c
  1654  00762C  EC78  F035         	call	_get_Data	;wreg free
  1655  007630  C001  F05D         	movff	?_get_Data,?_sprintf+4
  1656  007634  C002  F05E         	movff	?_get_Data+1,?_sprintf+5
  1657  007638  EC7F  F036         	call	_sprintf	;wreg free
  1658  00763C                     
  1659                           ;main.c: 115:         oled_putString(read,0,2);
  1660  00763C  0EAA               	movlw	low main@read
  1661  00763E  6E0D               	movwf	oled_putString@string^0,c
  1662  007640  0E00               	movlw	high main@read
  1663  007642  6E0E               	movwf	(oled_putString@string+1)^0,c
  1664  007644  0E00               	movlw	0
  1665  007646  6E0F               	movwf	oled_putString@station_dot^0,c
  1666  007648  0E02               	movlw	2
  1667  00764A  6E10               	movwf	oled_putString@start_page^0,c
  1668  00764C  EC7E  F037         	call	_oled_putString	;wreg free
  1669  007650                     
  1670                           ;main.c: 116:         oled_putString(get_Data(),0,3);
  1671  007650  EC78  F035         	call	_get_Data	;wreg free
  1672  007654  C001  F00D         	movff	?_get_Data,oled_putString@string
  1673  007658  C002  F00E         	movff	?_get_Data+1,oled_putString@string+1
  1674  00765C  0E00               	movlw	0
  1675  00765E  6E0F               	movwf	oled_putString@station_dot^0,c
  1676  007660  0E03               	movlw	3
  1677  007662  6E10               	movwf	oled_putString@start_page^0,c
  1678  007664  EC7E  F037         	call	_oled_putString	;wreg free
  1679  007668                     
  1680                           ;main.c: 117:         LATAbits.LATA7 = 1;
  1681  007668  8E89               	bsf	137,7,c	;volatile
  1682  00766A                     
  1683                           ;main.c: 118:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1684  00766A  0E07               	movlw	7
  1685  00766C  0100               	movlb	0	; () banked
  1686  00766E  6F69               	movwf	(??_main+1)& (0+255),b
  1687  007670  0E17               	movlw	23
  1688  007672  6F68               	movwf	??_main& (0+255),b
  1689  007674  0E6A               	movlw	106
  1690  007676                     u1417:
  1691  007676  2EE8               	decfsz	wreg,f,c
  1692  007678  D7FE               	bra	u1417
  1693  00767A  2F68               	decfsz	??_main& (0+255),f,b
  1694  00767C  D7FC               	bra	u1417
  1695  00767E  2F69               	decfsz	(??_main+1)& (0+255),f,b
  1696  007680  D7FA               	bra	u1417
  1697  007682  F000               	nop	
  1698  007684                     
  1699                           ;main.c: 120:         delayms(3000);
  1700  007684  0E0B               	movlw	11
  1701  007686  6E02               	movwf	(delayms@length+1)^0,c
  1702  007688  0EB8               	movlw	184
  1703  00768A  6E01               	movwf	delayms@length^0,c
  1704  00768C  ECE3  F035         	call	_delayms	;wreg free
  1705  007690                     
  1706                           ;main.c: 121:         oled_clear();
  1707  007690  ECF6  F034         	call	_oled_clear	;wreg free
  1708  007694                     
  1709                           ;main.c: 122:         RN_Leds(0);
  1710  007694  0E00               	movlw	0
  1711  007696  EC86  F038         	call	_RN_Leds
  1712  00769A                     
  1713                           ;main.c: 123:         oled_putString("comando enviado",0,0);
  1714  00769A  0ECD               	movlw	low STR_6
  1715  00769C  6E0D               	movwf	oled_putString@string^0,c
  1716  00769E  0E7F               	movlw	high STR_6
  1717  0076A0  6E0E               	movwf	(oled_putString@string+1)^0,c
  1718  0076A2  0E00               	movlw	0
  1719  0076A4  6E0F               	movwf	oled_putString@station_dot^0,c
  1720  0076A6  0E00               	movlw	0
  1721  0076A8  6E10               	movwf	oled_putString@start_page^0,c
  1722  0076AA  EC7E  F037         	call	_oled_putString	;wreg free
  1723  0076AE                     
  1724                           ;main.c: 124:         oled_putString("Apagado",0,1);
  1725  0076AE  0EF1               	movlw	low STR_11
  1726  0076B0  6E0D               	movwf	oled_putString@string^0,c
  1727  0076B2  0E7F               	movlw	high STR_11
  1728  0076B4  6E0E               	movwf	(oled_putString@string+1)^0,c
  1729  0076B6  0E00               	movlw	0
  1730  0076B8  6E0F               	movwf	oled_putString@station_dot^0,c
  1731  0076BA  0E01               	movlw	1
  1732  0076BC  6E10               	movwf	oled_putString@start_page^0,c
  1733  0076BE  EC7E  F037         	call	_oled_putString	;wreg free
  1734  0076C2                     
  1735                           ;main.c: 125:         sprintf(read,"%d",EUSART1_Read());
  1736  0076C2  0EAA               	movlw	low main@read
  1737  0076C4  6E59               	movwf	sprintf@s^0,c
  1738  0076C6  0E00               	movlw	high main@read
  1739  0076C8  6E5A               	movwf	(sprintf@s+1)^0,c
  1740  0076CA  0EFC               	movlw	low STR_8
  1741  0076CC  6E5B               	movwf	sprintf@fmt^0,c
  1742  0076CE  0E7F               	movlw	high STR_8
  1743  0076D0  6E5C               	movwf	(sprintf@fmt+1)^0,c
  1744  0076D2  EC21  F035         	call	_EUSART1_Read	;wreg free
  1745  0076D6  0100               	movlb	0	; () banked
  1746  0076D8  6F68               	movwf	??_main& (0+255),b
  1747  0076DA  5168               	movf	??_main& (0+255),w,b
  1748  0076DC  6E5D               	movwf	(?_sprintf+4)^0,c
  1749  0076DE  6A5E               	clrf	(?_sprintf+5)^0,c
  1750  0076E0  EC7F  F036         	call	_sprintf	;wreg free
  1751  0076E4                     
  1752                           ;main.c: 126:         sprintf(READ,"%c",get_Data());
  1753  0076E4  0E6A               	movlw	low main@READ
  1754  0076E6  6E59               	movwf	sprintf@s^0,c
  1755  0076E8  0E00               	movlw	high main@READ
  1756  0076EA  6E5A               	movwf	(sprintf@s+1)^0,c
  1757  0076EC  0EF9               	movlw	low STR_9
  1758  0076EE  6E5B               	movwf	sprintf@fmt^0,c
  1759  0076F0  0E7F               	movlw	high STR_9
  1760  0076F2  6E5C               	movwf	(sprintf@fmt+1)^0,c
  1761  0076F4  EC78  F035         	call	_get_Data	;wreg free
  1762  0076F8  C001  F05D         	movff	?_get_Data,?_sprintf+4
  1763  0076FC  C002  F05E         	movff	?_get_Data+1,?_sprintf+5
  1764  007700  EC7F  F036         	call	_sprintf	;wreg free
  1765  007704                     
  1766                           ;main.c: 127:         oled_putString(read,0,2);
  1767  007704  0EAA               	movlw	low main@read
  1768  007706  6E0D               	movwf	oled_putString@string^0,c
  1769  007708  0E00               	movlw	high main@read
  1770  00770A  6E0E               	movwf	(oled_putString@string+1)^0,c
  1771  00770C  0E00               	movlw	0
  1772  00770E  6E0F               	movwf	oled_putString@station_dot^0,c
  1773  007710  0E02               	movlw	2
  1774  007712  6E10               	movwf	oled_putString@start_page^0,c
  1775  007714  EC7E  F037         	call	_oled_putString	;wreg free
  1776  007718                     
  1777                           ;main.c: 128:         oled_putString(READ,0,3);
  1778  007718  0E6A               	movlw	low main@READ
  1779  00771A  6E0D               	movwf	oled_putString@string^0,c
  1780  00771C  0E00               	movlw	high main@READ
  1781  00771E  6E0E               	movwf	(oled_putString@string+1)^0,c
  1782  007720  0E00               	movlw	0
  1783  007722  6E0F               	movwf	oled_putString@station_dot^0,c
  1784  007724  0E03               	movlw	3
  1785  007726  6E10               	movwf	oled_putString@start_page^0,c
  1786  007728  EC7E  F037         	call	_oled_putString	;wreg free
  1787  00772C                     
  1788                           ;main.c: 129:         LATAbits.LATA7 = 0;
  1789  00772C  9E89               	bcf	137,7,c	;volatile
  1790  00772E                     
  1791                           ;main.c: 130:         _delay((unsigned long)((100)*(48000000/4000.0)));
  1792  00772E  0E07               	movlw	7
  1793  007730  0100               	movlb	0	; () banked
  1794  007732  6F69               	movwf	(??_main+1)& (0+255),b
  1795  007734  0E17               	movlw	23
  1796  007736  6F68               	movwf	??_main& (0+255),b
  1797  007738  0E6A               	movlw	106
  1798  00773A                     u1427:
  1799  00773A  2EE8               	decfsz	wreg,f,c
  1800  00773C  D7FE               	bra	u1427
  1801  00773E  2F68               	decfsz	??_main& (0+255),f,b
  1802  007740  D7FC               	bra	u1427
  1803  007742  2F69               	decfsz	(??_main+1)& (0+255),f,b
  1804  007744  D7FA               	bra	u1427
  1805  007746  F000               	nop	
  1806  007748                     
  1807                           ;main.c: 131:         delayms(3000);
  1808  007748  0E0B               	movlw	11
  1809  00774A  6E02               	movwf	(delayms@length+1)^0,c
  1810  00774C  0EB8               	movlw	184
  1811  00774E  6E01               	movwf	delayms@length^0,c
  1812  007750  ECE3  F035         	call	_delayms	;wreg free
  1813  007754  EFE4  F03A         	goto	l2449
  1814  007758  EF00  F000         	goto	start
  1815  00775C                     __end_of_main:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _test_leds *****************
  1819 ;; Defined at:
  1820 ;;		line 50 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 4
  1841 ;; This function calls:
  1842 ;;		_delayms
  1843 ;;		_oled_putString
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text1
  1850  006D50                     __ptext1:
  1851                           	callstack 0
  1852  006D50                     _test_leds:
  1853                           	callstack 26
  1854  006D50                     
  1855                           ;main.c: 52:     oled_putString("LED Test:",0,1);
  1856  006D50  0EDD               	movlw	low STR_1
  1857  006D52  6E0D               	movwf	oled_putString@string^0,c
  1858  006D54  0E7F               	movlw	high STR_1
  1859  006D56  6E0E               	movwf	(oled_putString@string+1)^0,c
  1860  006D58  0E00               	movlw	0
  1861  006D5A  6E0F               	movwf	oled_putString@station_dot^0,c
  1862  006D5C  0E01               	movlw	1
  1863  006D5E  6E10               	movwf	oled_putString@start_page^0,c
  1864  006D60  EC7E  F037         	call	_oled_putString	;wreg free
  1865  006D64                     
  1866                           ;main.c: 54:     LATAbits.LATA6 = 1;
  1867  006D64  8C89               	bsf	137,6,c	;volatile
  1868  006D66                     
  1869                           ;main.c: 55:     LATAbits.LATA7 = 1;
  1870  006D66  8E89               	bsf	137,7,c	;volatile
  1871  006D68                     
  1872                           ;main.c: 56:      delayms(500);
  1873  006D68  0E01               	movlw	1
  1874  006D6A  6E02               	movwf	(delayms@length+1)^0,c
  1875  006D6C  0EF4               	movlw	244
  1876  006D6E  6E01               	movwf	delayms@length^0,c
  1877  006D70  ECE3  F035         	call	_delayms	;wreg free
  1878  006D74                     
  1879                           ;main.c: 57:     LATAbits.LATA6 = 0;
  1880  006D74  9C89               	bcf	137,6,c	;volatile
  1881  006D76                     
  1882                           ;main.c: 58:     LATAbits.LATA7 = 0;
  1883  006D76  9E89               	bcf	137,7,c	;volatile
  1884  006D78                     
  1885                           ;main.c: 59:     delayms(500);
  1886  006D78  0E01               	movlw	1
  1887  006D7A  6E02               	movwf	(delayms@length+1)^0,c
  1888  006D7C  0EF4               	movlw	244
  1889  006D7E  6E01               	movwf	delayms@length^0,c
  1890  006D80  ECE3  F035         	call	_delayms	;wreg free
  1891  006D84                     
  1892                           ;main.c: 60:     LATAbits.LATA6 = 1;
  1893  006D84  8C89               	bsf	137,6,c	;volatile
  1894  006D86                     
  1895                           ;main.c: 61:     LATAbits.LATA7 = 1;
  1896  006D86  8E89               	bsf	137,7,c	;volatile
  1897  006D88                     
  1898                           ;main.c: 62:     delayms(500);
  1899  006D88  0E01               	movlw	1
  1900  006D8A  6E02               	movwf	(delayms@length+1)^0,c
  1901  006D8C  0EF4               	movlw	244
  1902  006D8E  6E01               	movwf	delayms@length^0,c
  1903  006D90  ECE3  F035         	call	_delayms	;wreg free
  1904  006D94                     
  1905                           ;main.c: 63:     LATAbits.LATA6 = 0;
  1906  006D94  9C89               	bcf	137,6,c	;volatile
  1907  006D96                     
  1908                           ;main.c: 64:     LATAbits.LATA7 = 0;
  1909  006D96  9E89               	bcf	137,7,c	;volatile
  1910  006D98                     
  1911                           ;main.c: 65:     delayms(500);
  1912  006D98  0E01               	movlw	1
  1913  006D9A  6E02               	movwf	(delayms@length+1)^0,c
  1914  006D9C  0EF4               	movlw	244
  1915  006D9E  6E01               	movwf	delayms@length^0,c
  1916  006DA0  ECE3  F035         	call	_delayms	;wreg free
  1917  006DA4  0012               	return		;funcret
  1918  006DA6                     __end_of_test_leds:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _oled_putString *****************
  1922 ;; Defined at:
  1923 ;;		line 331 in file "SSD1306oLED.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  string          2   12[COMRAM] PTR const unsigned char 
  1926 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_11(8), 
  1927 ;;		 -> STR_10(16), main@READ(64), main@read(32), STR_7(10), 
  1928 ;;		 -> STR_6(16), STR_1(10), RAM(2047), 
  1929 ;;  station_dot     1   14[COMRAM] unsigned char 
  1930 ;;  start_page      1   15[COMRAM] unsigned char 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  index           1   16[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         4       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1945 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:        5 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 3
  1949 ;; This function calls:
  1950 ;;		_oled_putChar
  1951 ;; This function is called by:
  1952 ;;		_test_leds
  1953 ;;		_main
  1954 ;;		_oled_putUint8
  1955 ;;		_oled_putint8
  1956 ;;		_oled_putUint16
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text2
  1961  006EFC                     __ptext2:
  1962                           	callstack 0
  1963  006EFC                     _oled_putString:
  1964                           	callstack 26
  1965  006EFC                     
  1966                           ;SSD1306oLED.c: 331: void oled_putString(const char *string, uint8_t station_dot, uint8_
      +                          t start_page);SSD1306oLED.c: 332: {;SSD1306oLED.c: 333:     uint8_t index;;SSD1306oLED.c
      +                          : 334:     for(index = station_dot; index < 16; index++)
  1967  006EFC  C00F  F011         	movff	oled_putString@station_dot,oled_putString@index
  1968  006F00                     l2263:
  1969  006F00  0E0F               	movlw	15
  1970  006F02  6411               	cpfsgt	oled_putString@index^0,c
  1971  006F04  EF86  F037         	goto	u1271
  1972  006F08  EF88  F037         	goto	u1270
  1973  006F0C                     u1271:
  1974  006F0C  EF8A  F037         	goto	l2267
  1975  006F10                     u1270:
  1976  006F10  EFBD  F037         	goto	l299
  1977  006F14                     l2267:
  1978                           
  1979                           ;SSD1306oLED.c: 335:     {;SSD1306oLED.c: 336:         if (*string != 0)
  1980  006F14  C00D  FFF6         	movff	oled_putString@string,tblptrl
  1981  006F18  C00E  FFF7         	movff	oled_putString@string+1,tblptrh
  1982  006F1C  6AF8               	clrf	tblptru,c
  1983  006F1E  0E07               	movlw	(high __ramtop+-1)
  1984  006F20  64F7               	cpfsgt	tblptrh,c
  1985  006F22  D003               	bra	u1287
  1986  006F24  0008               	tblrd		*
  1987  006F26  50F5               	movf	tablat,w,c
  1988  006F28  D005               	bra	u1280
  1989  006F2A                     u1287:
  1990  006F2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1991  006F2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1992  006F32  50EF               	movf	indf0,w,c
  1993  006F34                     u1280:
  1994  006F34  0900               	iorlw	0
  1995  006F36  B4D8               	btfsc	status,2,c
  1996  006F38  EFA0  F037         	goto	u1291
  1997  006F3C  EFA2  F037         	goto	u1290
  1998  006F40                     u1291:
  1999  006F40  EFBD  F037         	goto	l299
  2000  006F44                     u1290:
  2001  006F44                     
  2002                           ;SSD1306oLED.c: 337:         {;SSD1306oLED.c: 338:             oled_putChar(*string, ind
      +                          ex, start_page);
  2003  006F44  C011  F003         	movff	oled_putString@index,oled_putChar@station_dot
  2004  006F48  C010  F004         	movff	oled_putString@start_page,oled_putChar@start_page
  2005  006F4C  C00D  FFF6         	movff	oled_putString@string,tblptrl
  2006  006F50  C00E  FFF7         	movff	oled_putString@string+1,tblptrh
  2007  006F54  6AF8               	clrf	tblptru,c
  2008  006F56  0E07               	movlw	(high __ramtop+-1)
  2009  006F58  64F7               	cpfsgt	tblptrh,c
  2010  006F5A  D003               	bra	u1307
  2011  006F5C  0008               	tblrd		*
  2012  006F5E  50F5               	movf	tablat,w,c
  2013  006F60  D005               	bra	u1300
  2014  006F62                     u1307:
  2015  006F62  CFF6 FFE9          	movff	tblptrl,fsr0l
  2016  006F66  CFF7 FFEA          	movff	tblptrh,fsr0h
  2017  006F6A  50EF               	movf	indf0,w,c
  2018  006F6C                     u1300:
  2019  006F6C  EC40  F037         	call	_oled_putChar
  2020  006F70                     
  2021                           ;SSD1306oLED.c: 339:             *string++;
  2022  006F70  4A0D               	infsnz	oled_putString@string^0,f,c
  2023  006F72  2A0E               	incf	(oled_putString@string+1)^0,f,c
  2024  006F74                     
  2025                           ;SSD1306oLED.c: 345:     }
  2026  006F74  2A11               	incf	oled_putString@index^0,f,c
  2027  006F76  EF80  F037         	goto	l2263
  2028  006F7A                     l299:
  2029  006F7A  0012               	return		;funcret
  2030  006F7C                     __end_of_oled_putString:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _delayms *****************
  2034 ;; Defined at:
  2035 ;;		line 24 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  length          2    0[COMRAM] unsigned short 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  counter         2    3[COMRAM] unsigned short 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2049 ;;      Params:         2       0       0       0       0       0       0       0       0
  2050 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2052 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2053 ;;Total ram usage:        5 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_test_leds
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text3
  2064  006BC6                     __ptext3:
  2065                           	callstack 0
  2066  006BC6                     _delayms:
  2067                           	callstack 29
  2068  006BC6                     
  2069                           ;main.c: 24: void delayms(uint16_t length);main.c: 25: {;main.c: 26:     uint16_t counte
      +                          r;;main.c: 27:     for(counter = 0; counter < length; counter++)
  2070  006BC6  0E00               	movlw	0
  2071  006BC8  6E05               	movwf	(delayms@counter+1)^0,c
  2072  006BCA  0E00               	movlw	0
  2073  006BCC  6E04               	movwf	delayms@counter^0,c
  2074  006BCE  EFF3  F035         	goto	l192
  2075  006BD2                     l2249:
  2076                           
  2077                           ;main.c: 28:     {;main.c: 29:         _delay((unsigned long)((1)*(48000000/4000.0)));
  2078  006BD2  0E10               	movlw	16
  2079  006BD4  6E03               	movwf	??_delayms^0,c
  2080  006BD6  0E94               	movlw	148
  2081  006BD8                     u1437:
  2082  006BD8  2EE8               	decfsz	wreg,f,c
  2083  006BDA  D7FE               	bra	u1437
  2084  006BDC  2E03               	decfsz	??_delayms^0,f,c
  2085  006BDE  D7FC               	bra	u1437
  2086  006BE0  D000               	nop2	
  2087  006BE2                     
  2088                           ;main.c: 30:     }
  2089  006BE2  4A04               	infsnz	delayms@counter^0,f,c
  2090  006BE4  2A05               	incf	(delayms@counter+1)^0,f,c
  2091  006BE6                     l192:
  2092  006BE6  5001               	movf	delayms@length^0,w,c
  2093  006BE8  5C04               	subwf	delayms@counter^0,w,c
  2094  006BEA  5002               	movf	(delayms@length+1)^0,w,c
  2095  006BEC  5805               	subwfb	(delayms@counter+1)^0,w,c
  2096  006BEE  A0D8               	btfss	status,0,c
  2097  006BF0  EFFC  F035         	goto	u1251
  2098  006BF4  EFFE  F035         	goto	u1250
  2099  006BF8                     u1251:
  2100  006BF8  EFE9  F035         	goto	l2249
  2101  006BFC                     u1250:
  2102  006BFC  0012               	return		;funcret
  2103  006BFE                     __end_of_delayms:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function _sprintf *****************
  2107 ;; Defined at:
  2108 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  s               2   88[COMRAM] PTR unsigned char 
  2111 ;;		 -> main@READ(64), main@read(32), 
  2112 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  2113 ;;		 -> STR_13(3), STR_12(3), STR_9(3), STR_8(3), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  f               6    2[BANK0 ] struct _IO_FILE
  2116 ;;  ap              2    0[BANK0 ] PTR void [1]
  2117 ;;		 -> ?_sprintf(2), 
  2118 ;;  ret             2    0        int 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2   88[COMRAM] int 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         6       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2131 ;;      Totals:         6       8       0       0       0       0       0       0       0
  2132 ;;Total ram usage:       14 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 7
  2135 ;; This function calls:
  2136 ;;		_vfprintf
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text4
  2143  006CFE                     __ptext4:
  2144                           	callstack 0
  2145  006CFE                     _sprintf:
  2146                           	callstack 23
  2147  006CFE  0E5D               	movlw	low (?_sprintf+4)
  2148  006D00  0100               	movlb	0	; () banked
  2149  006D02  6F60               	movwf	sprintf@ap& (0+255),b
  2150  006D04  0E00               	movlw	high (?_sprintf+4)
  2151  006D06  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  2152  006D08  C059  F062         	movff	sprintf@s,sprintf@f
  2153  006D0C  C05A  F063         	movff	sprintf@s+1,sprintf@f+1
  2154  006D10                     
  2155                           ; BSR set to: 0
  2156  006D10  0E00               	movlw	0
  2157  006D12  6F65               	movwf	(sprintf@f+3)& (0+255),b
  2158  006D14  0E00               	movlw	0
  2159  006D16  6F64               	movwf	(sprintf@f+2)& (0+255),b
  2160  006D18                     
  2161                           ; BSR set to: 0
  2162  006D18  0E00               	movlw	0
  2163  006D1A  6F67               	movwf	(sprintf@f+5)& (0+255),b
  2164  006D1C  0E00               	movlw	0
  2165  006D1E  6F66               	movwf	(sprintf@f+4)& (0+255),b
  2166  006D20                     
  2167                           ; BSR set to: 0
  2168  006D20  0E62               	movlw	low sprintf@f
  2169  006D22  6E51               	movwf	vfprintf@fp^0,c
  2170  006D24  0E00               	movlw	high sprintf@f
  2171  006D26  6E52               	movwf	(vfprintf@fp+1)^0,c
  2172  006D28  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
  2173  006D2C  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2174  006D30  0E60               	movlw	low sprintf@ap
  2175  006D32  6E55               	movwf	vfprintf@ap^0,c
  2176  006D34  0E00               	movlw	high sprintf@ap
  2177  006D36  6E56               	movwf	(vfprintf@ap+1)^0,c
  2178  006D38  ECD3  F036         	call	_vfprintf	;wreg free
  2179  006D3C  0100               	movlb	0	; () banked
  2180  006D3E  5164               	movf	(sprintf@f+2)& (0+255),w,b
  2181  006D40  2459               	addwf	sprintf@s^0,w,c
  2182  006D42  6ED9               	movwf	fsr2l,c
  2183  006D44  5165               	movf	(sprintf@f+3)& (0+255),w,b
  2184  006D46  205A               	addwfc	(sprintf@s+1)^0,w,c
  2185  006D48  6EDA               	movwf	fsr2h,c
  2186  006D4A  0E00               	movlw	0
  2187  006D4C  6EDF               	movwf	indf2,c
  2188  006D4E                     
  2189                           ; BSR set to: 0
  2190  006D4E  0012               	return		;funcret
  2191  006D50                     __end_of_sprintf:
  2192                           	callstack 0
  2193                           
  2194 ;; *************** function _vfprintf *****************
  2195 ;; Defined at:
  2196 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2199 ;;		 -> sprintf@f(6), 
  2200 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2201 ;;		 -> STR_13(3), STR_12(3), STR_9(3), STR_8(3), 
  2202 ;;  ap              2   84[COMRAM] PTR PTR void 
  2203 ;;		 -> sprintf@ap(2), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2206 ;;		 -> STR_13(3), STR_12(3), STR_9(3), STR_8(3), 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2   80[COMRAM] int 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         6       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        8 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 6
  2223 ;; This function calls:
  2224 ;;		_vfpfcnvrt
  2225 ;; This function is called by:
  2226 ;;		_sprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text5
  2231  006DA6                     __ptext5:
  2232                           	callstack 0
  2233  006DA6                     _vfprintf:
  2234                           	callstack 23
  2235  006DA6                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2237  006DA6  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2238  006DAA  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2239  006DAE                     
  2240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2241  006DAE  0E00               	movlw	0
  2242  006DB0  0100               	movlb	0	; () banked
  2243  006DB2  6FCB               	movwf	(_nout+1)& (0+255),b
  2244  006DB4  0E00               	movlw	0
  2245  006DB6  6FCA               	movwf	_nout& (0+255),b
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2248  006DB8  EFF1  F036         	goto	l2329
  2249  006DBC                     l2327:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2253  006DBC  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2254  006DC0  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2255  006DC4  0E57               	movlw	low vfprintf@cfmt
  2256  006DC6  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2257  006DC8  0E00               	movlw	high vfprintf@cfmt
  2258  006DCA  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2259  006DCC  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2260  006DD0  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2261  006DD4  ECAE  F03B         	call	_vfpfcnvrt	;wreg free
  2262  006DD8  5040               	movf	?_vfpfcnvrt^0,w,c
  2263  006DDA  0100               	movlb	0	; () banked
  2264  006DDC  27CA               	addwf	_nout& (0+255),f,b
  2265  006DDE  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2266  006DE0  23CB               	addwfc	(_nout+1)& (0+255),f,b
  2267  006DE2                     l2329:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2271  006DE2  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2272  006DE6  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2273  006DEA                     	if	0	;tblptru may be non-zero
  2274  006DEA                     	endif
  2275  006DEA                     	if	0	;tblptru may be non-zero
  2276  006DEA                     	endif
  2277  006DEA  0008               	tblrd		*
  2278  006DEC  50F5               	movf	tablat,w,c
  2279  006DEE  0900               	iorlw	0
  2280  006DF0  A4D8               	btfss	status,2,c
  2281  006DF2  EFFD  F036         	goto	u1331
  2282  006DF6  EFFF  F036         	goto	u1330
  2283  006DFA                     u1331:
  2284  006DFA  EFDE  F036         	goto	l2327
  2285  006DFE                     u1330:
  2286  006DFE                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2289  006DFE  C0CA  F051         	movff	_nout,?_vfprintf
  2290  006E02  C0CB  F052         	movff	_nout+1,?_vfprintf+1
  2291  006E06                     
  2292                           ; BSR set to: 0
  2293  006E06  0012               	return		;funcret
  2294  006E08                     __end_of_vfprintf:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _vfpfcnvrt *****************
  2298 ;; Defined at:
  2299 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2302 ;;		 -> sprintf@f(6), 
  2303 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2304 ;;		 -> vfprintf@cfmt(2), 
  2305 ;;  ap              2   67[COMRAM] PTR PTR void 
  2306 ;;		 -> sprintf@ap(2), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  ll              8   71[COMRAM] long long 
  2309 ;;  llu             8    0        unsigned long long 
  2310 ;;  f               4    0        unsigned long long 
  2311 ;;  vp              3    0        PTR void 
  2312 ;;  ct              3    0        unsigned char [3]
  2313 ;;  cp              3    0        PTR unsigned char 
  2314 ;;  i               2    0        int 
  2315 ;;  done            2    0        int 
  2316 ;;  c               1   79[COMRAM] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  2   63[COMRAM] int 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2326 ;;      Params:         6       0       0       0       0       0       0       0       0
  2327 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2328 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2329 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:       17 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 5
  2333 ;; This function calls:
  2334 ;;		_ctoa
  2335 ;;		_dtoa
  2336 ;;		_fputc
  2337 ;; This function is called by:
  2338 ;;		_vfprintf
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text6
  2343  00775C                     __ptext6:
  2344                           	callstack 0
  2345  00775C                     _vfpfcnvrt:
  2346                           	callstack 23
  2347  00775C                     
  2348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2349  00775C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350  007760  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351  007764  CFDE FFF6          	movff	postinc2,tblptrl
  2352  007768  CFDD FFF7          	movff	postdec2,tblptrh
  2353  00776C                     	if	0	;tblptru may be non-zero
  2354  00776C                     	endif
  2355  00776C                     	if	0	;tblptru may be non-zero
  2356  00776C                     	endif
  2357  00776C  0008               	tblrd		*
  2358  00776E  50F5               	movf	tablat,w,c
  2359  007770  0A25               	xorlw	37
  2360  007772  A4D8               	btfss	status,2,c
  2361  007774  EFBE  F03B         	goto	u1191
  2362  007778  EFC0  F03B         	goto	u1190
  2363  00777C                     u1191:
  2364  00777C  EFA5  F03C         	goto	l2215
  2365  007780                     u1190:
  2366  007780                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2368  007780  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2369  007784  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2370  007788  2ADE               	incf	postinc2,f,c
  2371  00778A  0E00               	movlw	0
  2372  00778C  22DD               	addwfc	postdec2,f,c
  2373  00778E                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2375  00778E  0E00               	movlw	0
  2376  007790  0100               	movlb	0	; () banked
  2377  007792  6FCD               	movwf	(_width+1)& (0+255),b
  2378  007794  0E00               	movlw	0
  2379  007796  6FCC               	movwf	_width& (0+255),b
  2380  007798  C0CC  F0D0         	movff	_width,_flags
  2381  00779C  C0CD  F0D1         	movff	_width+1,_flags+1
  2382  0077A0                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2385  0077A0  69CE               	setf	_prec& (0+255),b
  2386  0077A2  69CF               	setf	(_prec+1)& (0+255),b
  2387  0077A4                     
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2390  0077A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391  0077A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392  0077AC  CFDE FFF6          	movff	postinc2,tblptrl
  2393  0077B0  CFDD FFF7          	movff	postdec2,tblptrh
  2394  0077B4                     	if	0	;tblptru may be non-zero
  2395  0077B4                     	endif
  2396  0077B4                     	if	0	;tblptru may be non-zero
  2397  0077B4                     	endif
  2398  0077B4  0008               	tblrd		*
  2399  0077B6  50F5               	movf	tablat,w,c
  2400  0077B8  0A63               	xorlw	99
  2401  0077BA  A4D8               	btfss	status,2,c
  2402  0077BC  EFE2  F03B         	goto	u1201
  2403  0077C0  EFE4  F03B         	goto	u1200
  2404  0077C4                     u1201:
  2405  0077C4  EF0B  F03C         	goto	l2189
  2406  0077C8                     u1200:
  2407  0077C8                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2410  0077C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  0077CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  0077D0  2ADE               	incf	postinc2,f,c
  2413  0077D2  0E00               	movlw	0
  2414  0077D4  22DD               	addwfc	postdec2,f,c
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2417  0077D6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2418  0077DA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2419  0077DE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2420  0077E2  0E02               	movlw	2
  2421  0077E4  26DE               	addwf	postinc2,f,c
  2422  0077E6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2423  0077EA  0E00               	movlw	0
  2424  0077EC  22DD               	addwfc	postdec2,f,c
  2425  0077EE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2426  0077F2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2427  0077F6  50DF               	movf	indf2,w,c
  2428  0077F8  6E50               	movwf	vfpfcnvrt@c^0,c
  2429  0077FA                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2432  0077FA  C040  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2433  0077FE  C041  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2434  007802  C050  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2435  007806  ECF2  F038         	call	_ctoa	;wreg free
  2436  00780A  C00A  F040         	movff	?_ctoa,?_vfpfcnvrt
  2437  00780E  C00B  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2438  007812  EFC0  F03C         	goto	l1099
  2439  007816                     l2189:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2443  007816  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444  00781A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445  00781E  CFDE FFF6          	movff	postinc2,tblptrl
  2446  007822  CFDD FFF7          	movff	postdec2,tblptrh
  2447  007826                     	if	0	;tblptru may be non-zero
  2448  007826                     	endif
  2449  007826                     	if	0	;tblptru may be non-zero
  2450  007826                     	endif
  2451  007826  0008               	tblrd		*
  2452  007828  50F5               	movf	tablat,w,c
  2453  00782A  0A64               	xorlw	100
  2454  00782C  B4D8               	btfsc	status,2,c
  2455  00782E  EF1B  F03C         	goto	u1211
  2456  007832  EF1D  F03C         	goto	u1210
  2457  007836                     u1211:
  2458  007836  EF2F  F03C         	goto	l2193
  2459  00783A                     u1210:
  2460  00783A                     
  2461                           ; BSR set to: 0
  2462  00783A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463  00783E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464  007842  CFDE FFF6          	movff	postinc2,tblptrl
  2465  007846  CFDD FFF7          	movff	postdec2,tblptrh
  2466  00784A                     	if	0	;tblptru may be non-zero
  2467  00784A                     	endif
  2468  00784A                     	if	0	;tblptru may be non-zero
  2469  00784A                     	endif
  2470  00784A  0008               	tblrd		*
  2471  00784C  50F5               	movf	tablat,w,c
  2472  00784E  0A69               	xorlw	105
  2473  007850  A4D8               	btfss	status,2,c
  2474  007852  EF2D  F03C         	goto	u1221
  2475  007856  EF2F  F03C         	goto	u1220
  2476  00785A                     u1221:
  2477  00785A  EF6F  F03C         	goto	l2199
  2478  00785E                     u1220:
  2479  00785E                     l2193:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2483  00785E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484  007862  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485  007866  2ADE               	incf	postinc2,f,c
  2486  007868  0E00               	movlw	0
  2487  00786A  22DD               	addwfc	postdec2,f,c
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2490  00786C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2491  007870  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2492  007874  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2493  007878  0E02               	movlw	2
  2494  00787A  26DE               	addwf	postinc2,f,c
  2495  00787C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2496  007880  0E00               	movlw	0
  2497  007882  22DD               	addwfc	postdec2,f,c
  2498  007884  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2499  007888  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2500  00788C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2501  007890  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2502  007894  0E00               	movlw	0
  2503  007896  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2504  007898  0EFF               	movlw	-1
  2505  00789A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2506  00789C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2507  00789E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2508  0078A0  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2509  0078A2  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2510  0078A4  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2511  0078A6                     
  2512                           ; BSR set to: 0
  2513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2514  0078A6  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2515  0078AA  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2516  0078AE  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2517  0078B2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2518  0078B6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2519  0078BA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2520  0078BE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2521  0078C2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2522  0078C6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2523  0078CA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2524  0078CE  ECC1  F03C         	call	_dtoa	;wreg free
  2525  0078D2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2526  0078D6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2527  0078DA  EFC0  F03C         	goto	l1099
  2528  0078DE                     l2199:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2532  0078DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2533  0078E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2534  0078E6  CFDE FFF6          	movff	postinc2,tblptrl
  2535  0078EA  CFDD FFF7          	movff	postdec2,tblptrh
  2536  0078EE                     	if	0	;tblptru may be non-zero
  2537  0078EE                     	endif
  2538  0078EE                     	if	0	;tblptru may be non-zero
  2539  0078EE                     	endif
  2540  0078EE  0008               	tblrd		*
  2541  0078F0  50F5               	movf	tablat,w,c
  2542  0078F2  0A25               	xorlw	37
  2543  0078F4  A4D8               	btfss	status,2,c
  2544  0078F6  EF7F  F03C         	goto	u1231
  2545  0078FA  EF81  F03C         	goto	u1230
  2546  0078FE                     u1231:
  2547  0078FE  EF98  F03C         	goto	l2209
  2548  007902                     u1230:
  2549  007902                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2552  007902  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2553  007906  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2554  00790A  2ADE               	incf	postinc2,f,c
  2555  00790C  0E00               	movlw	0
  2556  00790E  22DD               	addwfc	postdec2,f,c
  2557  007910                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2560  007910  0E00               	movlw	0
  2561  007912  6E02               	movwf	(fputc@c+1)^0,c
  2562  007914  0E25               	movlw	37
  2563  007916  6E01               	movwf	fputc@c^0,c
  2564  007918  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2565  00791C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2566  007920  EC21  F038         	call	_fputc	;wreg free
  2567  007924                     l2205:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2570  007924  0E00               	movlw	0
  2571  007926  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2572  007928  0E01               	movlw	1
  2573  00792A  6E40               	movwf	?_vfpfcnvrt^0,c
  2574  00792C  EFC0  F03C         	goto	l1099
  2575  007930                     l2209:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2579  007930  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  007934  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  007938  2ADE               	incf	postinc2,f,c
  2582  00793A  0E00               	movlw	0
  2583  00793C  22DD               	addwfc	postdec2,f,c
  2584  00793E                     
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2587  00793E  0E00               	movlw	0
  2588  007940  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2589  007942  0E00               	movlw	0
  2590  007944  6E40               	movwf	?_vfpfcnvrt^0,c
  2591  007946  EFC0  F03C         	goto	l1099
  2592  00794A                     l2215:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2595  00794A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2596  00794E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2597  007952  CFDE FFF6          	movff	postinc2,tblptrl
  2598  007956  CFDD FFF7          	movff	postdec2,tblptrh
  2599  00795A                     	if	0	;tblptru may be non-zero
  2600  00795A                     	endif
  2601  00795A                     	if	0	;tblptru may be non-zero
  2602  00795A                     	endif
  2603  00795A  0008               	tblrd		*
  2604  00795C  50F5               	movf	tablat,w,c
  2605  00795E  6E01               	movwf	fputc@c^0,c
  2606  007960  6A02               	clrf	(fputc@c+1)^0,c
  2607  007962  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2608  007966  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2609  00796A  EC21  F038         	call	_fputc	;wreg free
  2610  00796E                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2612  00796E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2613  007972  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2614  007976  2ADE               	incf	postinc2,f,c
  2615  007978  0E00               	movlw	0
  2616  00797A  22DD               	addwfc	postdec2,f,c
  2617  00797C  EF92  F03C         	goto	l2205
  2618  007980                     l1099:
  2619  007980  0012               	return		;funcret
  2620  007982                     __end_of_vfpfcnvrt:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _dtoa *****************
  2624 ;; Defined at:
  2625 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2628 ;;		 -> sprintf@f(6), 
  2629 ;;  d               8   29[COMRAM] long long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  n               8   53[COMRAM] long long 
  2632 ;;  i               2   61[COMRAM] int 
  2633 ;;  s               2   51[COMRAM] int 
  2634 ;;  w               2   49[COMRAM] int 
  2635 ;;  p               2   47[COMRAM] int 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  2   27[COMRAM] int 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2645 ;;      Params:        10       0       0       0       0       0       0       0       0
  2646 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2647 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2648 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2649 ;;Total ram usage:       36 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 4
  2652 ;; This function calls:
  2653 ;;		___aodiv
  2654 ;;		___aomod
  2655 ;;		_abs
  2656 ;;		_pad
  2657 ;; This function is called by:
  2658 ;;		_vfpfcnvrt
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text7
  2663  007982                     __ptext7:
  2664                           	callstack 0
  2665  007982                     _dtoa:
  2666                           	callstack 23
  2667  007982                     
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2669  007982  C01E  F036         	movff	dtoa@d,dtoa@n
  2670  007986  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2671  00798A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2672  00798E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2673  007992  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2674  007996  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2675  00799A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2676  00799E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2677  0079A2                     
  2678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2679  0079A2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2680  0079A4  EFD6  F03C         	goto	u1021
  2681  0079A8  EFD9  F03C         	goto	u1020
  2682  0079AC                     u1021:
  2683  0079AC  0E01               	movlw	1
  2684  0079AE  EFDA  F03C         	goto	u1030
  2685  0079B2                     u1020:
  2686  0079B2  0E00               	movlw	0
  2687  0079B4                     u1030:
  2688  0079B4  6E34               	movwf	dtoa@s^0,c
  2689  0079B6  6A35               	clrf	(dtoa@s+1)^0,c
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2692  0079B8  5034               	movf	dtoa@s^0,w,c
  2693  0079BA  1035               	iorwf	(dtoa@s+1)^0,w,c
  2694  0079BC  B4D8               	btfsc	status,2,c
  2695  0079BE  EFE3  F03C         	goto	u1041
  2696  0079C2  EFE5  F03C         	goto	u1040
  2697  0079C6                     u1041:
  2698  0079C6  EFF5  F03C         	goto	l2075
  2699  0079CA                     u1040:
  2700  0079CA                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2702  0079CA  1E3D               	comf	(dtoa@n+7)^0,f,c
  2703  0079CC  1E3C               	comf	(dtoa@n+6)^0,f,c
  2704  0079CE  1E3B               	comf	(dtoa@n+5)^0,f,c
  2705  0079D0  1E3A               	comf	(dtoa@n+4)^0,f,c
  2706  0079D2  1E39               	comf	(dtoa@n+3)^0,f,c
  2707  0079D4  1E38               	comf	(dtoa@n+2)^0,f,c
  2708  0079D6  1E37               	comf	(dtoa@n+1)^0,f,c
  2709  0079D8  6C36               	negf	dtoa@n^0,c
  2710  0079DA  0E00               	movlw	0
  2711  0079DC  2237               	addwfc	(dtoa@n+1)^0,f,c
  2712  0079DE  2238               	addwfc	(dtoa@n+2)^0,f,c
  2713  0079E0  2239               	addwfc	(dtoa@n+3)^0,f,c
  2714  0079E2  223A               	addwfc	(dtoa@n+4)^0,f,c
  2715  0079E4  223B               	addwfc	(dtoa@n+5)^0,f,c
  2716  0079E6  223C               	addwfc	(dtoa@n+6)^0,f,c
  2717  0079E8  223D               	addwfc	(dtoa@n+7)^0,f,c
  2718  0079EA                     l2075:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2721  0079EA  0100               	movlb	0	; () banked
  2722  0079EC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  2723  0079EE  EFFB  F03C         	goto	u1051
  2724  0079F2  EFFD  F03C         	goto	u1050
  2725  0079F6                     u1051:
  2726  0079F6  EFFE  F03C         	goto	l2079
  2727  0079FA                     u1050:
  2728  0079FA                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2731  0079FA  93D0               	bcf	_flags& (0+255),1,b
  2732  0079FC                     l2079:
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2736  0079FC  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  2737  0079FE  EF0B  F03D         	goto	u1060
  2738  007A02  51CF               	movf	(_prec+1)& (0+255),w,b
  2739  007A04  E106               	bnz	u1061
  2740  007A06  05CE               	decf	_prec& (0+255),w,b
  2741  007A08  B0D8               	btfsc	status,0,c
  2742  007A0A  EF09  F03D         	goto	u1061
  2743  007A0E  EF0B  F03D         	goto	u1060
  2744  007A12                     u1061:
  2745  007A12  EF11  F03D         	goto	l1074
  2746  007A16                     u1060:
  2747  007A16                     
  2748                           ; BSR set to: 0
  2749  007A16  0E00               	movlw	0
  2750  007A18  6E31               	movwf	(dtoa@p+1)^0,c
  2751  007A1A  0E01               	movlw	1
  2752  007A1C  6E30               	movwf	dtoa@p^0,c
  2753  007A1E  EF15  F03D         	goto	l1076
  2754  007A22                     l1074:
  2755                           
  2756                           ; BSR set to: 0
  2757  007A22  C0CE  F030         	movff	_prec,dtoa@p
  2758  007A26  C0CF  F031         	movff	_prec+1,dtoa@p+1
  2759  007A2A                     l1076:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2763  007A2A  C0CC  F032         	movff	_width,dtoa@w
  2764  007A2E  C0CD  F033         	movff	_width+1,dtoa@w+1
  2765  007A32                     
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2768  007A32  5034               	movf	dtoa@s^0,w,c
  2769  007A34  1035               	iorwf	(dtoa@s+1)^0,w,c
  2770  007A36  A4D8               	btfss	status,2,c
  2771  007A38  EF20  F03D         	goto	u1071
  2772  007A3C  EF22  F03D         	goto	u1070
  2773  007A40                     u1071:
  2774  007A40  EF29  F03D         	goto	l2087
  2775  007A44                     u1070:
  2776  007A44                     
  2777                           ; BSR set to: 0
  2778  007A44  A5D0               	btfss	_flags& (0+255),2,b
  2779  007A46  EF27  F03D         	goto	u1081
  2780  007A4A  EF29  F03D         	goto	u1080
  2781  007A4E                     u1081:
  2782  007A4E  EF2C  F03D         	goto	l2089
  2783  007A52                     u1080:
  2784  007A52                     l2087:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2788  007A52  0632               	decf	dtoa@w^0,f,c
  2789  007A54  A0D8               	btfss	status,0,c
  2790  007A56  0633               	decf	(dtoa@w+1)^0,f,c
  2791  007A58                     l2089:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2795  007A58  0E00               	movlw	0
  2796  007A5A  6E3F               	movwf	(dtoa@i+1)^0,c
  2797  007A5C  0E1F               	movlw	31
  2798  007A5E  6E3E               	movwf	dtoa@i^0,c
  2799  007A60                     
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2802  007A60  0E00               	movlw	0
  2803  007A62  6FF9               	movwf	(_dbuf+31)& (0+255),b
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2806  007A64  EFB0  F03D         	goto	l2103
  2807  007A68                     l2093:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2810  007A68  063E               	decf	dtoa@i^0,f,c
  2811  007A6A  A0D8               	btfss	status,0,c
  2812  007A6C  063F               	decf	(dtoa@i+1)^0,f,c
  2813  007A6E                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2815  007A6E  0EDA               	movlw	low _dbuf
  2816  007A70  243E               	addwf	dtoa@i^0,w,c
  2817  007A72  6ED9               	movwf	fsr2l,c
  2818  007A74  0E00               	movlw	high _dbuf
  2819  007A76  203F               	addwfc	(dtoa@i+1)^0,w,c
  2820  007A78  6EDA               	movwf	fsr2h,c
  2821  007A7A  C036  F001         	movff	dtoa@n,___aomod@dividend
  2822  007A7E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2823  007A82  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2824  007A86  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2825  007A8A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2826  007A8E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2827  007A92  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2828  007A96  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2829  007A9A  0E0A               	movlw	10
  2830  007A9C  6E09               	movwf	___aomod@divisor^0,c
  2831  007A9E  0E00               	movlw	0
  2832  007AA0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2833  007AA2  0E00               	movlw	0
  2834  007AA4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2835  007AA6  0E00               	movlw	0
  2836  007AA8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2837  007AAA  0E00               	movlw	0
  2838  007AAC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2839  007AAE  0E00               	movlw	0
  2840  007AB0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2841  007AB2  0E00               	movlw	0
  2842  007AB4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2843  007AB6  0E00               	movlw	0
  2844  007AB8  6E10               	movwf	(___aomod@divisor+7)^0,c
  2845  007ABA  EC5E  F039         	call	___aomod	;wreg free
  2846  007ABE  C001  F026         	movff	?___aomod,??_dtoa
  2847  007AC2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2848  007AC6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2849  007ACA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2850  007ACE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2851  007AD2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2852  007AD6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2853  007ADA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2854  007ADE  C026  F013         	movff	??_dtoa,abs@a
  2855  007AE2  C028  F014         	movff	??_dtoa+2,abs@a+1
  2856  007AE6  EC3D  F036         	call	_abs	;wreg free
  2857  007AEA  5013               	movf	?_abs^0,w,c
  2858  007AEC  0F30               	addlw	48
  2859  007AEE  6EDF               	movwf	indf2,c
  2860  007AF0                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2862  007AF0  0630               	decf	dtoa@p^0,f,c
  2863  007AF2  A0D8               	btfss	status,0,c
  2864  007AF4  0631               	decf	(dtoa@p+1)^0,f,c
  2865  007AF6                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2867  007AF6  0632               	decf	dtoa@w^0,f,c
  2868  007AF8  A0D8               	btfss	status,0,c
  2869  007AFA  0633               	decf	(dtoa@w+1)^0,f,c
  2870  007AFC                     
  2871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2872  007AFC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2873  007B00  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2874  007B04  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2875  007B08  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2876  007B0C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2877  007B10  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2878  007B14  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2879  007B18  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2880  007B1C  0E0A               	movlw	10
  2881  007B1E  6E09               	movwf	___aodiv@divisor^0,c
  2882  007B20  0E00               	movlw	0
  2883  007B22  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2884  007B24  0E00               	movlw	0
  2885  007B26  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2886  007B28  0E00               	movlw	0
  2887  007B2A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2888  007B2C  0E00               	movlw	0
  2889  007B2E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2890  007B30  0E00               	movlw	0
  2891  007B32  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2892  007B34  0E00               	movlw	0
  2893  007B36  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2894  007B38  0E00               	movlw	0
  2895  007B3A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2896  007B3C  EC10  F03A         	call	___aodiv	;wreg free
  2897  007B40  C001  F036         	movff	?___aodiv,dtoa@n
  2898  007B44  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2899  007B48  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2900  007B4C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2901  007B50  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2902  007B54  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2903  007B58  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2904  007B5C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2905  007B60                     l2103:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2908  007B60  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2909  007B62  EFBB  F03D         	goto	u1091
  2910  007B66  503F               	movf	(dtoa@i+1)^0,w,c
  2911  007B68  E108               	bnz	u1090
  2912  007B6A  043E               	decf	dtoa@i^0,w,c
  2913  007B6C  A0D8               	btfss	status,0,c
  2914  007B6E  EFBB  F03D         	goto	u1091
  2915  007B72  EFBD  F03D         	goto	u1090
  2916  007B76                     u1091:
  2917  007B76  EFEE  F03D         	goto	l2113
  2918  007B7A                     u1090:
  2919  007B7A  5036               	movf	dtoa@n^0,w,c
  2920  007B7C  1037               	iorwf	(dtoa@n+1)^0,w,c
  2921  007B7E  1038               	iorwf	(dtoa@n+2)^0,w,c
  2922  007B80  1039               	iorwf	(dtoa@n+3)^0,w,c
  2923  007B82  103A               	iorwf	(dtoa@n+4)^0,w,c
  2924  007B84  103B               	iorwf	(dtoa@n+5)^0,w,c
  2925  007B86  103C               	iorwf	(dtoa@n+6)^0,w,c
  2926  007B88  103D               	iorwf	(dtoa@n+7)^0,w,c
  2927  007B8A  A4D8               	btfss	status,2,c
  2928  007B8C  EFCA  F03D         	goto	u1101
  2929  007B90  EFCC  F03D         	goto	u1100
  2930  007B94                     u1101:
  2931  007B94  EF34  F03D         	goto	l2093
  2932  007B98                     u1100:
  2933  007B98  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2934  007B9A  EFD9  F03D         	goto	u1110
  2935  007B9E  5031               	movf	(dtoa@p+1)^0,w,c
  2936  007BA0  E106               	bnz	u1111
  2937  007BA2  0430               	decf	dtoa@p^0,w,c
  2938  007BA4  B0D8               	btfsc	status,0,c
  2939  007BA6  EFD7  F03D         	goto	u1111
  2940  007BAA  EFD9  F03D         	goto	u1110
  2941  007BAE                     u1111:
  2942  007BAE  EF34  F03D         	goto	l2093
  2943  007BB2                     u1110:
  2944  007BB2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2945  007BB4  EFE4  F03D         	goto	u1121
  2946  007BB8  5033               	movf	(dtoa@w+1)^0,w,c
  2947  007BBA  E108               	bnz	u1120
  2948  007BBC  0432               	decf	dtoa@w^0,w,c
  2949  007BBE  A0D8               	btfss	status,0,c
  2950  007BC0  EFE4  F03D         	goto	u1121
  2951  007BC4  EFE6  F03D         	goto	u1120
  2952  007BC8                     u1121:
  2953  007BC8  EFEE  F03D         	goto	l2113
  2954  007BCC                     u1120:
  2955  007BCC  0100               	movlb	0	; () banked
  2956  007BCE  B3D0               	btfsc	_flags& (0+255),1,b
  2957  007BD0  EFEC  F03D         	goto	u1131
  2958  007BD4  EFEE  F03D         	goto	u1130
  2959  007BD8                     u1131:
  2960  007BD8  EF34  F03D         	goto	l2093
  2961  007BDC                     u1130:
  2962  007BDC                     l2113:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2965  007BDC  5034               	movf	dtoa@s^0,w,c
  2966  007BDE  1035               	iorwf	(dtoa@s+1)^0,w,c
  2967  007BE0  A4D8               	btfss	status,2,c
  2968  007BE2  EFF5  F03D         	goto	u1141
  2969  007BE6  EFF7  F03D         	goto	u1140
  2970  007BEA                     u1141:
  2971  007BEA  EFFF  F03D         	goto	l2117
  2972  007BEE                     u1140:
  2973  007BEE  0100               	movlb	0	; () banked
  2974  007BF0  A5D0               	btfss	_flags& (0+255),2,b
  2975  007BF2  EFFD  F03D         	goto	u1151
  2976  007BF6  EFFF  F03D         	goto	u1150
  2977  007BFA                     u1151:
  2978  007BFA  EF1D  F03E         	goto	l2127
  2979  007BFE                     u1150:
  2980  007BFE                     l2117:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2983  007BFE  063E               	decf	dtoa@i^0,f,c
  2984  007C00  A0D8               	btfss	status,0,c
  2985  007C02  063F               	decf	(dtoa@i+1)^0,f,c
  2986  007C04                     
  2987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2988  007C04  5034               	movf	dtoa@s^0,w,c
  2989  007C06  1035               	iorwf	(dtoa@s+1)^0,w,c
  2990  007C08  A4D8               	btfss	status,2,c
  2991  007C0A  EF09  F03E         	goto	u1161
  2992  007C0E  EF0B  F03E         	goto	u1160
  2993  007C12                     u1161:
  2994  007C12  EF11  F03E         	goto	l2123
  2995  007C16                     u1160:
  2996  007C16  0E00               	movlw	0
  2997  007C18  6E2F               	movwf	(_dtoa$1539+1)^0,c
  2998  007C1A  0E2B               	movlw	43
  2999  007C1C  6E2E               	movwf	_dtoa$1539^0,c
  3000  007C1E  EF15  F03E         	goto	l2125
  3001  007C22                     l2123:
  3002  007C22  0E00               	movlw	0
  3003  007C24  6E2F               	movwf	(_dtoa$1539+1)^0,c
  3004  007C26  0E2D               	movlw	45
  3005  007C28  6E2E               	movwf	_dtoa$1539^0,c
  3006  007C2A                     l2125:
  3007  007C2A  0EDA               	movlw	low _dbuf
  3008  007C2C  243E               	addwf	dtoa@i^0,w,c
  3009  007C2E  6ED9               	movwf	fsr2l,c
  3010  007C30  0E00               	movlw	high _dbuf
  3011  007C32  203F               	addwfc	(dtoa@i+1)^0,w,c
  3012  007C34  6EDA               	movwf	fsr2h,c
  3013  007C36  C02E  FFDF         	movff	_dtoa$1539,indf2
  3014  007C3A                     l2127:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3017  007C3A  C01C  F011         	movff	dtoa@fp,pad@fp
  3018  007C3E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3019  007C42  0EDA               	movlw	low _dbuf
  3020  007C44  243E               	addwf	dtoa@i^0,w,c
  3021  007C46  6E13               	movwf	pad@buf^0,c
  3022  007C48  0E00               	movlw	high _dbuf
  3023  007C4A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3024  007C4C  6E14               	movwf	(pad@buf+1)^0,c
  3025  007C4E  C032  F015         	movff	dtoa@w,pad@p
  3026  007C52  C033  F016         	movff	dtoa@w+1,pad@p+1
  3027  007C56  ECBE  F037         	call	_pad	;wreg free
  3028  007C5A  C011  F01C         	movff	?_pad,?_dtoa
  3029  007C5E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3030  007C62  0012               	return		;funcret
  3031  007C64                     __end_of_dtoa:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _pad *****************
  3035 ;; Defined at:
  3036 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3039 ;;		 -> sprintf@f(6), 
  3040 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3041 ;;		 -> dbuf(32), 
  3042 ;;  p               2   20[COMRAM] int 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  w               2   25[COMRAM] int 
  3045 ;;  i               2   23[COMRAM] int 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2   16[COMRAM] int 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3055 ;;      Params:         6       0       0       0       0       0       0       0       0
  3056 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3057 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3058 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:       11 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 3
  3062 ;; This function calls:
  3063 ;;		_fputc
  3064 ;;		_fputs
  3065 ;;		_strlen
  3066 ;; This function is called by:
  3067 ;;		_dtoa
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text8
  3072  006F7C                     __ptext8:
  3073                           	callstack 0
  3074  006F7C                     _pad:
  3075                           	callstack 23
  3076  006F7C                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3078  006F7C  0100               	movlb	0	; () banked
  3079  006F7E  A1D0               	btfss	_flags& (0+255),0,b
  3080  006F80  EFC4  F037         	goto	u911
  3081  006F84  EFC6  F037         	goto	u910
  3082  006F88                     u911:
  3083  006F88  EFD0  F037         	goto	l2003
  3084  006F8C                     u910:
  3085  006F8C                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3088  006F8C  C013  F00A         	movff	pad@buf,fputs@s
  3089  006F90  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3090  006F94  C011  F00C         	movff	pad@fp,fputs@fp
  3091  006F98  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3092  006F9C  EC5D  F036         	call	_fputs	;wreg free
  3093  006FA0                     l2003:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3096  006FA0  BE16               	btfsc	(pad@p+1)^0,7,c
  3097  006FA2  EFD5  F037         	goto	u921
  3098  006FA6  EFD7  F037         	goto	u920
  3099  006FAA                     u921:
  3100  006FAA  EFDD  F037         	goto	l2007
  3101  006FAE                     u920:
  3102  006FAE  C015  F01A         	movff	pad@p,pad@w
  3103  006FB2  C016  F01B         	movff	pad@p+1,pad@w+1
  3104  006FB6  EFE1  F037         	goto	l1047
  3105  006FBA                     l2007:
  3106  006FBA  0E00               	movlw	0
  3107  006FBC  6E1B               	movwf	(pad@w+1)^0,c
  3108  006FBE  0E00               	movlw	0
  3109  006FC0  6E1A               	movwf	pad@w^0,c
  3110  006FC2                     l1047:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3113  006FC2  0E00               	movlw	0
  3114  006FC4  6E19               	movwf	(pad@i+1)^0,c
  3115  006FC6  0E00               	movlw	0
  3116  006FC8  6E18               	movwf	pad@i^0,c
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3119  006FCA  EFF3  F037         	goto	l2013
  3120  006FCE                     l2009:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3123  006FCE  0E00               	movlw	0
  3124  006FD0  6E02               	movwf	(fputc@c+1)^0,c
  3125  006FD2  0E20               	movlw	32
  3126  006FD4  6E01               	movwf	fputc@c^0,c
  3127  006FD6  C011  F003         	movff	pad@fp,fputc@fp
  3128  006FDA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3129  006FDE  EC21  F038         	call	_fputc	;wreg free
  3130  006FE2                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3132  006FE2  4A18               	infsnz	pad@i^0,f,c
  3133  006FE4  2A19               	incf	(pad@i+1)^0,f,c
  3134  006FE6                     l2013:
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3137  006FE6  501A               	movf	pad@w^0,w,c
  3138  006FE8  5C18               	subwf	pad@i^0,w,c
  3139  006FEA  5019               	movf	(pad@i+1)^0,w,c
  3140  006FEC  0A80               	xorlw	128
  3141  006FEE  6E17               	movwf	??_pad^0,c
  3142  006FF0  501B               	movf	(pad@w+1)^0,w,c
  3143  006FF2  0A80               	xorlw	128
  3144  006FF4  5817               	subwfb	??_pad^0,w,c
  3145  006FF6  A0D8               	btfss	status,0,c
  3146  006FF8  EF00  F038         	goto	u931
  3147  006FFC  EF02  F038         	goto	u930
  3148  007000                     u931:
  3149  007000  EFE7  F037         	goto	l2009
  3150  007004                     u930:
  3151  007004                     
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3153  007004  0100               	movlb	0	; () banked
  3154  007006  B1D0               	btfsc	_flags& (0+255),0,b
  3155  007008  EF08  F038         	goto	u941
  3156  00700C  EF0A  F038         	goto	u940
  3157  007010                     u941:
  3158  007010  EF14  F038         	goto	l2017
  3159  007014                     u940:
  3160  007014                     
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3163  007014  C013  F00A         	movff	pad@buf,fputs@s
  3164  007018  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3165  00701C  C011  F00C         	movff	pad@fp,fputs@fp
  3166  007020  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3167  007024  EC5D  F036         	call	_fputs	;wreg free
  3168  007028                     l2017:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3171  007028  C013  F001         	movff	pad@buf,strlen@s
  3172  00702C  C014  F002         	movff	pad@buf+1,strlen@s+1
  3173  007030  ECAD  F035         	call	_strlen	;wreg free
  3174  007034  501A               	movf	pad@w^0,w,c
  3175  007036  2401               	addwf	?_strlen^0,w,c
  3176  007038  6E11               	movwf	?_pad^0,c
  3177  00703A  501B               	movf	(pad@w+1)^0,w,c
  3178  00703C  2002               	addwfc	(?_strlen+1)^0,w,c
  3179  00703E  6E12               	movwf	(?_pad+1)^0,c
  3180  007040  0012               	return		;funcret
  3181  007042                     __end_of_pad:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _strlen *****************
  3185 ;; Defined at:
  3186 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3189 ;;		 -> dbuf(32), 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3192 ;;		 -> dbuf(32), 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2    0[COMRAM] unsigned int 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3202 ;;      Params:         2       0       0       0       0       0       0       0       0
  3203 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3205 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        4 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_pad
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text9
  3216  006B5A                     __ptext9:
  3217                           	callstack 0
  3218  006B5A                     _strlen:
  3219                           	callstack 25
  3220  006B5A  C001  F003         	movff	strlen@s,strlen@a
  3221  006B5E  C002  F004         	movff	strlen@s+1,strlen@a+1
  3222  006B62  EFB5  F035         	goto	l1889
  3223  006B66                     l1887:
  3224  006B66  4A01               	infsnz	strlen@s^0,f,c
  3225  006B68  2A02               	incf	(strlen@s+1)^0,f,c
  3226  006B6A                     l1889:
  3227  006B6A  C001  FFD9         	movff	strlen@s,fsr2l
  3228  006B6E  C002  FFDA         	movff	strlen@s+1,fsr2h
  3229  006B72  50DF               	movf	indf2,w,c
  3230  006B74  A4D8               	btfss	status,2,c
  3231  006B76  EFBF  F035         	goto	u771
  3232  006B7A  EFC1  F035         	goto	u770
  3233  006B7E                     u771:
  3234  006B7E  EFB3  F035         	goto	l1887
  3235  006B82                     u770:
  3236  006B82  5003               	movf	strlen@a^0,w,c
  3237  006B84  5C01               	subwf	strlen@s^0,w,c
  3238  006B86  6E01               	movwf	?_strlen^0,c
  3239  006B88  5004               	movf	(strlen@a+1)^0,w,c
  3240  006B8A  5802               	subwfb	(strlen@s+1)^0,w,c
  3241  006B8C  6E02               	movwf	(?_strlen+1)^0,c
  3242  006B8E  0012               	return		;funcret
  3243  006B90                     __end_of_strlen:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _fputs *****************
  3247 ;; Defined at:
  3248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3251 ;;		 -> dbuf(32), 
  3252 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3253 ;;		 -> sprintf@f(6), 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  i               2   14[COMRAM] int 
  3256 ;;  c               1   13[COMRAM] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  2    9[COMRAM] int 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         4       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        7 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 2
  3273 ;; This function calls:
  3274 ;;		_fputc
  3275 ;; This function is called by:
  3276 ;;		_pad
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text10
  3281  006CBA                     __ptext10:
  3282                           	callstack 0
  3283  006CBA                     _fputs:
  3284                           	callstack 23
  3285  006CBA  0E00               	movlw	0
  3286  006CBC  6E10               	movwf	(fputs@i+1)^0,c
  3287  006CBE  0E00               	movlw	0
  3288  006CC0  6E0F               	movwf	fputs@i^0,c
  3289  006CC2  EF6E  F036         	goto	l1883
  3290  006CC6                     l1879:
  3291  006CC6  C00E  F001         	movff	fputs@c,fputc@c
  3292  006CCA  6A02               	clrf	(fputc@c+1)^0,c
  3293  006CCC  C00C  F003         	movff	fputs@fp,fputc@fp
  3294  006CD0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3295  006CD4  EC21  F038         	call	_fputc	;wreg free
  3296  006CD8  4A0F               	infsnz	fputs@i^0,f,c
  3297  006CDA  2A10               	incf	(fputs@i+1)^0,f,c
  3298  006CDC                     l1883:
  3299  006CDC  500F               	movf	fputs@i^0,w,c
  3300  006CDE  240A               	addwf	fputs@s^0,w,c
  3301  006CE0  6ED9               	movwf	fsr2l,c
  3302  006CE2  5010               	movf	(fputs@i+1)^0,w,c
  3303  006CE4  200B               	addwfc	(fputs@s+1)^0,w,c
  3304  006CE6  6EDA               	movwf	fsr2h,c
  3305  006CE8  50DF               	movf	indf2,w,c
  3306  006CEA  6E0E               	movwf	fputs@c^0,c
  3307  006CEC  500E               	movf	fputs@c^0,w,c
  3308  006CEE  A4D8               	btfss	status,2,c
  3309  006CF0  EF7C  F036         	goto	u761
  3310  006CF4  EF7E  F036         	goto	u760
  3311  006CF8                     u761:
  3312  006CF8  EF63  F036         	goto	l1879
  3313  006CFC                     u760:
  3314  006CFC  0012               	return		;funcret
  3315  006CFE                     __end_of_fputs:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function _abs *****************
  3319 ;; Defined at:
  3320 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  a               2   18[COMRAM] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2   18[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         2       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        4 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_dtoa
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text11
  3348  006C7A                     __ptext11:
  3349                           	callstack 0
  3350  006C7A                     _abs:
  3351                           	callstack 26
  3352  006C7A  BE14               	btfsc	(abs@a+1)^0,7,c
  3353  006C7C  EF4A  F036         	goto	u950
  3354  006C80  5014               	movf	(abs@a+1)^0,w,c
  3355  006C82  E106               	bnz	u951
  3356  006C84  0413               	decf	abs@a^0,w,c
  3357  006C86  B0D8               	btfsc	status,0,c
  3358  006C88  EF48  F036         	goto	u951
  3359  006C8C  EF4A  F036         	goto	u950
  3360  006C90                     u951:
  3361  006C90  EF58  F036         	goto	l1113
  3362  006C94                     u950:
  3363  006C94  C013  F015         	movff	abs@a,??_abs
  3364  006C98  C014  F016         	movff	abs@a+1,??_abs+1
  3365  006C9C  1E15               	comf	??_abs^0,f,c
  3366  006C9E  1E16               	comf	(??_abs+1)^0,f,c
  3367  006CA0  4A15               	infsnz	??_abs^0,f,c
  3368  006CA2  2A16               	incf	(??_abs+1)^0,f,c
  3369  006CA4  C015  F013         	movff	??_abs,?_abs
  3370  006CA8  C016  F014         	movff	??_abs+1,?_abs+1
  3371  006CAC  EF5C  F036         	goto	l1116
  3372  006CB0                     l1113:
  3373  006CB0  C013  F013         	movff	abs@a,?_abs
  3374  006CB4  C014  F014         	movff	abs@a+1,?_abs+1
  3375  006CB8                     l1116:
  3376  006CB8  0012               	return		;funcret
  3377  006CBA                     __end_of_abs:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function ___aomod *****************
  3381 ;; Defined at:
  3382 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  dividend        8    0[COMRAM] long long 
  3385 ;;  divisor         8    8[COMRAM] long long 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  sign            1   17[COMRAM] unsigned char 
  3388 ;;  counter         1   16[COMRAM] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  8    0[COMRAM] long long 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3398 ;;      Params:        16       0       0       0       0       0       0       0       0
  3399 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3401 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3402 ;;Total ram usage:       18 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_dtoa
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text12
  3412  0072BC                     __ptext12:
  3413                           	callstack 0
  3414  0072BC                     ___aomod:
  3415                           	callstack 26
  3416  0072BC  0E00               	movlw	0
  3417  0072BE  6E12               	movwf	___aomod@sign^0,c
  3418  0072C0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3419  0072C2  EF67  F039         	goto	u850
  3420  0072C6  EF65  F039         	goto	u851
  3421  0072CA                     u851:
  3422  0072CA  EF79  F039         	goto	l1971
  3423  0072CE                     u850:
  3424  0072CE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3425  0072D0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3426  0072D2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3427  0072D4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3428  0072D6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3429  0072D8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3430  0072DA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3431  0072DC  6C01               	negf	___aomod@dividend^0,c
  3432  0072DE  0E00               	movlw	0
  3433  0072E0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3434  0072E2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3435  0072E4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3436  0072E6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3437  0072E8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3438  0072EA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3439  0072EC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3440  0072EE  0E01               	movlw	1
  3441  0072F0  6E12               	movwf	___aomod@sign^0,c
  3442  0072F2                     l1971:
  3443  0072F2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3444  0072F4  EF80  F039         	goto	u860
  3445  0072F8  EF7E  F039         	goto	u861
  3446  0072FC                     u861:
  3447  0072FC  EF90  F039         	goto	l1975
  3448  007300                     u860:
  3449  007300  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3450  007302  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3451  007304  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3452  007306  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3453  007308  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3454  00730A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3455  00730C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3456  00730E  6C09               	negf	___aomod@divisor^0,c
  3457  007310  0E00               	movlw	0
  3458  007312  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3459  007314  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3460  007316  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3461  007318  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3462  00731A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3463  00731C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3464  00731E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3465  007320                     l1975:
  3466  007320  5009               	movf	___aomod@divisor^0,w,c
  3467  007322  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3468  007324  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3469  007326  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3470  007328  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3471  00732A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3472  00732C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3473  00732E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3474  007330  B4D8               	btfsc	status,2,c
  3475  007332  EF9D  F039         	goto	u871
  3476  007336  EF9F  F039         	goto	u870
  3477  00733A                     u871:
  3478  00733A  EFE7  F039         	goto	l1991
  3479  00733E                     u870:
  3480  00733E  0E01               	movlw	1
  3481  007340  6E11               	movwf	___aomod@counter^0,c
  3482  007342  EFAD  F039         	goto	l1981
  3483  007346                     l1979:
  3484  007346  90D8               	bcf	status,0,c
  3485  007348  3609               	rlcf	___aomod@divisor^0,f,c
  3486  00734A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3487  00734C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3488  00734E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3489  007350  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3490  007352  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3491  007354  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3492  007356  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3493  007358  2A11               	incf	___aomod@counter^0,f,c
  3494  00735A                     l1981:
  3495  00735A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3496  00735C  EFB2  F039         	goto	u881
  3497  007360  EFB4  F039         	goto	u880
  3498  007364                     u881:
  3499  007364  EFA3  F039         	goto	l1979
  3500  007368                     u880:
  3501  007368                     l1983:
  3502  007368  5009               	movf	___aomod@divisor^0,w,c
  3503  00736A  5C01               	subwf	___aomod@dividend^0,w,c
  3504  00736C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3505  00736E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3506  007370  500B               	movf	(___aomod@divisor+2)^0,w,c
  3507  007372  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3508  007374  500C               	movf	(___aomod@divisor+3)^0,w,c
  3509  007376  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3510  007378  500D               	movf	(___aomod@divisor+4)^0,w,c
  3511  00737A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3512  00737C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3513  00737E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3514  007380  500F               	movf	(___aomod@divisor+6)^0,w,c
  3515  007382  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3516  007384  5010               	movf	(___aomod@divisor+7)^0,w,c
  3517  007386  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3518  007388  A0D8               	btfss	status,0,c
  3519  00738A  EFC9  F039         	goto	u891
  3520  00738E  EFCB  F039         	goto	u890
  3521  007392                     u891:
  3522  007392  EFDB  F039         	goto	l1987
  3523  007396                     u890:
  3524  007396  5009               	movf	___aomod@divisor^0,w,c
  3525  007398  5E01               	subwf	___aomod@dividend^0,f,c
  3526  00739A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3527  00739C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3528  00739E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3529  0073A0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3530  0073A2  500C               	movf	(___aomod@divisor+3)^0,w,c
  3531  0073A4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3532  0073A6  500D               	movf	(___aomod@divisor+4)^0,w,c
  3533  0073A8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3534  0073AA  500E               	movf	(___aomod@divisor+5)^0,w,c
  3535  0073AC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3536  0073AE  500F               	movf	(___aomod@divisor+6)^0,w,c
  3537  0073B0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3538  0073B2  5010               	movf	(___aomod@divisor+7)^0,w,c
  3539  0073B4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3540  0073B6                     l1987:
  3541  0073B6  90D8               	bcf	status,0,c
  3542  0073B8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3543  0073BA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3544  0073BC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3545  0073BE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3546  0073C0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3547  0073C2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3548  0073C4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3549  0073C6  3209               	rrcf	___aomod@divisor^0,f,c
  3550  0073C8  2E11               	decfsz	___aomod@counter^0,f,c
  3551  0073CA  EFB4  F039         	goto	l1983
  3552  0073CE                     l1991:
  3553  0073CE  5012               	movf	___aomod@sign^0,w,c
  3554  0073D0  B4D8               	btfsc	status,2,c
  3555  0073D2  EFED  F039         	goto	u901
  3556  0073D6  EFEF  F039         	goto	u900
  3557  0073DA                     u901:
  3558  0073DA  EFFF  F039         	goto	l1995
  3559  0073DE                     u900:
  3560  0073DE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3561  0073E0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3562  0073E2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3563  0073E4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3564  0073E6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3565  0073E8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3566  0073EA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3567  0073EC  6C01               	negf	___aomod@dividend^0,c
  3568  0073EE  0E00               	movlw	0
  3569  0073F0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3570  0073F2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3571  0073F4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3572  0073F6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3573  0073F8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3574  0073FA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3575  0073FC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3576  0073FE                     l1995:
  3577  0073FE  C001  F001         	movff	___aomod@dividend,?___aomod
  3578  007402  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3579  007406  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3580  00740A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3581  00740E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3582  007412  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3583  007416  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3584  00741A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3585  00741E  0012               	return		;funcret
  3586  007420                     __end_of___aomod:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function ___aodiv *****************
  3590 ;; Defined at:
  3591 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  dividend        8    0[COMRAM] long long 
  3594 ;;  divisor         8    8[COMRAM] long long 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  quotient        8   18[COMRAM] long long 
  3597 ;;  sign            1   17[COMRAM] unsigned char 
  3598 ;;  counter         1   16[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  8    0[COMRAM] long long 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:        16       0       0       0       0       0       0       0       0
  3609 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3611 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:       26 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_dtoa
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text13
  3622  007420                     __ptext13:
  3623                           	callstack 0
  3624  007420                     ___aodiv:
  3625                           	callstack 26
  3626  007420  0E00               	movlw	0
  3627  007422  6E12               	movwf	___aodiv@sign^0,c
  3628  007424  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3629  007426  EF19  F03A         	goto	u780
  3630  00742A  EF17  F03A         	goto	u781
  3631  00742E                     u781:
  3632  00742E  EF2B  F03A         	goto	l1927
  3633  007432                     u780:
  3634  007432  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3635  007434  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3636  007436  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3637  007438  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3638  00743A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3639  00743C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3640  00743E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3641  007440  6C09               	negf	___aodiv@divisor^0,c
  3642  007442  0E00               	movlw	0
  3643  007444  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3644  007446  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3645  007448  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3646  00744A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3647  00744C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3648  00744E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3649  007450  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3650  007452  0E01               	movlw	1
  3651  007454  6E12               	movwf	___aodiv@sign^0,c
  3652  007456                     l1927:
  3653  007456  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3654  007458  EF32  F03A         	goto	u790
  3655  00745C  EF30  F03A         	goto	u791
  3656  007460                     u791:
  3657  007460  EF44  F03A         	goto	l1933
  3658  007464                     u790:
  3659  007464  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3660  007466  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3661  007468  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3662  00746A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3663  00746C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3664  00746E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3665  007470  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3666  007472  6C01               	negf	___aodiv@dividend^0,c
  3667  007474  0E00               	movlw	0
  3668  007476  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3669  007478  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3670  00747A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3671  00747C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3672  00747E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3673  007480  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3674  007482  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3675  007484  0E01               	movlw	1
  3676  007486  1A12               	xorwf	___aodiv@sign^0,f,c
  3677  007488                     l1933:
  3678  007488  EE20  F013         	lfsr	2,___aodiv@quotient
  3679  00748C  0E07               	movlw	7
  3680  00748E                     u801:
  3681  00748E  6ADE               	clrf	postinc2,c
  3682  007490  06E8               	decf	wreg,f,c
  3683  007492  E2FD               	bc	u801
  3684  007494  5009               	movf	___aodiv@divisor^0,w,c
  3685  007496  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3686  007498  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3687  00749A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3688  00749C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3689  00749E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3690  0074A0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3691  0074A2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3692  0074A4  B4D8               	btfsc	status,2,c
  3693  0074A6  EF57  F03A         	goto	u811
  3694  0074AA  EF59  F03A         	goto	u810
  3695  0074AE                     u811:
  3696  0074AE  EFAB  F03A         	goto	l1955
  3697  0074B2                     u810:
  3698  0074B2  0E01               	movlw	1
  3699  0074B4  6E11               	movwf	___aodiv@counter^0,c
  3700  0074B6  EF67  F03A         	goto	l1941
  3701  0074BA                     l1939:
  3702  0074BA  90D8               	bcf	status,0,c
  3703  0074BC  3609               	rlcf	___aodiv@divisor^0,f,c
  3704  0074BE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3705  0074C0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3706  0074C2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3707  0074C4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3708  0074C6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3709  0074C8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3710  0074CA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3711  0074CC  2A11               	incf	___aodiv@counter^0,f,c
  3712  0074CE                     l1941:
  3713  0074CE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3714  0074D0  EF6C  F03A         	goto	u821
  3715  0074D4  EF6E  F03A         	goto	u820
  3716  0074D8                     u821:
  3717  0074D8  EF5D  F03A         	goto	l1939
  3718  0074DC                     u820:
  3719  0074DC                     l1943:
  3720  0074DC  90D8               	bcf	status,0,c
  3721  0074DE  3613               	rlcf	___aodiv@quotient^0,f,c
  3722  0074E0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3723  0074E2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3724  0074E4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3725  0074E6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3726  0074E8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3727  0074EA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3728  0074EC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3729  0074EE  5009               	movf	___aodiv@divisor^0,w,c
  3730  0074F0  5C01               	subwf	___aodiv@dividend^0,w,c
  3731  0074F2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3732  0074F4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3733  0074F6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3734  0074F8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3735  0074FA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3736  0074FC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3737  0074FE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3738  007500  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3739  007502  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3740  007504  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3741  007506  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3742  007508  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3743  00750A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3744  00750C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3745  00750E  A0D8               	btfss	status,0,c
  3746  007510  EF8C  F03A         	goto	u831
  3747  007514  EF8E  F03A         	goto	u830
  3748  007518                     u831:
  3749  007518  EF9F  F03A         	goto	l1951
  3750  00751C                     u830:
  3751  00751C  5009               	movf	___aodiv@divisor^0,w,c
  3752  00751E  5E01               	subwf	___aodiv@dividend^0,f,c
  3753  007520  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3754  007522  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3755  007524  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3756  007526  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3757  007528  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3758  00752A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3759  00752C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3760  00752E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3761  007530  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3762  007532  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3763  007534  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3764  007536  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3765  007538  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3766  00753A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3767  00753C  8013               	bsf	___aodiv@quotient^0,0,c
  3768  00753E                     l1951:
  3769  00753E  90D8               	bcf	status,0,c
  3770  007540  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3771  007542  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3772  007544  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3773  007546  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3774  007548  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3775  00754A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3776  00754C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3777  00754E  3209               	rrcf	___aodiv@divisor^0,f,c
  3778  007550  2E11               	decfsz	___aodiv@counter^0,f,c
  3779  007552  EF6E  F03A         	goto	l1943
  3780  007556                     l1955:
  3781  007556  5012               	movf	___aodiv@sign^0,w,c
  3782  007558  B4D8               	btfsc	status,2,c
  3783  00755A  EFB1  F03A         	goto	u841
  3784  00755E  EFB3  F03A         	goto	u840
  3785  007562                     u841:
  3786  007562  EFC3  F03A         	goto	l1959
  3787  007566                     u840:
  3788  007566  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3789  007568  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3790  00756A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3791  00756C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3792  00756E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3793  007570  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3794  007572  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3795  007574  6C13               	negf	___aodiv@quotient^0,c
  3796  007576  0E00               	movlw	0
  3797  007578  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3798  00757A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3799  00757C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3800  00757E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3801  007580  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3802  007582  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3803  007584  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3804  007586                     l1959:
  3805  007586  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3806  00758A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3807  00758E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3808  007592  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3809  007596  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3810  00759A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3811  00759E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3812  0075A2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3813  0075A6  0012               	return		;funcret
  3814  0075A8                     __end_of___aodiv:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _ctoa *****************
  3818 ;; Defined at:
  3819 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  3822 ;;		 -> sprintf@f(6), 
  3823 ;;  c               1   11[COMRAM] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  w               2   15[COMRAM] int 
  3826 ;;  l               2   13[COMRAM] int 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  2    9[COMRAM] int 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         3       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        8 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 2
  3843 ;; This function calls:
  3844 ;;		_fputc
  3845 ;; This function is called by:
  3846 ;;		_vfpfcnvrt
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text14
  3851  0071E4                     __ptext14:
  3852                           	callstack 0
  3853  0071E4                     _ctoa:
  3854                           	callstack 25
  3855  0071E4                     
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3857  0071E4  0100               	movlb	0	; () banked
  3858  0071E6  51CC               	movf	_width& (0+255),w,b
  3859  0071E8  11CD               	iorwf	(_width+1)& (0+255),w,b
  3860  0071EA  A4D8               	btfss	status,2,c
  3861  0071EC  EFFA  F038         	goto	u971
  3862  0071F0  EFFC  F038         	goto	u970
  3863  0071F4                     u971:
  3864  0071F4  EF02  F039         	goto	l2045
  3865  0071F8                     u970:
  3866  0071F8                     
  3867                           ; BSR set to: 0
  3868  0071F8  C0CC  F010         	movff	_width,ctoa@w
  3869  0071FC  C0CD  F011         	movff	_width+1,ctoa@w+1
  3870  007200  EF08  F039         	goto	l2047
  3871  007204                     l2045:
  3872                           
  3873                           ; BSR set to: 0
  3874  007204  0EFF               	movlw	255
  3875  007206  25CC               	addwf	_width& (0+255),w,b
  3876  007208  6E10               	movwf	ctoa@w^0,c
  3877  00720A  0EFF               	movlw	255
  3878  00720C  21CD               	addwfc	(_width+1)& (0+255),w,b
  3879  00720E  6E11               	movwf	(ctoa@w+1)^0,c
  3880  007210                     l2047:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3884  007210  A1D0               	btfss	_flags& (0+255),0,b
  3885  007212  EF0D  F039         	goto	u981
  3886  007216  EF0F  F039         	goto	u980
  3887  00721A                     u981:
  3888  00721A  EF18  F039         	goto	l2051
  3889  00721E                     u980:
  3890  00721E                     
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3893  00721E  C00C  F001         	movff	ctoa@c,fputc@c
  3894  007222  6A02               	clrf	(fputc@c+1)^0,c
  3895  007224  C00A  F003         	movff	ctoa@fp,fputc@fp
  3896  007228  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3897  00722C  EC21  F038         	call	_fputc	;wreg free
  3898  007230                     l2051:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3901  007230  BE11               	btfsc	(ctoa@w+1)^0,7,c
  3902  007232  EF1D  F039         	goto	u991
  3903  007236  EF1F  F039         	goto	u990
  3904  00723A                     u991:
  3905  00723A  EF21  F039         	goto	l2055
  3906  00723E                     u990:
  3907  00723E  EF25  F039         	goto	l1063
  3908  007242                     l2055:
  3909  007242  0E00               	movlw	0
  3910  007244  6E11               	movwf	(ctoa@w+1)^0,c
  3911  007246  0E00               	movlw	0
  3912  007248  6E10               	movwf	ctoa@w^0,c
  3913  00724A                     l1063:
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3916  00724A  0E00               	movlw	0
  3917  00724C  6E0F               	movwf	(ctoa@l+1)^0,c
  3918  00724E  0E00               	movlw	0
  3919  007250  6E0E               	movwf	ctoa@l^0,c
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3922  007252  EF37  F039         	goto	l2061
  3923  007256                     l2057:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3926  007256  0E00               	movlw	0
  3927  007258  6E02               	movwf	(fputc@c+1)^0,c
  3928  00725A  0E20               	movlw	32
  3929  00725C  6E01               	movwf	fputc@c^0,c
  3930  00725E  C00A  F003         	movff	ctoa@fp,fputc@fp
  3931  007262  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3932  007266  EC21  F038         	call	_fputc	;wreg free
  3933  00726A                     
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3935  00726A  4A0E               	infsnz	ctoa@l^0,f,c
  3936  00726C  2A0F               	incf	(ctoa@l+1)^0,f,c
  3937  00726E                     l2061:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3940  00726E  5010               	movf	ctoa@w^0,w,c
  3941  007270  5C0E               	subwf	ctoa@l^0,w,c
  3942  007272  500F               	movf	(ctoa@l+1)^0,w,c
  3943  007274  0A80               	xorlw	128
  3944  007276  6E0D               	movwf	??_ctoa^0,c
  3945  007278  5011               	movf	(ctoa@w+1)^0,w,c
  3946  00727A  0A80               	xorlw	128
  3947  00727C  580D               	subwfb	??_ctoa^0,w,c
  3948  00727E  A0D8               	btfss	status,0,c
  3949  007280  EF44  F039         	goto	u1001
  3950  007284  EF46  F039         	goto	u1000
  3951  007288                     u1001:
  3952  007288  EF2B  F039         	goto	l2057
  3953  00728C                     u1000:
  3954  00728C                     
  3955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3956  00728C  0100               	movlb	0	; () banked
  3957  00728E  B1D0               	btfsc	_flags& (0+255),0,b
  3958  007290  EF4C  F039         	goto	u1011
  3959  007294  EF4E  F039         	goto	u1010
  3960  007298                     u1011:
  3961  007298  EF57  F039         	goto	l2065
  3962  00729C                     u1010:
  3963  00729C                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3966  00729C  C00C  F001         	movff	ctoa@c,fputc@c
  3967  0072A0  6A02               	clrf	(fputc@c+1)^0,c
  3968  0072A2  C00A  F003         	movff	ctoa@fp,fputc@fp
  3969  0072A6  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  3970  0072AA  EC21  F038         	call	_fputc	;wreg free
  3971  0072AE                     l2065:
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3974  0072AE  0E01               	movlw	1
  3975  0072B0  240E               	addwf	ctoa@l^0,w,c
  3976  0072B2  6E0A               	movwf	?_ctoa^0,c
  3977  0072B4  0E00               	movlw	0
  3978  0072B6  200F               	addwfc	(ctoa@l+1)^0,w,c
  3979  0072B8  6E0B               	movwf	(?_ctoa+1)^0,c
  3980  0072BA  0012               	return		;funcret
  3981  0072BC                     __end_of_ctoa:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _fputc *****************
  3985 ;; Defined at:
  3986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  c               2    0[COMRAM] int 
  3989 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3990 ;;		 -> sprintf@f(6), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2    0[COMRAM] int 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         4       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        9 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 1
  4009 ;; This function calls:
  4010 ;;		_putch
  4011 ;; This function is called by:
  4012 ;;		_pad
  4013 ;;		_ctoa
  4014 ;;		_vfpfcnvrt
  4015 ;;		_fputs
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text15
  4020  007042                     __ptext15:
  4021                           	callstack 0
  4022  007042                     _fputc:
  4023                           	callstack 26
  4024  007042  5003               	movf	fputc@fp^0,w,c
  4025  007044  1004               	iorwf	(fputc@fp+1)^0,w,c
  4026  007046  B4D8               	btfsc	status,2,c
  4027  007048  EF28  F038         	goto	u721
  4028  00704C  EF2A  F038         	goto	u720
  4029  007050                     u721:
  4030  007050  EF33  F038         	goto	l1853
  4031  007054                     u720:
  4032  007054  5003               	movf	fputc@fp^0,w,c
  4033  007056  1004               	iorwf	(fputc@fp+1)^0,w,c
  4034  007058  A4D8               	btfss	status,2,c
  4035  00705A  EF31  F038         	goto	u731
  4036  00705E  EF33  F038         	goto	u730
  4037  007062                     u731:
  4038  007062  EF38  F038         	goto	l1855
  4039  007066                     u730:
  4040  007066                     l1853:
  4041  007066  5001               	movf	fputc@c^0,w,c
  4042  007068  EC8A  F034         	call	_putch
  4043  00706C  EF85  F038         	goto	l1128
  4044  007070                     l1855:
  4045  007070  EE20 F004          	lfsr	2,4
  4046  007074  5003               	movf	fputc@fp^0,w,c
  4047  007076  26D9               	addwf	fsr2l,f,c
  4048  007078  5004               	movf	(fputc@fp+1)^0,w,c
  4049  00707A  22DA               	addwfc	fsr2h,f,c
  4050  00707C  50DE               	movf	postinc2,w,c
  4051  00707E  10DE               	iorwf	postinc2,w,c
  4052  007080  B4D8               	btfsc	status,2,c
  4053  007082  EF45  F038         	goto	u741
  4054  007086  EF47  F038         	goto	u740
  4055  00708A                     u741:
  4056  00708A  EF62  F038         	goto	l1859
  4057  00708E                     u740:
  4058  00708E  EE20 F004          	lfsr	2,4
  4059  007092  5003               	movf	fputc@fp^0,w,c
  4060  007094  26D9               	addwf	fsr2l,f,c
  4061  007096  5004               	movf	(fputc@fp+1)^0,w,c
  4062  007098  22DA               	addwfc	fsr2h,f,c
  4063  00709A  EE10 F002          	lfsr	1,2
  4064  00709E  5003               	movf	fputc@fp^0,w,c
  4065  0070A0  26E1               	addwf	fsr1l,f,c
  4066  0070A2  5004               	movf	(fputc@fp+1)^0,w,c
  4067  0070A4  22E2               	addwfc	fsr1h,f,c
  4068  0070A6  50DE               	movf	postinc2,w,c
  4069  0070A8  5CE6               	subwf	postinc1,w,c
  4070  0070AA  50E6               	movf	postinc1,w,c
  4071  0070AC  0A80               	xorlw	128
  4072  0070AE  6E09               	movwf	(??_fputc+4)^0,c
  4073  0070B0  50DE               	movf	postinc2,w,c
  4074  0070B2  0A80               	xorlw	128
  4075  0070B4  5809               	subwfb	(??_fputc+4)^0,w,c
  4076  0070B6  B0D8               	btfsc	status,0,c
  4077  0070B8  EF60  F038         	goto	u751
  4078  0070BC  EF62  F038         	goto	u750
  4079  0070C0                     u751:
  4080  0070C0  EF85  F038         	goto	l1128
  4081  0070C4                     u750:
  4082  0070C4                     l1859:
  4083  0070C4  EE20 F002          	lfsr	2,2
  4084  0070C8  5003               	movf	fputc@fp^0,w,c
  4085  0070CA  26D9               	addwf	fsr2l,f,c
  4086  0070CC  5004               	movf	(fputc@fp+1)^0,w,c
  4087  0070CE  22DA               	addwfc	fsr2h,f,c
  4088  0070D0  CFDE F005          	movff	postinc2,??_fputc
  4089  0070D4  CFDD F006          	movff	postdec2,??_fputc+1
  4090  0070D8  C003  FFD9         	movff	fputc@fp,fsr2l
  4091  0070DC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4092  0070E0  CFDE F007          	movff	postinc2,??_fputc+2
  4093  0070E4  CFDD F008          	movff	postdec2,??_fputc+3
  4094  0070E8  5005               	movf	??_fputc^0,w,c
  4095  0070EA  2407               	addwf	(??_fputc+2)^0,w,c
  4096  0070EC  6ED9               	movwf	fsr2l,c
  4097  0070EE  5006               	movf	(??_fputc+1)^0,w,c
  4098  0070F0  2008               	addwfc	(??_fputc+3)^0,w,c
  4099  0070F2  6EDA               	movwf	fsr2h,c
  4100  0070F4  C001  FFDF         	movff	fputc@c,indf2
  4101  0070F8  EE20 F002          	lfsr	2,2
  4102  0070FC  5003               	movf	fputc@fp^0,w,c
  4103  0070FE  26D9               	addwf	fsr2l,f,c
  4104  007100  5004               	movf	(fputc@fp+1)^0,w,c
  4105  007102  22DA               	addwfc	fsr2h,f,c
  4106  007104  2ADE               	incf	postinc2,f,c
  4107  007106  0E00               	movlw	0
  4108  007108  22DD               	addwfc	postdec2,f,c
  4109  00710A                     l1128:
  4110  00710A  0012               	return		;funcret
  4111  00710C                     __end_of_fputc:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _putch *****************
  4115 ;; Defined at:
  4116 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  c               1    wreg     unsigned char 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  c               1    0[COMRAM] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_fputc
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text16
  4144  006914                     __ptext16:
  4145                           	callstack 0
  4146  006914                     _putch:
  4147                           	callstack 26
  4148  006914  0012               	return		;funcret
  4149  006916                     __end_of_putch:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _oled_init *****************
  4153 ;; Defined at:
  4154 ;;		line 366 in file "SSD1306oLED.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 5
  4175 ;; This function calls:
  4176 ;;		_oled_clear
  4177 ;;		_oled_devInit
  4178 ;;		_oled_setDisplay
  4179 ;;		_oled_setFont
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text17
  4186  006A92                     __ptext17:
  4187                           	callstack 0
  4188  006A92                     _oled_init:
  4189                           	callstack 25
  4190  006A92                     
  4191                           ;SSD1306oLED.c: 369:     TRISEbits.TRISE2 = 0;
  4192  006A92  9496               	bcf	150,2,c	;volatile
  4193                           
  4194                           ;SSD1306oLED.c: 370:     LATEbits.LATE2 = 1;
  4195  006A94  848D               	bsf	141,2,c	;volatile
  4196                           
  4197                           ;SSD1306oLED.c: 371:     TRISBbits.TRISB2 = 0;
  4198  006A96  9493               	bcf	147,2,c	;volatile
  4199                           
  4200                           ;SSD1306oLED.c: 372:     TRISBbits.TRISB3 = 0;
  4201  006A98  9693               	bcf	147,3,c	;volatile
  4202                           
  4203                           ;SSD1306oLED.c: 373:     TRISBbits.TRISB4 = 0;
  4204  006A9A  9893               	bcf	147,4,c	;volatile
  4205                           
  4206                           ;SSD1306oLED.c: 374:     TRISCbits.TRISC0 = 0;
  4207  006A9C  9094               	bcf	148,0,c	;volatile
  4208                           
  4209                           ;SSD1306oLED.c: 375:     TRISCbits.TRISC1 = 0;
  4210  006A9E  9294               	bcf	148,1,c	;volatile
  4211                           
  4212                           ;SSD1306oLED.c: 377:     LATBbits.LATB3 = 1;
  4213  006AA0  868A               	bsf	138,3,c	;volatile
  4214                           
  4215                           ;SSD1306oLED.c: 379:     LATBbits.LATB4 = 0;
  4216  006AA2  988A               	bcf	138,4,c	;volatile
  4217  006AA4                     
  4218                           ;SSD1306oLED.c: 381:     oled_devInit();
  4219  006AA4  EC04  F037         	call	_oled_devInit	;wreg free
  4220  006AA8                     
  4221                           ;SSD1306oLED.c: 383:     oled_setDisplay(Inverse);
  4222  006AA8  0E01               	movlw	1
  4223  006AAA  EC60  F035         	call	_oled_setDisplay
  4224  006AAE                     
  4225                           ;SSD1306oLED.c: 384:     oled_setFont(OledFont0);
  4226  006AAE  0E65               	movlw	low _OledFont0
  4227  006AB0  6E01               	movwf	oled_setFont@font^0,c
  4228  006AB2  0E7C               	movlw	high _OledFont0
  4229  006AB4  6E02               	movwf	(oled_setFont@font+1)^0,c
  4230  006AB6  EC03  F035         	call	_oled_setFont	;wreg free
  4231  006ABA                     
  4232                           ;SSD1306oLED.c: 385:     oled_clear();
  4233  006ABA  ECF6  F034         	call	_oled_clear	;wreg free
  4234  006ABE  0012               	return		;funcret
  4235  006AC0                     __end_of_oled_init:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _oled_setFont *****************
  4239 ;; Defined at:
  4240 ;;		line 256 in file "SSD1306oLED.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  font            2    0[COMRAM] PTR const unsigned char 
  4243 ;;		 -> OledFont0(768), 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         2       0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4258 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4259 ;;Total ram usage:        2 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_oled_init
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text18
  4269  006A06                     __ptext18:
  4270                           	callstack 0
  4271  006A06                     _oled_setFont:
  4272                           	callstack 29
  4273  006A06                     
  4274                           ;SSD1306oLED.c: 256: void oled_setFont(const uint8_t *font);SSD1306oLED.c: 257: {;SSD130
      +                          6oLED.c: 258:     if(font!=0)
  4275  006A06  5001               	movf	oled_setFont@font^0,w,c
  4276  006A08  1002               	iorwf	(oled_setFont@font+1)^0,w,c
  4277  006A0A  B4D8               	btfsc	status,2,c
  4278  006A0C  EF0A  F035         	goto	u1311
  4279  006A10  EF0C  F035         	goto	u1310
  4280  006A14                     u1311:
  4281  006A14  EF10  F035         	goto	l276
  4282  006A18                     u1310:
  4283  006A18                     
  4284                           ;SSD1306oLED.c: 259:     {;SSD1306oLED.c: 260:         selectedFont=font;
  4285  006A18  C001  F0FA         	movff	oled_setFont@font,_selectedFont
  4286  006A1C  C002  F0FB         	movff	oled_setFont@font+1,_selectedFont+1
  4287  006A20                     l276:
  4288  006A20  0012               	return		;funcret
  4289  006A22                     __end_of_oled_setFont:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _oled_setDisplay *****************
  4293 ;; Defined at:
  4294 ;;		line 411 in file "SSD1306oLED.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  displayType     1    wreg     enum E4838
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  displayType     1    1[COMRAM] enum E4838
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        1 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		_oled_writeCommand
  4317 ;; This function is called by:
  4318 ;;		_oled_init
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text19
  4323  006AC0                     __ptext19:
  4324                           	callstack 0
  4325  006AC0                     _oled_setDisplay:
  4326                           	callstack 28
  4327                           
  4328                           ;incstack = 0
  4329                           ;oled_setDisplay@displayType stored from wreg
  4330  006AC0  6E02               	movwf	oled_setDisplay@displayType^0,c
  4331  006AC2                     
  4332                           ;SSD1306oLED.c: 411: void oled_setDisplay (oLED_DisplayMode_t displayType);SSD1306oLED.c
      +                          : 412: {;SSD1306oLED.c: 413:     if (displayType == Normal)
  4333  006AC2  5002               	movf	oled_setDisplay@displayType^0,w,c
  4334  006AC4  A4D8               	btfss	status,2,c
  4335  006AC6  EF67  F035         	goto	u1321
  4336  006ACA  EF69  F035         	goto	u1320
  4337  006ACE                     u1321:
  4338  006ACE  EF71  F035         	goto	l2321
  4339  006AD2                     u1320:
  4340  006AD2                     
  4341                           ;SSD1306oLED.c: 414:     {;SSD1306oLED.c: 415:         oled_writeCommand(0xa0);
  4342  006AD2  0EA0               	movlw	160
  4343  006AD4  ECCC  F034         	call	_oled_writeCommand
  4344                           
  4345                           ;SSD1306oLED.c: 416:         oled_writeCommand(0xc8);
  4346  006AD8  0EC8               	movlw	200
  4347  006ADA  ECCC  F034         	call	_oled_writeCommand
  4348                           
  4349                           ;SSD1306oLED.c: 417:     }
  4350  006ADE  EF77  F035         	goto	l318
  4351  006AE2                     l2321:
  4352                           
  4353                           ;SSD1306oLED.c: 419:     {;SSD1306oLED.c: 420:         oled_writeCommand(0xa1);
  4354  006AE2  0EA1               	movlw	161
  4355  006AE4  ECCC  F034         	call	_oled_writeCommand
  4356                           
  4357                           ;SSD1306oLED.c: 421:         oled_writeCommand(0xc0);
  4358  006AE8  0EC0               	movlw	192
  4359  006AEA  ECCC  F034         	call	_oled_writeCommand
  4360  006AEE                     l318:
  4361  006AEE  0012               	return		;funcret
  4362  006AF0                     __end_of_oled_setDisplay:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _oled_devInit *****************
  4366 ;; Defined at:
  4367 ;;		line 388 in file "SSD1306oLED.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4383 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4384 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4385 ;;Total ram usage:        1 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 2
  4388 ;; This function calls:
  4389 ;;		_oled_initialDispayLine
  4390 ;;		_oled_powerControl
  4391 ;;		_oled_regulorResistorSelect
  4392 ;;		_oled_setContrastControlRegister
  4393 ;;		_oled_writeCommand
  4394 ;; This function is called by:
  4395 ;;		_oled_init
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text20
  4400  006E08                     __ptext20:
  4401                           	callstack 0
  4402  006E08                     _oled_devInit:
  4403                           	callstack 27
  4404  006E08                     
  4405                           ;SSD1306oLED.c: 390:     oled_writeCommand(0xe2);
  4406  006E08  0EE2               	movlw	226
  4407  006E0A  ECCC  F034         	call	_oled_writeCommand
  4408  006E0E                     
  4409                           ;SSD1306oLED.c: 391:     LATBbits.LATB2=1;
  4410  006E0E  848A               	bsf	138,2,c	;volatile
  4411  006E10                     
  4412                           ;SSD1306oLED.c: 392:     _delay((unsigned long)((200)*(48000000/4000000.0)));
  4413  006E10  0E04               	movlw	4
  4414  006E12  6E03               	movwf	??_oled_devInit^0,c
  4415  006E14  0E1C               	movlw	28
  4416  006E16                     u1447:
  4417  006E16  2EE8               	decfsz	wreg,f,c
  4418  006E18  D7FE               	bra	u1447
  4419  006E1A  2E03               	decfsz	??_oled_devInit^0,f,c
  4420  006E1C  D7FC               	bra	u1447
  4421  006E1E  D000               	nop2	
  4422  006E20                     
  4423                           ;SSD1306oLED.c: 393:     LATBbits.LATB2=0;
  4424  006E20  948A               	bcf	138,2,c	;volatile
  4425  006E22                     
  4426                           ;SSD1306oLED.c: 394:     _delay((unsigned long)((2000)*(48000000/4000000.0)));
  4427  006E22  0E20               	movlw	32
  4428  006E24  6E03               	movwf	??_oled_devInit^0,c
  4429  006E26  0E2A               	movlw	42
  4430  006E28                     u1457:
  4431  006E28  2EE8               	decfsz	wreg,f,c
  4432  006E2A  D7FE               	bra	u1457
  4433  006E2C  2E03               	decfsz	??_oled_devInit^0,f,c
  4434  006E2E  D7FC               	bra	u1457
  4435  006E30                     
  4436                           ;SSD1306oLED.c: 395:     LATBbits.LATB2=1;
  4437  006E30  848A               	bsf	138,2,c	;volatile
  4438  006E32                     
  4439                           ;SSD1306oLED.c: 396:     _delay((unsigned long)((1000)*(48000000/4000000.0)));
  4440  006E32  0E10               	movlw	16
  4441  006E34  6E03               	movwf	??_oled_devInit^0,c
  4442  006E36  0E94               	movlw	148
  4443  006E38                     u1467:
  4444  006E38  2EE8               	decfsz	wreg,f,c
  4445  006E3A  D7FE               	bra	u1467
  4446  006E3C  2E03               	decfsz	??_oled_devInit^0,f,c
  4447  006E3E  D7FC               	bra	u1467
  4448  006E40  D000               	nop2	
  4449  006E42                     
  4450                           ;SSD1306oLED.c: 398:     oled_writeCommand(0xa1);
  4451  006E42  0EA1               	movlw	161
  4452  006E44  ECCC  F034         	call	_oled_writeCommand
  4453  006E48                     
  4454                           ;SSD1306oLED.c: 399:     oled_writeCommand(0xc0);
  4455  006E48  0EC0               	movlw	192
  4456  006E4A  ECCC  F034         	call	_oled_writeCommand
  4457  006E4E                     
  4458                           ;SSD1306oLED.c: 400:     oled_writeCommand(0xa3);
  4459  006E4E  0EA3               	movlw	163
  4460  006E50  ECCC  F034         	call	_oled_writeCommand
  4461  006E54                     
  4462                           ;SSD1306oLED.c: 401:     oled_powerControl(0x07);
  4463  006E54  0E07               	movlw	7
  4464  006E56  ECA2  F034         	call	_oled_powerControl
  4465  006E5A                     
  4466                           ;SSD1306oLED.c: 402:     oled_regulorResistorSelect(0x05);
  4467  006E5A  0E05               	movlw	5
  4468  006E5C  ECA8  F034         	call	_oled_regulorResistorSelect
  4469  006E60                     
  4470                           ;SSD1306oLED.c: 403:     oled_setContrastControlRegister(Contrast_level);
  4471  006E60  0E13               	movlw	19
  4472  006E62  ECC4  F034         	call	_oled_setContrastControlRegister
  4473  006E66                     
  4474                           ;SSD1306oLED.c: 404:     oled_initialDispayLine(0x00);
  4475  006E66  0E00               	movlw	0
  4476  006E68  EC9C  F034         	call	_oled_initialDispayLine
  4477  006E6C                     
  4478                           ;SSD1306oLED.c: 405:     oled_writeCommand(0xF8);
  4479  006E6C  0EF8               	movlw	248
  4480  006E6E  ECCC  F034         	call	_oled_writeCommand
  4481  006E72                     
  4482                           ;SSD1306oLED.c: 406:     oled_writeCommand(0x00);
  4483  006E72  0E00               	movlw	0
  4484  006E74  ECCC  F034         	call	_oled_writeCommand
  4485  006E78                     
  4486                           ;SSD1306oLED.c: 407:     oled_writeCommand(0xaf);
  4487  006E78  0EAF               	movlw	175
  4488  006E7A  ECCC  F034         	call	_oled_writeCommand
  4489  006E7E  0012               	return		;funcret
  4490  006E80                     __end_of_oled_devInit:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _oled_setContrastControlRegister *****************
  4494 ;; Defined at:
  4495 ;;		line 454 in file "SSD1306oLED.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  mod             1    wreg     unsigned char 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  mod             1    1[COMRAM] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0
  4510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4512 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4513 ;;Total ram usage:        1 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 1
  4516 ;; This function calls:
  4517 ;;		_oled_writeCommand
  4518 ;; This function is called by:
  4519 ;;		_oled_devInit
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text21
  4524  006988                     __ptext21:
  4525                           	callstack 0
  4526  006988                     _oled_setContrastControlRegister:
  4527                           	callstack 27
  4528                           
  4529                           ;incstack = 0
  4530                           ;oled_setContrastControlRegister@mod stored from wreg
  4531  006988  6E02               	movwf	oled_setContrastControlRegister@mod^0,c
  4532  00698A                     
  4533                           ;SSD1306oLED.c: 454: void oled_setContrastControlRegister(uint8_t mod);SSD1306oLED.c: 45
      +                          5: {;SSD1306oLED.c: 456:     oled_writeCommand(0x81);
  4534  00698A  0E81               	movlw	129
  4535  00698C  ECCC  F034         	call	_oled_writeCommand
  4536  006990                     
  4537                           ;SSD1306oLED.c: 457:     oled_writeCommand(mod);
  4538  006990  5002               	movf	oled_setContrastControlRegister@mod^0,w,c
  4539  006992  ECCC  F034         	call	_oled_writeCommand
  4540  006996  0012               	return		;funcret
  4541  006998                     __end_of_oled_setContrastControlRegister:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _oled_regulorResistorSelect *****************
  4545 ;; Defined at:
  4546 ;;		line 482 in file "SSD1306oLED.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  r               1    wreg     unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  r               1    1[COMRAM] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0
  4561 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4563 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4564 ;;Total ram usage:        1 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 1
  4567 ;; This function calls:
  4568 ;;		_oled_writeCommand
  4569 ;; This function is called by:
  4570 ;;		_oled_devInit
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text22
  4575  006950                     __ptext22:
  4576                           	callstack 0
  4577  006950                     _oled_regulorResistorSelect:
  4578                           	callstack 27
  4579                           
  4580                           ;incstack = 0
  4581                           ;oled_regulorResistorSelect@r stored from wreg
  4582  006950  6E02               	movwf	oled_regulorResistorSelect@r^0,c
  4583  006952                     
  4584                           ;SSD1306oLED.c: 482: void oled_regulorResistorSelect(uint8_t r);SSD1306oLED.c: 483: {;SS
      +                          D1306oLED.c: 484:     oled_writeCommand((0x20|r));
  4585  006952  5002               	movf	oled_regulorResistorSelect@r^0,w,c
  4586  006954  0920               	iorlw	32
  4587  006956  ECCC  F034         	call	_oled_writeCommand
  4588  00695A  0012               	return		;funcret
  4589  00695C                     __end_of_oled_regulorResistorSelect:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _oled_powerControl *****************
  4593 ;; Defined at:
  4594 ;;		line 469 in file "SSD1306oLED.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  vol             1    wreg     unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  vol             1    1[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        1 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 1
  4615 ;; This function calls:
  4616 ;;		_oled_writeCommand
  4617 ;; This function is called by:
  4618 ;;		_oled_devInit
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text23
  4623  006944                     __ptext23:
  4624                           	callstack 0
  4625  006944                     _oled_powerControl:
  4626                           	callstack 27
  4627                           
  4628                           ;incstack = 0
  4629                           ;oled_powerControl@vol stored from wreg
  4630  006944  6E02               	movwf	oled_powerControl@vol^0,c
  4631  006946                     
  4632                           ;SSD1306oLED.c: 469: void oled_powerControl(uint8_t vol);SSD1306oLED.c: 470: {;SSD1306oL
      +                          ED.c: 471:     oled_writeCommand((0x28|vol));
  4633  006946  5002               	movf	oled_powerControl@vol^0,w,c
  4634  006948  0928               	iorlw	40
  4635  00694A  ECCC  F034         	call	_oled_writeCommand
  4636  00694E  0012               	return		;funcret
  4637  006950                     __end_of_oled_powerControl:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _oled_initialDispayLine *****************
  4641 ;; Defined at:
  4642 ;;		line 462 in file "SSD1306oLED.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  line            1    wreg     unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  line            1    1[COMRAM] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0
  4657 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4659 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 1
  4663 ;; This function calls:
  4664 ;;		_oled_writeCommand
  4665 ;; This function is called by:
  4666 ;;		_oled_devInit
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text24
  4671  006938                     __ptext24:
  4672                           	callstack 0
  4673  006938                     _oled_initialDispayLine:
  4674                           	callstack 27
  4675                           
  4676                           ;incstack = 0
  4677                           ;oled_initialDispayLine@line stored from wreg
  4678  006938  6E02               	movwf	oled_initialDispayLine@line^0,c
  4679  00693A                     
  4680                           ;SSD1306oLED.c: 462: void oled_initialDispayLine(uint8_t line);SSD1306oLED.c: 463: {;SSD
      +                          1306oLED.c: 464:     line|=0x40;
  4681  00693A  8C02               	bsf	oled_initialDispayLine@line^0,6,c
  4682  00693C                     
  4683                           ;SSD1306oLED.c: 465:     oled_writeCommand(line);
  4684  00693C  5002               	movf	oled_initialDispayLine@line^0,w,c
  4685  00693E  ECCC  F034         	call	_oled_writeCommand
  4686  006942  0012               	return		;funcret
  4687  006944                     __end_of_oled_initialDispayLine:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _oled_clear *****************
  4691 ;; Defined at:
  4692 ;;		line 348 in file "SSD1306oLED.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; Hardware stack levels required when called: 4
  4713 ;; This function calls:
  4714 ;;		_oled_clearRow
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;;		_oled_init
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text25
  4722  0069EC                     __ptext25:
  4723                           	callstack 0
  4724  0069EC                     _oled_clear:
  4725                           	callstack 25
  4726  0069EC                     
  4727                           ;SSD1306oLED.c: 350:     oled_clearRow(0);
  4728  0069EC  0E00               	movlw	0
  4729  0069EE  EC35  F035         	call	_oled_clearRow
  4730                           
  4731                           ;SSD1306oLED.c: 351:     oled_clearRow(1);
  4732  0069F2  0E01               	movlw	1
  4733  0069F4  EC35  F035         	call	_oled_clearRow
  4734                           
  4735                           ;SSD1306oLED.c: 352:     oled_clearRow(2);
  4736  0069F8  0E02               	movlw	2
  4737  0069FA  EC35  F035         	call	_oled_clearRow
  4738                           
  4739                           ;SSD1306oLED.c: 353:     oled_clearRow(3);
  4740  0069FE  0E03               	movlw	3
  4741  006A00  EC35  F035         	call	_oled_clearRow
  4742  006A04  0012               	return		;funcret
  4743  006A06                     __end_of_oled_clear:
  4744                           	callstack 0
  4745                           
  4746 ;; *************** function _oled_clearRow *****************
  4747 ;; Defined at:
  4748 ;;		line 356 in file "SSD1306oLED.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  page            1    wreg     unsigned char 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  page            1   12[COMRAM] unsigned char 
  4753 ;;  index           1   13[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0
  4764 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4766 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:        2 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 3
  4770 ;; This function calls:
  4771 ;;		_oled_putChar
  4772 ;; This function is called by:
  4773 ;;		_oled_clear
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text26
  4778  006A6A                     __ptext26:
  4779                           	callstack 0
  4780  006A6A                     _oled_clearRow:
  4781                           	callstack 25
  4782                           
  4783                           ;incstack = 0
  4784                           ;oled_clearRow@page stored from wreg
  4785  006A6A  6E0D               	movwf	oled_clearRow@page^0,c
  4786  006A6C                     
  4787                           ;SSD1306oLED.c: 356: void oled_clearRow(uint8_t page);SSD1306oLED.c: 357: {;SSD1306oLED.
      +                          c: 358:     uint8_t index;;SSD1306oLED.c: 360:     for(index = 0; index < 16; index++)
  4788  006A6C  0E00               	movlw	0
  4789  006A6E  6E0E               	movwf	oled_clearRow@index^0,c
  4790  006A70                     l2147:
  4791                           
  4792                           ;SSD1306oLED.c: 361:     {;SSD1306oLED.c: 362:       oled_putChar( ' ', index, page);
  4793  006A70  C00E  F003         	movff	oled_clearRow@index,oled_putChar@station_dot
  4794  006A74  C00D  F004         	movff	oled_clearRow@page,oled_putChar@start_page
  4795  006A78  0E20               	movlw	32
  4796  006A7A  EC40  F037         	call	_oled_putChar
  4797  006A7E                     
  4798                           ;SSD1306oLED.c: 363:     }
  4799  006A7E  2A0E               	incf	oled_clearRow@index^0,f,c
  4800  006A80  0E0F               	movlw	15
  4801  006A82  640E               	cpfsgt	oled_clearRow@index^0,c
  4802  006A84  EF46  F035         	goto	u1181
  4803  006A88  EF48  F035         	goto	u1180
  4804  006A8C                     u1181:
  4805  006A8C  EF38  F035         	goto	l2147
  4806  006A90                     u1180:
  4807  006A90  0012               	return		;funcret
  4808  006A92                     __end_of_oled_clearRow:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _oled_putChar *****************
  4812 ;; Defined at:
  4813 ;;		line 318 in file "SSD1306oLED.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  k               1    wreg     unsigned char 
  4816 ;;  station_dot     1    2[COMRAM] unsigned char 
  4817 ;;  start_page      1    3[COMRAM] unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  k               1   10[COMRAM] unsigned char 
  4820 ;;  index           1   11[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:         2       0       0       0       0       0       0       0       0
  4831 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4833 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:       10 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 2
  4837 ;; This function calls:
  4838 ;;		_Set_Column_Address
  4839 ;;		_Set_Page_Address
  4840 ;;		_oled_writeData
  4841 ;; This function is called by:
  4842 ;;		_oled_putString
  4843 ;;		_oled_clearRow
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text27
  4848  006E80                     __ptext27:
  4849                           	callstack 0
  4850  006E80                     _oled_putChar:
  4851                           	callstack 26
  4852                           
  4853                           ;incstack = 0
  4854                           ;oled_putChar@k stored from wreg
  4855  006E80  6E0B               	movwf	oled_putChar@k^0,c
  4856  006E82                     
  4857                           ;SSD1306oLED.c: 318: void oled_putChar(char k,uint8_t station_dot, uint8_t start_page);S
      +                          SD1306oLED.c: 319: {;SSD1306oLED.c: 320:     uint8_t index;;SSD1306oLED.c: 322:     Set_
      +                          Page_Address(start_page);
  4858  006E82  5004               	movf	oled_putChar@start_page^0,w,c
  4859  006E84  ECBC  F034         	call	_Set_Page_Address
  4860  006E88                     
  4861                           ;SSD1306oLED.c: 323:     Set_Column_Address(0x00 + station_dot * 8 + 4);
  4862  006E88  5003               	movf	oled_putChar@station_dot^0,w,c
  4863  006E8A  0D08               	mullw	8
  4864  006E8C  50F3               	movf	243,w,c
  4865  006E8E  0F04               	addlw	4
  4866  006E90  ECEB  F034         	call	_Set_Column_Address
  4867  006E94                     
  4868                           ;SSD1306oLED.c: 325:     for(index = 0; index < 8; index++)
  4869  006E94  0E00               	movlw	0
  4870  006E96  6E0C               	movwf	oled_putChar@index^0,c
  4871  006E98                     l2035:
  4872                           
  4873                           ;SSD1306oLED.c: 326:     {;SSD1306oLED.c: 327:         oled_writeData(*(selectedFont + 8
      +                           * (k - 0x20) + index));
  4874  006E98  0E00               	movlw	0
  4875  006E9A  6E05               	movwf	??_oled_putChar^0,c
  4876  006E9C  0EFF               	movlw	255
  4877  006E9E  6E06               	movwf	(??_oled_putChar+1)^0,c
  4878  006EA0  500B               	movf	oled_putChar@k^0,w,c
  4879  006EA2  6E07               	movwf	(??_oled_putChar+2)^0,c
  4880  006EA4  6A08               	clrf	(??_oled_putChar+3)^0,c
  4881  006EA6  90D8               	bcf	status,0,c
  4882  006EA8  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  4883  006EAA  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  4884  006EAC  90D8               	bcf	status,0,c
  4885  006EAE  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  4886  006EB0  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  4887  006EB2  90D8               	bcf	status,0,c
  4888  006EB4  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  4889  006EB6  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  4890  006EB8  C0FA  F009         	movff	_selectedFont,??_oled_putChar+4
  4891  006EBC  C0FB  F00A         	movff	_selectedFont+1,??_oled_putChar+5
  4892  006EC0  5007               	movf	(??_oled_putChar+2)^0,w,c
  4893  006EC2  2609               	addwf	(??_oled_putChar+4)^0,f,c
  4894  006EC4  5008               	movf	(??_oled_putChar+3)^0,w,c
  4895  006EC6  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  4896  006EC8  500C               	movf	oled_putChar@index^0,w,c
  4897  006ECA  2609               	addwf	(??_oled_putChar+4)^0,f,c
  4898  006ECC  0E00               	movlw	0
  4899  006ECE  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  4900  006ED0  5005               	movf	??_oled_putChar^0,w,c
  4901  006ED2  2609               	addwf	(??_oled_putChar+4)^0,f,c
  4902  006ED4  5006               	movf	(??_oled_putChar+1)^0,w,c
  4903  006ED6  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  4904  006ED8  C009  FFF6         	movff	??_oled_putChar+4,tblptrl
  4905  006EDC  C00A  FFF7         	movff	??_oled_putChar+5,tblptrh
  4906  006EE0                     	if	0	;tblptru may be non-zero
  4907  006EE0                     	endif
  4908  006EE0                     	if	0	;tblptru may be non-zero
  4909  006EE0                     	endif
  4910  006EE0  0008               	tblrd		*
  4911  006EE2  50F5               	movf	tablat,w,c
  4912  006EE4  ECD6  F034         	call	_oled_writeData
  4913  006EE8                     
  4914                           ;SSD1306oLED.c: 328:     }
  4915  006EE8  2A0C               	incf	oled_putChar@index^0,f,c
  4916  006EEA  0E07               	movlw	7
  4917  006EEC  640C               	cpfsgt	oled_putChar@index^0,c
  4918  006EEE  EF7B  F037         	goto	u961
  4919  006EF2  EF7D  F037         	goto	u960
  4920  006EF6                     u961:
  4921  006EF6  EF4C  F037         	goto	l2035
  4922  006EFA                     u960:
  4923  006EFA  0012               	return		;funcret
  4924  006EFC                     __end_of_oled_putChar:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _oled_writeData *****************
  4928 ;; Defined at:
  4929 ;;		line 442 in file "SSD1306oLED.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  data            1    wreg     unsigned char 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  data            1    0[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0
  4944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4946 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4947 ;;Total ram usage:        1 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_oled_putChar
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text28
  4957  0069AC                     __ptext28:
  4958                           	callstack 0
  4959  0069AC                     _oled_writeData:
  4960                           	callstack 27
  4961                           
  4962                           ;incstack = 0
  4963                           ;oled_writeData@data stored from wreg
  4964  0069AC  6E01               	movwf	oled_writeData@data^0,c
  4965  0069AE                     
  4966                           ;SSD1306oLED.c: 442: void oled_writeData(uint8_t data);SSD1306oLED.c: 443: {;SSD1306oLED
      +                          .c: 444:     LATBbits.LATB4=0;
  4967  0069AE  988A               	bcf	138,4,c	;volatile
  4968                           
  4969                           ;SSD1306oLED.c: 445:     LATCbits.LATC0=1;
  4970  0069B0  808B               	bsf	139,0,c	;volatile
  4971  0069B2                     
  4972                           ;SSD1306oLED.c: 446:     LATD=data;
  4973  0069B2  C001  FF8C         	movff	oled_writeData@data,3980	;volatile
  4974  0069B6                     
  4975                           ;SSD1306oLED.c: 447:     LATCbits.LATC1=0;
  4976  0069B6  928B               	bcf	139,1,c	;volatile
  4977  0069B8                     
  4978                           ;SSD1306oLED.c: 448:     __nop();
  4979  0069B8  F000               	nop	
  4980  0069BA                     
  4981                           ;SSD1306oLED.c: 449:     LATCbits.LATC1=1;
  4982  0069BA  828B               	bsf	139,1,c	;volatile
  4983  0069BC                     
  4984                           ;SSD1306oLED.c: 450:     LATBbits.LATB4=1;
  4985  0069BC  888A               	bsf	138,4,c	;volatile
  4986  0069BE  0012               	return		;funcret
  4987  0069C0                     __end_of_oled_writeData:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _Set_Page_Address *****************
  4991 ;; Defined at:
  4992 ;;		line 241 in file "SSD1306oLED.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  address         1    wreg     unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  address         1    1[COMRAM] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        1 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; Hardware stack levels required when called: 1
  5013 ;; This function calls:
  5014 ;;		_oled_writeCommand
  5015 ;; This function is called by:
  5016 ;;		_oled_putChar
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text29
  5021  006978                     __ptext29:
  5022                           	callstack 0
  5023  006978                     _Set_Page_Address:
  5024                           	callstack 26
  5025                           
  5026                           ;incstack = 0
  5027                           ;Set_Page_Address@address stored from wreg
  5028  006978  6E02               	movwf	Set_Page_Address@address^0,c
  5029  00697A                     
  5030                           ;SSD1306oLED.c: 241: void Set_Page_Address(uint8_t address);SSD1306oLED.c: 242: {;SSD130
      +                          6oLED.c: 243:     address = 0xb0 | address;
  5031  00697A  5002               	movf	Set_Page_Address@address^0,w,c
  5032  00697C  09B0               	iorlw	176
  5033  00697E  6E02               	movwf	Set_Page_Address@address^0,c
  5034  006980                     
  5035                           ;SSD1306oLED.c: 244:     oled_writeCommand(address);
  5036  006980  5002               	movf	Set_Page_Address@address^0,w,c
  5037  006982  ECCC  F034         	call	_oled_writeCommand
  5038  006986  0012               	return		;funcret
  5039  006988                     __end_of_Set_Page_Address:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function _Set_Column_Address *****************
  5043 ;; Defined at:
  5044 ;;		line 249 in file "SSD1306oLED.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  address         1    wreg     unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  address         1    1[COMRAM] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5058 ;;      Params:         0       0       0       0       0       0       0       0       0
  5059 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5061 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5062 ;;Total ram usage:        1 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 1
  5065 ;; This function calls:
  5066 ;;		_oled_writeCommand
  5067 ;; This function is called by:
  5068 ;;		_oled_putChar
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text30
  5073  0069D6                     __ptext30:
  5074                           	callstack 0
  5075  0069D6                     _Set_Column_Address:
  5076                           	callstack 26
  5077                           
  5078                           ;incstack = 0
  5079                           ;Set_Column_Address@address stored from wreg
  5080  0069D6  6E02               	movwf	Set_Column_Address@address^0,c
  5081  0069D8                     
  5082                           ;SSD1306oLED.c: 249: void Set_Column_Address(uint8_t address);SSD1306oLED.c: 250: {;SSD1
      +                          306oLED.c: 251:     oled_writeCommand((0x10|(address>>4)));
  5083  0069D8  3802               	swapf	Set_Column_Address@address^0,w,c
  5084  0069DA  0B0F               	andlw	15
  5085  0069DC  0910               	iorlw	16
  5086  0069DE  ECCC  F034         	call	_oled_writeCommand
  5087                           
  5088                           ;SSD1306oLED.c: 252:     oled_writeCommand((0x0f&address));
  5089  0069E2  5002               	movf	Set_Column_Address@address^0,w,c
  5090  0069E4  0B0F               	andlw	15
  5091  0069E6  ECCC  F034         	call	_oled_writeCommand
  5092  0069EA  0012               	return		;funcret
  5093  0069EC                     __end_of_Set_Column_Address:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _oled_writeCommand *****************
  5097 ;; Defined at:
  5098 ;;		line 430 in file "SSD1306oLED.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  command         1    wreg     unsigned char 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  command         1    0[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		wreg
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         0       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5115 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:        1 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_Set_Page_Address
  5122 ;;		_Set_Column_Address
  5123 ;;		_oled_devInit
  5124 ;;		_oled_setDisplay
  5125 ;;		_oled_setContrastControlRegister
  5126 ;;		_oled_initialDispayLine
  5127 ;;		_oled_powerControl
  5128 ;;		_oled_regulorResistorSelect
  5129 ;;		_oled_displayOff
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text31
  5134  006998                     __ptext31:
  5135                           	callstack 0
  5136  006998                     _oled_writeCommand:
  5137                           	callstack 26
  5138                           
  5139                           ;incstack = 0
  5140                           ;oled_writeCommand@command stored from wreg
  5141  006998  6E01               	movwf	oled_writeCommand@command^0,c
  5142  00699A                     
  5143                           ;SSD1306oLED.c: 430: void oled_writeCommand(uint8_t command);SSD1306oLED.c: 431: {;SSD13
      +                          06oLED.c: 432:     LATBbits.LATB4=0;
  5144  00699A  988A               	bcf	138,4,c	;volatile
  5145                           
  5146                           ;SSD1306oLED.c: 433:     LATCbits.LATC0=0;
  5147  00699C  908B               	bcf	139,0,c	;volatile
  5148  00699E                     
  5149                           ;SSD1306oLED.c: 434:     LATD=command;
  5150  00699E  C001  FF8C         	movff	oled_writeCommand@command,3980	;volatile
  5151  0069A2                     
  5152                           ;SSD1306oLED.c: 435:     LATCbits.LATC1=0;
  5153  0069A2  928B               	bcf	139,1,c	;volatile
  5154  0069A4                     
  5155                           ;SSD1306oLED.c: 436:     __nop();
  5156  0069A4  F000               	nop	
  5157  0069A6                     
  5158                           ;SSD1306oLED.c: 437:     LATCbits.LATC1=1;
  5159  0069A6  828B               	bsf	139,1,c	;volatile
  5160  0069A8                     
  5161                           ;SSD1306oLED.c: 438:     LATBbits.LATB4=1;
  5162  0069A8  888A               	bsf	138,4,c	;volatile
  5163  0069AA  0012               	return		;funcret
  5164  0069AC                     __end_of_oled_writeCommand:
  5165                           	callstack 0
  5166                           
  5167 ;; *************** function _init_port *****************
  5168 ;; Defined at:
  5169 ;;		line 13 in file "main.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5186 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_main
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text32
  5197  00696A                     __ptext32:
  5198                           	callstack 0
  5199  00696A                     _init_port:
  5200                           	callstack 30
  5201  00696A                     
  5202                           ;main.c: 15:     TRISAbits.TRISA7 = 0;
  5203  00696A  9E92               	bcf	146,7,c	;volatile
  5204                           
  5205                           ;main.c: 16:     LATAbits.LATA7 = 0;
  5206  00696C  9E89               	bcf	137,7,c	;volatile
  5207                           
  5208                           ;main.c: 18:     TRISAbits.TRISA6 = 0;
  5209  00696E  9C92               	bcf	146,6,c	;volatile
  5210                           
  5211                           ;main.c: 19:     LATAbits.LATA6 = 0;
  5212  006970  9C89               	bcf	137,6,c	;volatile
  5213  006972                     
  5214                           ;main.c: 21:     TRISD = 0b00000000;
  5215  006972  0E00               	movlw	0
  5216  006974  6E95               	movwf	149,c	;volatile
  5217  006976  0012               	return		;funcret
  5218  006978                     __end_of_init_port:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _get_Data *****************
  5222 ;; Defined at:
  5223 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  2    0[COMRAM] PTR unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         2       0       0       0       0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5240 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:        4 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text33
  5251  006AF0                     __ptext33:
  5252                           	callstack 0
  5253  006AF0                     _get_Data:
  5254                           	callstack 30
  5255  006AF0                     l67:
  5256                           
  5257                           ;mcc_generated_files/eusart1.c: 134:     while(!PIR1bits.RC1IF)
  5258  006AF0  AA9E               	btfss	158,5,c	;volatile
  5259  006AF2  EF7D  F035         	goto	u1361
  5260  006AF6  EF7F  F035         	goto	u1360
  5261  006AFA                     u1361:
  5262  006AFA  EF78  F035         	goto	l67
  5263  006AFE                     u1360:
  5264  006AFE                     
  5265                           ;mcc_generated_files/eusart1.c: 138:     eusart1RxLastError.status = 0;
  5266  006AFE  0E00               	movlw	0
  5267  006B00  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  5268  006B02                     
  5269                           ;mcc_generated_files/eusart1.c: 140:     if(1 == RCSTA1bits.OERR)
  5270  006B02  A2AB               	btfss	171,1,c	;volatile
  5271  006B04  EF86  F035         	goto	u1371
  5272  006B08  EF88  F035         	goto	u1370
  5273  006B0C                     u1371:
  5274  006B0C  EF8A  F035         	goto	l2351
  5275  006B10                     u1370:
  5276  006B10                     
  5277                           ;mcc_generated_files/eusart1.c: 141:     {;mcc_generated_files/eusart1.c: 144:         R
      +                          CSTA1bits.CREN = 0;
  5278  006B10  98AB               	bcf	171,4,c	;volatile
  5279                           
  5280                           ;mcc_generated_files/eusart1.c: 145:         RCSTA1bits.CREN = 1;
  5281  006B12  88AB               	bsf	171,4,c	;volatile
  5282  006B14                     l2351:
  5283                           
  5284                           ;mcc_generated_files/eusart1.c: 148:     return RCREG1;
  5285  006B14  50AE               	movf	174,w,c	;volatile
  5286  006B16  6E03               	movwf	??_get_Data^0,c
  5287  006B18  6A04               	clrf	(??_get_Data+1)^0,c
  5288  006B1A  C003  F001         	movff	??_get_Data,?_get_Data
  5289  006B1E  C004  F002         	movff	??_get_Data+1,?_get_Data+1
  5290  006B22  0012               	return		;funcret
  5291  006B24                     __end_of_get_Data:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function _SYSTEM_Initialize *****************
  5295 ;; Defined at:
  5296 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5310 ;;      Params:         0       0       0       0       0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5313 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5314 ;;Total ram usage:        0 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 2
  5317 ;; This function calls:
  5318 ;;		_EUSART1_Initialize
  5319 ;;		_OSCILLATOR_Initialize
  5320 ;;		_PIN_MANAGER_Initialize
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text34
  5327  00695C                     __ptext34:
  5328                           	callstack 0
  5329  00695C                     _SYSTEM_Initialize:
  5330                           	callstack 28
  5331  00695C                     
  5332                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5333  00695C  EC1E  F036         	call	_PIN_MANAGER_Initialize	;wreg free
  5334                           
  5335                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5336  006960  EC11  F035         	call	_OSCILLATOR_Initialize	;wreg free
  5337  006964                     
  5338                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
  5339  006964  ECFF  F035         	call	_EUSART1_Initialize	;wreg free
  5340  006968  0012               	return		;funcret
  5341  00696A                     __end_of_SYSTEM_Initialize:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _PIN_MANAGER_Initialize *****************
  5345 ;; Defined at:
  5346 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_SYSTEM_Initialize
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text35
  5374  006C3C                     __ptext35:
  5375                           	callstack 0
  5376  006C3C                     _PIN_MANAGER_Initialize:
  5377                           	callstack 29
  5378  006C3C                     
  5379                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5380  006C3C  0E00               	movlw	0
  5381  006C3E  6E8D               	movwf	141,c	;volatile
  5382                           
  5383                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5384  006C40  0E00               	movlw	0
  5385  006C42  6E8C               	movwf	140,c	;volatile
  5386                           
  5387                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5388  006C44  0E00               	movlw	0
  5389  006C46  6E89               	movwf	137,c	;volatile
  5390                           
  5391                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5392  006C48  0E00               	movlw	0
  5393  006C4A  6E8A               	movwf	138,c	;volatile
  5394                           
  5395                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5396  006C4C  0E00               	movlw	0
  5397  006C4E  6E8B               	movwf	139,c	;volatile
  5398                           
  5399                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  5400  006C50  0E07               	movlw	7
  5401  006C52  6E96               	movwf	150,c	;volatile
  5402  006C54                     
  5403                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5404  006C54  6892               	setf	146,c	;volatile
  5405  006C56                     
  5406                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  5407  006C56  6893               	setf	147,c	;volatile
  5408                           
  5409                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x87;
  5410  006C58  0E87               	movlw	135
  5411  006C5A  6E94               	movwf	148,c	;volatile
  5412  006C5C                     
  5413                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  5414  006C5C  6895               	setf	149,c	;volatile
  5415  006C5E                     
  5416                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5417  006C5E  010F               	movlb	15	; () banked
  5418  006C60  695E               	setf	94,b	;volatile
  5419                           
  5420                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x04;
  5421  006C62  0E04               	movlw	4
  5422  006C64  6F5D               	movwf	93,b	;volatile
  5423                           
  5424                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  5425  006C66  0E3F               	movlw	63
  5426  006C68  6F5C               	movwf	92,b	;volatile
  5427                           
  5428                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  5429  006C6A  0E07               	movlw	7
  5430  006C6C  6F5F               	movwf	95,b	;volatile
  5431                           
  5432                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  5433  006C6E  0E2F               	movlw	47
  5434  006C70  6F5B               	movwf	91,b	;volatile
  5435                           
  5436                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  5437  006C72  0E00               	movlw	0
  5438  006C74  6E85               	movwf	133,c	;volatile
  5439  006C76                     
  5440                           ; BSR set to: 15
  5441                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  5442  006C76  8EF1               	bsf	241,7,c	;volatile
  5443  006C78                     
  5444                           ; BSR set to: 15
  5445  006C78  0012               	return		;funcret
  5446  006C7A                     __end_of_PIN_MANAGER_Initialize:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _OSCILLATOR_Initialize *****************
  5450 ;; Defined at:
  5451 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;		None
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5465 ;;      Params:         0       0       0       0       0       0       0       0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5468 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5469 ;;Total ram usage:        0 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_SYSTEM_Initialize
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text36
  5479  006A22                     __ptext36:
  5480                           	callstack 0
  5481  006A22                     _OSCILLATOR_Initialize:
  5482                           	callstack 29
  5483  006A22                     
  5484                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  5485  006A22  0E70               	movlw	112
  5486  006A24  6ED3               	movwf	211,c	;volatile
  5487                           
  5488                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x00;
  5489  006A26  0E00               	movlw	0
  5490  006A28  6ED2               	movwf	210,c	;volatile
  5491                           
  5492                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x80;
  5493  006A2A  0E80               	movlw	128
  5494  006A2C  6E9B               	movwf	155,c	;volatile
  5495                           
  5496                           ;mcc_generated_files/mcc.c: 67:     ACTCON = 0x00;
  5497  006A2E  0E00               	movlw	0
  5498  006A30  6EB5               	movwf	181,c	;volatile
  5499  006A32                     l159:
  5500                           
  5501                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  5502  006A32  AED2               	btfss	4050,7,c	;volatile
  5503  006A34  EF1E  F035         	goto	u1241
  5504  006A38  EF20  F035         	goto	u1240
  5505  006A3C                     u1241:
  5506  006A3C  EF19  F035         	goto	l159
  5507  006A40                     u1240:
  5508  006A40  0012               	return		;funcret
  5509  006A42                     __end_of_OSCILLATOR_Initialize:
  5510                           	callstack 0
  5511                           
  5512 ;; *************** function _EUSART1_Initialize *****************
  5513 ;; Defined at:
  5514 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; Hardware stack levels required when called: 1
  5535 ;; This function calls:
  5536 ;;		_EUSART1_SetErrorHandler
  5537 ;;		_EUSART1_SetFramingErrorHandler
  5538 ;;		_EUSART1_SetOverrunErrorHandler
  5539 ;; This function is called by:
  5540 ;;		_SYSTEM_Initialize
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text37
  5545  006BFE                     __ptext37:
  5546                           	callstack 0
  5547  006BFE                     _EUSART1_Initialize:
  5548                           	callstack 28
  5549  006BFE                     
  5550                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5551  006BFE  0E08               	movlw	8
  5552  006C00  6EB8               	movwf	184,c	;volatile
  5553                           
  5554                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5555  006C02  0E90               	movlw	144
  5556  006C04  6EAB               	movwf	171,c	;volatile
  5557                           
  5558                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5559  006C06  0E24               	movlw	36
  5560  006C08  6EAC               	movwf	172,c	;volatile
  5561                           
  5562                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  5563  006C0A  0ECF               	movlw	207
  5564  006C0C  6EAF               	movwf	175,c	;volatile
  5565                           
  5566                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  5567  006C0E  0E00               	movlw	0
  5568  006C10  6EB0               	movwf	176,c	;volatile
  5569  006C12                     
  5570                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5571  006C12  0E00               	movlw	0
  5572  006C14  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5573  006C16  0E00               	movlw	0
  5574  006C18  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5575  006C1A  EC92  F034         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5576  006C1E                     
  5577                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5578  006C1E  0E00               	movlw	0
  5579  006C20  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5580  006C22  0E00               	movlw	0
  5581  006C24  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5582  006C26  EC97  F034         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5583  006C2A                     
  5584                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5585  006C2A  0E00               	movlw	0
  5586  006C2C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5587  006C2E  0E00               	movlw	0
  5588  006C30  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5589  006C32  EC8D  F034         	call	_EUSART1_SetErrorHandler	;wreg free
  5590  006C36                     
  5591                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5592  006C36  0E00               	movlw	0
  5593  006C38  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  5594  006C3A  0012               	return		;funcret
  5595  006C3C                     __end_of_EUSART1_Initialize:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5599 ;; Defined at:
  5600 ;;		line 179 in file "mcc_generated_files/eusart1.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5603 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5615 ;;      Params:         2       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5618 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        2 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_EUSART1_Initialize
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text38
  5629  00692E                     __ptext38:
  5630                           	callstack 0
  5631  00692E                     _EUSART1_SetOverrunErrorHandler:
  5632                           	callstack 28
  5633  00692E                     
  5634                           ;mcc_generated_files/eusart1.c: 180:     EUSART1_OverrunErrorHandler = interruptHandler;
  5635  00692E  C001  F0D6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5636  006932  C002  F0D7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5637  006936  0012               	return		;funcret
  5638  006938                     __end_of_EUSART1_SetOverrunErrorHandler:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5642 ;; Defined at:
  5643 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5646 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:         2       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:        2 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_EUSART1_Initialize
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text39
  5672  006924                     __ptext39:
  5673                           	callstack 0
  5674  006924                     _EUSART1_SetFramingErrorHandler:
  5675                           	callstack 28
  5676  006924                     
  5677                           ;mcc_generated_files/eusart1.c: 176:     EUSART1_FramingErrorHandler = interruptHandler;
  5678  006924  C001  F0D8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5679  006928  C002  F0D9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5680  00692C  0012               	return		;funcret
  5681  00692E                     __end_of_EUSART1_SetFramingErrorHandler:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _EUSART1_SetErrorHandler *****************
  5685 ;; Defined at:
  5686 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5689 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5701 ;;      Params:         2       0       0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5704 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5705 ;;Total ram usage:        2 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_EUSART1_Initialize
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text40
  5715  00691A                     __ptext40:
  5716                           	callstack 0
  5717  00691A                     _EUSART1_SetErrorHandler:
  5718                           	callstack 28
  5719  00691A                     
  5720                           ;mcc_generated_files/eusart1.c: 184:     EUSART1_ErrorHandler = interruptHandler;
  5721  00691A  C001  F0D4         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5722  00691E  C002  F0D5         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5723  006922  0012               	return		;funcret
  5724  006924                     __end_of_EUSART1_SetErrorHandler:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _RN_Leds *****************
  5728 ;; Defined at:
  5729 ;;		line 69 in file "main.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  state           1    wreg     _Bool 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  state           1    4[COMRAM] _Bool 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5747 ;;Total ram usage:        2 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; Hardware stack levels required when called: 2
  5750 ;; This function calls:
  5751 ;;		_sendCommand
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text41
  5758  00710C                     __ptext41:
  5759                           	callstack 0
  5760  00710C                     _RN_Leds:
  5761                           	callstack 28
  5762                           
  5763                           ;incstack = 0
  5764                           ;RN_Leds@state stored from wreg
  5765  00710C  6E05               	movwf	RN_Leds@state^0,c
  5766  00710E                     
  5767                           ;main.c: 69: void RN_Leds(_Bool state);main.c: 70: {;main.c: 71:     _delay((unsigned lo
      +                          ng)((16)*(48000000/4000.0)));
  5768  00710E  0EFA               	movlw	250
  5769  007110  6E04               	movwf	??_RN_Leds^0,c
  5770  007112  0E58               	movlw	88
  5771  007114                     u1477:
  5772  007114  2EE8               	decfsz	wreg,f,c
  5773  007116  D7FE               	bra	u1477
  5774  007118  2E04               	decfsz	??_RN_Leds^0,f,c
  5775  00711A  D7FC               	bra	u1477
  5776  00711C  D000               	nop2	
  5777                           
  5778                           ;main.c: 72:     _delay((unsigned long)((16)*(48000000/4000.0)));
  5779  00711E  0EFA               	movlw	250
  5780  007120  6E04               	movwf	??_RN_Leds^0,c
  5781  007122  0E58               	movlw	88
  5782  007124                     u1487:
  5783  007124  2EE8               	decfsz	wreg,f,c
  5784  007126  D7FE               	bra	u1487
  5785  007128  2E04               	decfsz	??_RN_Leds^0,f,c
  5786  00712A  D7FC               	bra	u1487
  5787  00712C  D000               	nop2	
  5788                           
  5789                           ;main.c: 73:     _delay((unsigned long)((16)*(48000000/4000.0)));
  5790  00712E  0EFA               	movlw	250
  5791  007130  6E04               	movwf	??_RN_Leds^0,c
  5792  007132  0E58               	movlw	88
  5793  007134                     u1497:
  5794  007134  2EE8               	decfsz	wreg,f,c
  5795  007136  D7FE               	bra	u1497
  5796  007138  2E04               	decfsz	??_RN_Leds^0,f,c
  5797  00713A  D7FC               	bra	u1497
  5798  00713C  D000               	nop2	
  5799  00713E                     
  5800                           ;main.c: 74:     if (state)
  5801  00713E  5005               	movf	RN_Leds@state^0,w,c
  5802  007140  B4D8               	btfsc	status,2,c
  5803  007142  EFA5  F038         	goto	u1381
  5804  007146  EFA7  F038         	goto	u1380
  5805  00714A                     u1381:
  5806  00714A  EFCD  F038         	goto	l2403
  5807  00714E                     u1380:
  5808  00714E                     
  5809                           ;main.c: 75:     {;main.c: 76:         sendCommand("sys set pindig GPIO10 1\r\n");
  5810  00714E  0E99               	movlw	low STR_2
  5811  007150  6E02               	movwf	sendCommand@texto^0,c
  5812  007152  0E7F               	movlw	high STR_2
  5813  007154  6E03               	movwf	(sendCommand@texto+1)^0,c
  5814  007156  EC92  F035         	call	_sendCommand	;wreg free
  5815  00715A                     
  5816                           ;main.c: 77:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5817  00715A  0EFA               	movlw	250
  5818  00715C  6E04               	movwf	??_RN_Leds^0,c
  5819  00715E  0E58               	movlw	88
  5820  007160                     u1507:
  5821  007160  2EE8               	decfsz	wreg,f,c
  5822  007162  D7FE               	bra	u1507
  5823  007164  2E04               	decfsz	??_RN_Leds^0,f,c
  5824  007166  D7FC               	bra	u1507
  5825  007168  D000               	nop2	
  5826  00716A                     
  5827                           ;main.c: 78:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5828  00716A  0EFA               	movlw	250
  5829  00716C  6E04               	movwf	??_RN_Leds^0,c
  5830  00716E  0E58               	movlw	88
  5831  007170                     u1517:
  5832  007170  2EE8               	decfsz	wreg,f,c
  5833  007172  D7FE               	bra	u1517
  5834  007174  2E04               	decfsz	??_RN_Leds^0,f,c
  5835  007176  D7FC               	bra	u1517
  5836  007178  D000               	nop2	
  5837  00717A                     
  5838                           ;main.c: 79:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5839  00717A  0EFA               	movlw	250
  5840  00717C  6E04               	movwf	??_RN_Leds^0,c
  5841  00717E  0E58               	movlw	88
  5842  007180                     u1527:
  5843  007180  2EE8               	decfsz	wreg,f,c
  5844  007182  D7FE               	bra	u1527
  5845  007184  2E04               	decfsz	??_RN_Leds^0,f,c
  5846  007186  D7FC               	bra	u1527
  5847  007188  D000               	nop2	
  5848  00718A                     
  5849                           ;main.c: 80:         sendCommand("sys set pindig GPIO11 1\r\n");
  5850  00718A  0EB3               	movlw	low STR_3
  5851  00718C  6E02               	movwf	sendCommand@texto^0,c
  5852  00718E  0E7F               	movlw	high STR_3
  5853  007190  6E03               	movwf	(sendCommand@texto+1)^0,c
  5854  007192  EC92  F035         	call	_sendCommand	;wreg free
  5855                           
  5856                           ;main.c: 81:     }
  5857  007196  EFF1  F038         	goto	l212
  5858  00719A                     l2403:
  5859                           
  5860                           ;main.c: 83:     {;main.c: 84:         sendCommand("sys set pindig GPIO10 0\r\n");
  5861  00719A  0E65               	movlw	low STR_4
  5862  00719C  6E02               	movwf	sendCommand@texto^0,c
  5863  00719E  0E7F               	movlw	high STR_4
  5864  0071A0  6E03               	movwf	(sendCommand@texto+1)^0,c
  5865  0071A2  EC92  F035         	call	_sendCommand	;wreg free
  5866  0071A6                     
  5867                           ;main.c: 85:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5868  0071A6  0EFA               	movlw	250
  5869  0071A8  6E04               	movwf	??_RN_Leds^0,c
  5870  0071AA  0E58               	movlw	88
  5871  0071AC                     u1537:
  5872  0071AC  2EE8               	decfsz	wreg,f,c
  5873  0071AE  D7FE               	bra	u1537
  5874  0071B0  2E04               	decfsz	??_RN_Leds^0,f,c
  5875  0071B2  D7FC               	bra	u1537
  5876  0071B4  D000               	nop2	
  5877  0071B6                     
  5878                           ;main.c: 86:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5879  0071B6  0EFA               	movlw	250
  5880  0071B8  6E04               	movwf	??_RN_Leds^0,c
  5881  0071BA  0E58               	movlw	88
  5882  0071BC                     u1547:
  5883  0071BC  2EE8               	decfsz	wreg,f,c
  5884  0071BE  D7FE               	bra	u1547
  5885  0071C0  2E04               	decfsz	??_RN_Leds^0,f,c
  5886  0071C2  D7FC               	bra	u1547
  5887  0071C4  D000               	nop2	
  5888  0071C6                     
  5889                           ;main.c: 87:         _delay((unsigned long)((16)*(48000000/4000.0)));
  5890  0071C6  0EFA               	movlw	250
  5891  0071C8  6E04               	movwf	??_RN_Leds^0,c
  5892  0071CA  0E58               	movlw	88
  5893  0071CC                     u1557:
  5894  0071CC  2EE8               	decfsz	wreg,f,c
  5895  0071CE  D7FE               	bra	u1557
  5896  0071D0  2E04               	decfsz	??_RN_Leds^0,f,c
  5897  0071D2  D7FC               	bra	u1557
  5898  0071D4  D000               	nop2	
  5899  0071D6                     
  5900                           ;main.c: 88:         sendCommand("sys set pindig GPIO11 0\r\n");
  5901  0071D6  0E7F               	movlw	low STR_5
  5902  0071D8  6E02               	movwf	sendCommand@texto^0,c
  5903  0071DA  0E7F               	movlw	high STR_5
  5904  0071DC  6E03               	movwf	(sendCommand@texto+1)^0,c
  5905  0071DE  EC92  F035         	call	_sendCommand	;wreg free
  5906  0071E2                     l212:
  5907  0071E2  0012               	return		;funcret
  5908  0071E4                     __end_of_RN_Leds:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _sendCommand *****************
  5912 ;; Defined at:
  5913 ;;		line 39 in file "main.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  texto           2    1[COMRAM] PTR unsigned char 
  5916 ;;		 -> STR_5(26), STR_4(26), STR_3(26), STR_2(26), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         2       0       0       0       0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5931 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5932 ;;Total ram usage:        2 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 1
  5935 ;; This function calls:
  5936 ;;		_EUSART1_Write
  5937 ;; This function is called by:
  5938 ;;		_RN_Leds
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text42
  5943  006B24                     __ptext42:
  5944                           	callstack 0
  5945  006B24                     _sendCommand:
  5946                           	callstack 28
  5947  006B24                     
  5948                           ;main.c: 39: void sendCommand(char * texto);main.c: 40: {;main.c: 41:     while(* texto)
  5949  006B24  EF9E  F035         	goto	l2259
  5950  006B28                     l2255:
  5951                           
  5952                           ;main.c: 42:     {;main.c: 43:         EUSART1_Write(* texto);
  5953  006B28  C002  FFF6         	movff	sendCommand@texto,tblptrl
  5954  006B2C  C003  FFF7         	movff	sendCommand@texto+1,tblptrh
  5955  006B30                     	if	0	;tblptru may be non-zero
  5956  006B30                     	endif
  5957  006B30                     	if	0	;tblptru may be non-zero
  5958  006B30                     	endif
  5959  006B30  0008               	tblrd		*
  5960  006B32  50F5               	movf	tablat,w,c
  5961  006B34  ECE0  F034         	call	_EUSART1_Write
  5962  006B38                     
  5963                           ;main.c: 44:         texto++;
  5964  006B38  4A02               	infsnz	sendCommand@texto^0,f,c
  5965  006B3A  2A03               	incf	(sendCommand@texto+1)^0,f,c
  5966  006B3C                     l2259:
  5967                           
  5968                           ;main.c: 41:     while(* texto)
  5969  006B3C  C002  FFF6         	movff	sendCommand@texto,tblptrl
  5970  006B40  C003  FFF7         	movff	sendCommand@texto+1,tblptrh
  5971  006B44                     	if	0	;tblptru may be non-zero
  5972  006B44                     	endif
  5973  006B44                     	if	0	;tblptru may be non-zero
  5974  006B44                     	endif
  5975  006B44  0008               	tblrd		*
  5976  006B46  50F5               	movf	tablat,w,c
  5977  006B48  0900               	iorlw	0
  5978  006B4A  A4D8               	btfss	status,2,c
  5979  006B4C  EFAA  F035         	goto	u1261
  5980  006B50  EFAC  F035         	goto	u1260
  5981  006B54                     u1261:
  5982  006B54  EF94  F035         	goto	l2255
  5983  006B58                     u1260:
  5984  006B58  0012               	return		;funcret
  5985  006B5A                     __end_of_sendCommand:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _EUSART1_Write *****************
  5989 ;; Defined at:
  5990 ;;		line 150 in file "mcc_generated_files/eusart1.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  txData          1    wreg     unsigned char 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  txData          1    0[COMRAM] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0
  6005 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6007 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6008 ;;Total ram usage:        1 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_sendCommand
  6014 ;;		_Endline
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text43
  6019  0069C0                     __ptext43:
  6020                           	callstack 0
  6021  0069C0                     _EUSART1_Write:
  6022                           	callstack 28
  6023                           
  6024                           ;incstack = 0
  6025                           ;EUSART1_Write@txData stored from wreg
  6026  0069C0  6E01               	movwf	EUSART1_Write@txData^0,c
  6027  0069C2                     l74:
  6028                           
  6029                           ;mcc_generated_files/eusart1.c: 152:     while(0 == PIR1bits.TX1IF)
  6030  0069C2  A89E               	btfss	158,4,c	;volatile
  6031  0069C4  EFE6  F034         	goto	u1171
  6032  0069C8  EFE8  F034         	goto	u1170
  6033  0069CC                     u1171:
  6034  0069CC  EFE1  F034         	goto	l74
  6035  0069D0                     u1170:
  6036  0069D0                     
  6037                           ;mcc_generated_files/eusart1.c: 156:     TXREG1 = txData;
  6038  0069D0  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6039  0069D4  0012               	return		;funcret
  6040  0069D6                     __end_of_EUSART1_Write:
  6041                           	callstack 0
  6042                           
  6043 ;; *************** function _EUSART1_Read *****************
  6044 ;; Defined at:
  6045 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      unsigned char 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_main
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text44
  6073  006A42                     __ptext44:
  6074                           	callstack 0
  6075  006A42                     _EUSART1_Read:
  6076                           	callstack 30
  6077  006A42                     l60:
  6078                           
  6079                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  6080  006A42  AA9E               	btfss	158,5,c	;volatile
  6081  006A44  EF26  F035         	goto	u1341
  6082  006A48  EF28  F035         	goto	u1340
  6083  006A4C                     u1341:
  6084  006A4C  EF21  F035         	goto	l60
  6085  006A50                     u1340:
  6086  006A50                     
  6087                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  6088  006A50  0E00               	movlw	0
  6089  006A52  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  6090  006A54                     
  6091                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  6092  006A54  A2AB               	btfss	171,1,c	;volatile
  6093  006A56  EF2F  F035         	goto	u1351
  6094  006A5A  EF31  F035         	goto	u1350
  6095  006A5E                     u1351:
  6096  006A5E  EF33  F035         	goto	l2339
  6097  006A62                     u1350:
  6098  006A62                     
  6099                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  6100  006A62  98AB               	bcf	171,4,c	;volatile
  6101                           
  6102                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  6103  006A64  88AB               	bsf	171,4,c	;volatile
  6104  006A66                     l2339:
  6105                           
  6106                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  6107  006A66  50AE               	movf	174,w,c	;volatile
  6108  006A68  0012               	return		;funcret
  6109  006A6A                     __end_of_EUSART1_Read:
  6110                           	callstack 0
  6111                           
  6112                           	psect	rparam
  6113  0000                     
  6114                           	psect	idloc
  6115                           
  6116                           ;Config register IDLOC0 @ 0x200000
  6117                           ;	unspecified, using default values
  6118  200000                     	org	2097152
  6119  200000  FF                 	db	255
  6120                           
  6121                           ;Config register IDLOC1 @ 0x200001
  6122                           ;	unspecified, using default values
  6123  200001                     	org	2097153
  6124  200001  FF                 	db	255
  6125                           
  6126                           ;Config register IDLOC2 @ 0x200002
  6127                           ;	unspecified, using default values
  6128  200002                     	org	2097154
  6129  200002  FF                 	db	255
  6130                           
  6131                           ;Config register IDLOC3 @ 0x200003
  6132                           ;	unspecified, using default values
  6133  200003                     	org	2097155
  6134  200003  FF                 	db	255
  6135                           
  6136                           ;Config register IDLOC4 @ 0x200004
  6137                           ;	unspecified, using default values
  6138  200004                     	org	2097156
  6139  200004  FF                 	db	255
  6140                           
  6141                           ;Config register IDLOC5 @ 0x200005
  6142                           ;	unspecified, using default values
  6143  200005                     	org	2097157
  6144  200005  FF                 	db	255
  6145                           
  6146                           ;Config register IDLOC6 @ 0x200006
  6147                           ;	unspecified, using default values
  6148  200006                     	org	2097158
  6149  200006  FF                 	db	255
  6150                           
  6151                           ;Config register IDLOC7 @ 0x200007
  6152                           ;	unspecified, using default values
  6153  200007                     	org	2097159
  6154  200007  FF                 	db	255
  6155                           
  6156                           	psect	config
  6157                           
  6158                           ;Config register CONFIG1L @ 0x300000
  6159                           ;	PLL Selection
  6160                           ;	PLLSEL = PLL3X, 3x clock multiplier
  6161                           ;	PLL Enable Configuration bit
  6162                           ;	CFGPLLEN = ON, PLL Enabled
  6163                           ;	CPU System Clock Postscaler
  6164                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  6165                           ;	Low Speed USB mode with 48 MHz system clock
  6166                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  6167  300000                     	org	3145728
  6168  300000  23                 	db	35
  6169                           
  6170                           ;Config register CONFIG1H @ 0x300001
  6171                           ;	Oscillator Selection
  6172                           ;	FOSC = INTOSCIO, Internal oscillator
  6173                           ;	Primary Oscillator Shutdown
  6174                           ;	PCLKEN = ON, Primary oscillator enabled
  6175                           ;	Fail-Safe Clock Monitor
  6176                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6177                           ;	Internal/External Oscillator Switchover
  6178                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6179  300001                     	org	3145729
  6180  300001  28                 	db	40
  6181                           
  6182                           ;Config register CONFIG2L @ 0x300002
  6183                           ;	Power-up Timer Enable
  6184                           ;	nPWRTEN = OFF, Power up timer disabled
  6185                           ;	Brown-out Reset Enable
  6186                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  6187                           ;	Brown-out Reset Voltage
  6188                           ;	BORV = 190, BOR set to 1.9V nominal
  6189                           ;	Low-Power Brown-out Reset
  6190                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  6191  300002                     	org	3145730
  6192  300002  5F                 	db	95
  6193                           
  6194                           ;Config register CONFIG2H @ 0x300003
  6195                           ;	Watchdog Timer Enable bits
  6196                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  6197                           ;	Watchdog Timer Postscaler
  6198                           ;	WDTPS = 32768, 1:32768
  6199  300003                     	org	3145731
  6200  300003  3C                 	db	60
  6201                           
  6202                           ; Padding undefined space
  6203  300004                     	org	3145732
  6204  300004  FF                 	db	255
  6205                           
  6206                           ;Config register CONFIG3H @ 0x300005
  6207                           ;	CCP2 MUX bit
  6208                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  6209                           ;	PORTB A/D Enable bit
  6210                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6211                           ;	Timer3 Clock Input MUX bit
  6212                           ;	T3CMX = RC0, T3CKI function is on RC0
  6213                           ;	SDO Output MUX bit
  6214                           ;	SDOMX = RB3, SDO function is on RB3
  6215                           ;	Master Clear Reset Pin Enable
  6216                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  6217  300005                     	org	3145733
  6218  300005  D3                 	db	211
  6219                           
  6220                           ;Config register CONFIG4L @ 0x300006
  6221                           ;	Stack Full/Underflow Reset
  6222                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6223                           ;	Single-Supply ICSP Enable bit
  6224                           ;	LVP = OFF, Single-Supply ICSP disabled
  6225                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  6226                           ;	ICPRT = OFF, ICPORT disabled
  6227                           ;	Extended Instruction Set Enable bit
  6228                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  6229                           ;	Background Debugger Enable bit
  6230                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6231  300006                     	org	3145734
  6232  300006  81                 	db	129
  6233                           
  6234                           ; Padding undefined space
  6235  300007                     	org	3145735
  6236  300007  FF                 	db	255
  6237                           
  6238                           ;Config register CONFIG5L @ 0x300008
  6239                           ;	Block 0 Code Protect
  6240                           ;	CP0 = OFF, Block 0 is not code-protected
  6241                           ;	Block 1 Code Protect
  6242                           ;	CP1 = OFF, Block 1 is not code-protected
  6243                           ;	Block 2 Code Protect
  6244                           ;	CP2 = OFF, Block 2 is not code-protected
  6245                           ;	Block 3 Code Protect
  6246                           ;	CP3 = OFF, Block 3 is not code-protected
  6247  300008                     	org	3145736
  6248  300008  0F                 	db	15
  6249                           
  6250                           ;Config register CONFIG5H @ 0x300009
  6251                           ;	Boot Block Code Protect
  6252                           ;	CPB = OFF, Boot block is not code-protected
  6253                           ;	Data EEPROM Code Protect
  6254                           ;	CPD = OFF, Data EEPROM is not code-protected
  6255  300009                     	org	3145737
  6256  300009  C0                 	db	192
  6257                           
  6258                           ;Config register CONFIG6L @ 0x30000A
  6259                           ;	Block 0 Write Protect
  6260                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  6261                           ;	Block 1 Write Protect
  6262                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  6263                           ;	Block 2 Write Protect
  6264                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  6265                           ;	Block 3 Write Protect
  6266                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  6267  30000A                     	org	3145738
  6268  30000A  0F                 	db	15
  6269                           
  6270                           ;Config register CONFIG6H @ 0x30000B
  6271                           ;	Configuration Registers Write Protect
  6272                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6273                           ;	Boot Block Write Protect
  6274                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  6275                           ;	Data EEPROM Write Protect
  6276                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6277  30000B                     	org	3145739
  6278  30000B  E0                 	db	224
  6279                           
  6280                           ;Config register CONFIG7L @ 0x30000C
  6281                           ;	Block 0 Table Read Protect
  6282                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  6283                           ;	Block 1 Table Read Protect
  6284                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  6285                           ;	Block 2 Table Read Protect
  6286                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  6287                           ;	Block 3 Table Read Protect
  6288                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  6289  30000C                     	org	3145740
  6290  30000C  0F                 	db	15
  6291                           
  6292                           ;Config register CONFIG7H @ 0x30000D
  6293                           ;	Boot Block Table Read Protect
  6294                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  6295  30000D                     	org	3145741
  6296  30000D  40                 	db	64
  6297                           tosu	equ	0xFFF
  6298                           tosh	equ	0xFFE
  6299                           tosl	equ	0xFFD
  6300                           stkptr	equ	0xFFC
  6301                           pclatu	equ	0xFFB
  6302                           pclath	equ	0xFFA
  6303                           pcl	equ	0xFF9
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           indf0	equ	0xFEF
  6311                           postinc0	equ	0xFEE
  6312                           postdec0	equ	0xFED
  6313                           preinc0	equ	0xFEC
  6314                           plusw0	equ	0xFEB
  6315                           fsr0h	equ	0xFEA
  6316                           fsr0l	equ	0xFE9
  6317                           wreg	equ	0xFE8
  6318                           indf1	equ	0xFE7
  6319                           postinc1	equ	0xFE6
  6320                           postdec1	equ	0xFE5
  6321                           preinc1	equ	0xFE4
  6322                           plusw1	equ	0xFE3
  6323                           fsr1h	equ	0xFE2
  6324                           fsr1l	equ	0xFE1
  6325                           bsr	equ	0xFE0
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           preinc2	equ	0xFDC
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8

Data Sizes:
    Strings     154
    Constant    768
    Data        3
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    106     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@READ(BANK0[64]), main@read(BANK0[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> main@READ(BANK0[64]), main@read(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1461_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@READ(BANK0[64]), main@read(BANK0[32]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@READ(BANK0[64]), main@read(BANK0[32]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 2047
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(COMRAM[6]), oled_putUint8@numData(COMRAM[6]), STR_11(CODE[8]), 
		 -> STR_10(CODE[16]), main@READ(BANK0[64]), main@read(BANK0[32]), STR_7(CODE[10]), 
		 -> STR_6(CODE[16]), STR_1(CODE[10]), RAM(DATA[2047]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendCommand@texto	PTR unsigned char  size(2) Largest target is 26
		 -> STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__get_Data	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _test_leds->_oled_putString
    _oled_putString->_oled_putChar
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _RN_Leds->_sendCommand
    _sendCommand->_EUSART1_Write

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   20751
                                              8 BANK0     98    98      0
                       _EUSART1_Read
                            _RN_Leds
                  _SYSTEM_Initialize
                            _delayms
                           _get_Data
                          _init_port
                         _oled_clear
                          _oled_init
                     _oled_putString
                            _sprintf
                          _test_leds
 ---------------------------------------------------------------------------------
 (1) _test_leds                                            0     0      0    4064
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _oled_putString                                       5     1      4    3486
                                             12 COMRAM     5     1      4
                           _get_Data (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _delayms                                              5     3      2     578
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10041
                                             88 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                       _EUSART1_Read (ARG)
                           _get_Data (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9232
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    8875
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5270
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1046
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 COMRAM     1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0     683
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0     683
                                             12 COMRAM     2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_putChar                                        10     8      2     593
                                              2 COMRAM    10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (4) _oled_writeData                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Set_Page_Address                                     1     1      0      67
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _Set_Column_Address                                   1     1      0      66
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _oled_writeCommand                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_Data                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN_Leds                                              2     2      0     393
                                              3 COMRAM     2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          2     0      2     371
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _RN_Leds
     _sendCommand
       _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _delayms
   _get_Data
   _init_port
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _get_Data (ARG)
     _oled_putChar (ARG)
   _sprintf
     _EUSART1_Read (ARG)
     _get_Data (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc
   _test_leds
     _delayms
     _oled_putString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC       6        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 27 21:54:00 2021

                                            l43 6C3A                                              l60 6A42  
                                            l71 6B22                                              l64 6A68  
                                            l74 69C2                                              l67 6AF0  
                                            l92 6936                                              l77 69D4  
                                            l95 6922                                              l89 692C  
                        __end_of_oled_writeData 69C0                                             l204 6B58  
                                           l212 71E2                                             l134 6C78  
                                           l302 6A04                                             l310 6ABE  
                                           l207 6DA4                                             l313 6E7E  
                                           l162 6A40                                             l330 6996  
                                           l307 6A90                                             l156 6968  
                                           l324 69AA                                             l333 6942  
                                           l318 6AEE                                             l159 6A32  
                                           l327 69BE                                             l272 69EA  
                                           l336 694E                                             l192 6BE6  
                                           l339 695A                                             l195 6BFC  
                                           l292 6EFA                                             l276 6A20  
                                           l189 6976                                             l269 6986  
                                           l456 75A6                                             l299 6F7A  
                                           l469 741E                         ?_oled_initialDispayLine 0001  
                                           u720 7054                                             u721 7050  
                                           u801 748E                                             u730 7066  
                                           u810 74B2                                             u731 7062  
                                           u811 74AE                                             u740 708E  
                                           u820 74DC                                             u900 73DE  
                                           u741 708A                                             u821 74D8  
                                           u901 73DA                                             u750 70C4  
                                           u830 751C                                             u910 6F8C  
                                           u751 70C0                                             u831 7518  
                                           u911 6F88                                             u840 7566  
                                           u760 6CFC                                             u920 6FAE  
                                           u841 7562                                             u761 6CF8  
                                           u921 6FAA                                             u850 72CE  
                                           u770 6B82                                             u930 7004  
                                           u851 72CA                                             u771 6B7E  
                                           u931 7000                                             u780 7432  
                                           u860 7300                                             u940 7014  
                                           u781 742E                                             u861 72FC  
                                           u941 7010                                             u790 7464  
                                           u870 733E                                             u950 6C94  
                                           u791 7460                                             u871 733A  
                                           u951 6C90                                             u960 6EFA  
                                           u880 7368                                             u961 6EF6  
                                           u881 7364                                             u970 71F8  
                                           u890 7396                                             u971 71F4  
                                           u891 7392                                             u980 721E  
                                           u981 721A                                             u990 723E  
                                           u991 723A                                             _abs 6C7A  
                                           _pad 6F7C                                             _log 00D2  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1020 6D4E                                            l1113 6CB0  
                                          l2001 6F8C                                            l1050 7004  
                                          l2011 6FE2                                            l2003 6FA0  
                                          ?_abs 0013                                            l1116 6CB8  
                                          l1052 7040                                            l1108 6DFE  
                                          l2021 6C7A                                            l2013 6FE6  
                                          l2005 6FAE                                            l2101 7AFC  
                                          l1109 6E06                                            l1063 724A  
                                          l2023 6C94                                            l2015 7014  
                                          l1047 6FC2                                            l2007 6FBA  
                                          l2111 7BCC                                            l2103 7B60  
                                          l1128 710A                                            l1136 6CFC  
                                          l2025 6E82                                            l2041 71E4  
                                          l1145 6B8E                                            l2017 7028  
                                          l2009 6FCE                                            l2121 7C16  
                                          l2105 7B7A                                            l2113 7BDC  
                                          l2201 7902                                            l1066 728C  
                                          l1074 7A22                                            l2131 6924  
                                          l2035 6E98                                            l2027 6E88  
                                          l1139 6914                                            l2051 7230  
                                          l2043 71F8                                            l2123 7C22  
                                          l2115 7BEE                                            l2107 7B98  
                                          l2211 793E                                            l2203 7910  
                                          l1068 72BA                                            l1076 7A2A  
                                          l2133 692E                                            l2037 6EE8  
                                          l2029 6E94                                            l2141 6A6C  
                                          l2301 6E4E                                            l2061 726E  
                                          l2045 7204                                            l2125 7C2A  
                                          l2117 7BFE                                            l2109 7BB2  
                                          l2205 7924                                            l1094 7C62  
                                          l2135 691A                                            l2231 6C36  
                                          l2223 6BFE                                            l2039 6EEA  
                                          l2151 6A80                                            l2311 6E6C  
                                          l2303 6E54                                            l2063 729C  
                                          l2055 7242                                            l2047 7210  
                                          l2119 7C04                                            l2127 7C3A  
                                          l2071 79A2                                            l2215 794A  
                                          l2137 69C2                                            l2401 718A  
                                          l2225 6C12                                            l2241 6C5E  
                                          l2233 6C3C                                            l2153 6946  
                                          l2161 698A                                            l2313 6E72  
                                          l2305 6E5A                                            l2321 6AE2  
                                          l2065 72AE                                            l2057 7256  
                                          l2049 721E                                            l2081 7A16  
                                          l2073 79CA                                            l2217 796E  
                                          l2209 7930                                            l2331 6A42  
                                          l2139 69D0                                            l2411 71D6  
                                          l2403 719A                                            l2227 6C1E  
                                          l2243 6C76                                            l2235 6C54  
                                          l2147 6A70                                            l2163 6990  
                                          l2315 6E78                                            l2307 6E60  
                                          l2059 726A                                            l2091 7A60  
                                          l2083 7A32                                            l2075 79EA  
                                          l1099 7980                                            l2323 6DA6  
                                          l2251 6BE2                                            l2333 6A50  
                                          l2253 6B24                                            l2405 71A6  
                                          l2229 6C2A                                            l2245 6A22  
                                          l2237 6C56                                            l2149 6A7E  
                                          l2157 6952                                            l2309 6E66  
                                          l2317 6AC2                                            l2421 6ABA  
                                          l2413 6A92                                            l2093 7A68  
                                          l2085 7A44                                            l2077 79FA  
                                          l2069 7982                                            l2181 77A4  
                                          l2173 775C                                            l2325 6DAE  
                                          l2261 6EFC                                            l2335 6A54  
                                          l2255 6B28                                            l2407 71B6  
                                          l2239 6C5C                                            l2351 6B14  
                                          l2343 6AF0                                            l2167 693A  
                                          l2319 6AD2                                            l2415 6AA4  
                                          l2095 7A6E                                            l2087 7A52  
                                          l2079 79FC                                            l2191 783A  
                                          l2183 77C8                                            l2175 7780  
                                          l2327 6DBC                                            l2431 6D3C  
                                          l2423 6CFE                                            l2247 6BC6  
                                          l2271 6F70                                            l2263 6F00  
                                          l2337 6A62                                            l2257 6B38  
                                          l2409 71C6                                            l2345 6AFE  
                                          l2361 6972                                            l2169 693C  
                                          l2281 6A18                                            l2417 6AA8  
                                          l2097 7AF0                                            l2089 7A58  
                                          l2193 785E                                            l2185 77FA  
                                          l2177 778E                                            l2329 6DE2  
                                          l2425 6D10                                            l2249 6BD2  
                                          l2273 6F74                                            l2441 75B0  
                                          l2339 6A66                                            l2259 6B3C  
                                          l2355 695C                                            l2347 6B02  
                                          l2291 6E22                                            l2283 6E08  
                                          l2419 6AAE                                            l2099 7AF6  
                                          l2195 78A6                                            l2179 77A0  
                                          l2427 6D18                                            l2267 6F14  
                                          l2371 6D74                                            l2363 6D50  
                                          l2451 75CC                                            l2443 75BC  
                                          l2357 6964                                            l2349 6B10  
                                          l1901 69D8                                            l2277 69EC  
                                          l2293 6E30                                            l2285 6E0E  
                                          l2189 7816                                            l2429 6D20  
                                          l2269 6F44                                            l2381 6D88  
                                          l2373 6D76                                            l2365 6D64  
                                          l2461 763C                                            l2453 75D2  
                                          l2445 75C0                                            l2437 75A8  
                                          l2391 713E                                            l2359 696A  
                                          l1911 69B8                                            l2295 6E32  
                                          l2287 6E10                                            l2279 6A06  
                                          l2199 78DE                                            l2383 6D94  
                                          l2375 6D78                                            l2367 6D66  
                                          l2471 7690                                            l2463 7650  
                                          l2455 75E6                                            l2447 75C4  
                                          l2439 75AC                                            l2393 714E  
                                          l1913 69BA                                            l1905 69AE  
                                          l2297 6E42                                            l2289 6E20  
                                          l1921 7424                                            l2385 6D96  
                                          l2377 6D84                                            l2369 6D68  
                                          l2481 76E4                                            l2473 7694  
                                          l2465 7668                                            l2457 75FA  
                                          l2449 75C8                                            l2395 715A  
                                          l1915 69BC                                            l1907 69B2  
                                          l2299 6E48                                            l1851 7054  
                                          l1931 7484                                            l1923 7432  
                                          l2387 6D98                                            l2379 6D86  
                                          l2491 7748                                            l2483 7704  
                                          l2475 769A                                            l2467 766A  
                                          l2459 761C                                            l2397 716A  
                                          l2389 710E                                            l1909 69B6  
                                          l1853 7066                                            l1941 74CE  
                                          l1933 7488                                            l1925 7452  
                                          l2485 7718                                            l2477 76AE  
                                          l2469 7684                                            l2399 717A  
                                          l1871 69A6                                            l1863 699A  
                                          l1855 7070                                            l1951 753E  
                                          l1943 74DC                                            l1935 7494  
                                          l1927 7456                                            l1919 7420  
                                          l2487 772C                                            l2479 76C2  
                                          l1873 69A8                                            l1865 699E  
                                          l1857 708E                                            l1849 7042  
                                          l1953 7550                                            l1945 74EE  
                                          l1937 74B2                                            l1929 7464  
                                          l1881 6CD8                                            l2489 772E  
                                          l1867 69A2                                            l1859 70C4  
                                          l1947 751C                                            l1939 74BA  
                                          l1955 7556                                            l1971 72F2  
                                          l1963 72BC                                            l1883 6CDC  
                                          l1891 6B82                                            l1869 69A4  
                                          l1957 7566                                            l1949 753C  
                                          l1981 735A                                            l1973 7300  
                                          l1965 72C0                                            l1877 6CBA  
                                          l1885 6B5A                                            ?_pad 0011  
                                          l1895 697A                                            l1959 7586  
                                          l1983 7368                                            l1991 73CE  
                                          l1975 7320                                            l1967 72CE  
                                          l1879 6CC6                                            l1887 6B66  
                                          l1897 6980                                            l1993 73DE  
                                          l1985 7396                                            l1977 733E  
                                          l1969 72EE                                            l1889 6B6A  
                                          l1995 73FE                                            l1987 73B6  
                                          l1979 7346                                            l1989 73C8  
                                          l1999 6F7C                                            STR_1 7FDD  
                                          STR_2 7F99                                            STR_3 7FB3  
                                          STR_4 7F65                                            STR_5 7F7F  
                                          STR_6 7FCD                                            STR_7 7FE7  
                                          STR_8 7FFC                                            STR_9 7FF9  
                                          u1000 728C                                            u1001 7288  
                                          u1010 729C                                            u1011 7298  
                                          u1100 7B98                                            u1020 79B2  
                                          u1101 7B94                                            u1021 79AC  
                                          u1110 7BB2                                            u1030 79B4  
                                          u1111 7BAE                                            u1120 7BCC  
                                          u1040 79CA                                            u1200 77C8  
                                          u1121 7BC8                                            u1041 79C6  
                                          u1201 77C4                                            u1130 7BDC  
                                          u1050 79FA                                            u1210 783A  
                                          u1131 7BD8                                            u1051 79F6  
                                          u1211 7836                                            u1140 7BEE  
                                          u1060 7A16                                            u1220 785E  
                                          u1300 6F6C                                            u1141 7BEA  
                                          u1061 7A12                                            u1221 785A  
                                          u1310 6A18                                            u1150 7BFE  
                                          u1070 7A44                                            u1230 7902  
                                          u1311 6A14                                            u1151 7BFA  
                                          u1071 7A40                                            u1231 78FE  
                                          u1240 6A40                                            u1320 6AD2  
                                          u1160 7C16                                            u1080 7A52  
                                          u1241 6A3C                                            u1321 6ACE  
                                          u1161 7C12                                            u1081 7A4E  
                                          u1170 69D0                                            u1090 7B7A  
                                          u1330 6DFE                                            u1250 6BFC  
                                          u1171 69CC                                            u1091 7B76  
                                          u1331 6DFA                                            u1251 6BF8  
                                          u1307 6F62                                            u1340 6A50  
                                          u1260 6B58                                            u1180 6A90  
                                          u1341 6A4C                                            u1261 6B54  
                                          u1181 6A8C                                            _LATA 000F89  
                                          u1350 6A62                                            u1190 7780  
                                          u1270 6F10                                            _LATB 000F8A  
                                          u1351 6A5E                                            u1191 777C  
                                          u1271 6F0C                                            _LATC 000F8B  
                                          u1360 6AFE                                            u1280 6F34  
                                          _LATD 000F8C                                            u1361 6AFA  
                                          u1417 7676                                            _LATE 000F8D  
                                          u1370 6B10                                            u1290 6F44  
                                          u1507 7160                                            u1371 6B0C  
                                          u1291 6F40                                            u1427 773A  
                                          u1380 714E                                            u1517 7170  
                                          u1381 714A                                            u1437 6BD8  
                                          u1527 7180                                            u1447 6E16  
                                          u1287 6F2A                                            u1537 71AC  
                                          u1457 6E28                                            u1547 71BC  
                                          u1467 6E38                                            u1557 71CC  
                                          u1477 7114                                            u1487 7124  
                                          u1497 7134                                            _WPUB 000F85  
                                 _EUSART1_Write 69C0                                            abs@a 0013  
                                          _dbuf 00DA                                            _ctoa 71E4  
                                          _main 75A8                                            _dtoa 7982  
                                 ?_EUSART1_Read 0001                                            _prec 00CE  
                                          _nout 00CA                                            pad@i 0018  
                                          pad@p 0015                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001A                                            fsr2l 000FD9  
                               __end_of_RN_Leds 71E4                                            prodl 000FF3  
                                          start 0000                                 ?_oled_putString 000D  
                              ?_oled_setDisplay 0001                                    ___param_bank 000000  
                                         ??_abs 0015                                           ??_pad 0017  
                __size_of_OSCILLATOR_Initialize 0020                  __end_of_oled_initialDispayLine 6944  
                               ?_oled_writeData 0001                   __end_of_OSCILLATOR_Initialize 6A42  
                               __end_of___aodiv 75A8                                           ?_ctoa 000A  
                                         ?_main 0001                                           ?_dtoa 001C  
                               __end_of___aomod 7420                                           STR_10 7FCD  
                                         STR_11 7FF1                                           STR_12 7FFC  
                                         STR_13 7FF9                                    vfpfcnvrt@fmt 0042  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                 __end_of_delayms 6BFE  
                             oled_putChar@index 000C                                           _flags 00D0  
                                         _fputc 7042                                           _fputs 6CBA  
                                         pad@fp 0011                                           _width 00CC  
                                         ctoa@c 000C                                           _putch 6914  
                                         ctoa@l 000E                                           ctoa@w 0010  
                                         dtoa@d 001E                                           dtoa@i 003E  
                                         dtoa@n 0036                                           dtoa@p 0030  
                                         dtoa@s 0034                                           dtoa@w 0032  
                                ?_EUSART1_Write 0001                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                      oled_setDisplay@displayType 0002  
                                         status 000FD8                                 __end_of_sprintf 6D50  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 6B90  
                                  __end_of_ctoa 72BC                      __end_of_EUSART1_Initialize 6C3C  
                                  __end_of_main 775C                                    __end_of_dtoa 7C64  
                                  ?_sendCommand 0002                                          ??_ctoa 000D  
                                        ??_main 0068                                          ??_dtoa 0026  
                                 __activetblptr 000002                                          ?_fputc 0001  
                                        _ACTCON 000FB5                                          ?_fputs 000A  
                                delayms@counter 0004                                          _ANSELA 000F5B  
                                        ?_putch 0001                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _ANSELD 000F5E  
                                        _ANSELE 000F5F                                       ??_RN_Leds 0004  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                   oled_putChar@k 000B  
                              __end_of_get_Data 6B24                                    vfprintf@cfmt 0057  
                    __end_of_Set_Column_Address 69EC                       __size_of_Set_Page_Address 0010  
                                     ??___aodiv 0011                                       ??___aomod 0011  
                      ?_EUSART1_SetErrorHandler 0001                                          clear_0 6BB4  
                                     ??_delayms 0003                                          isa$std 000001  
                                        pad@buf 0013                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          ctoa@fp 000A  
                                        dtoa@fp 001C                                          _strlen 6B5A  
                                        fputc@c 0001                                          fputs@c 000E  
                                        fputs@i 000F                                          fputs@s 000A  
                                  __mediumconst 7C64                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                        putch@c 0001                                __end_of_vfprintf 6E08  
                               ??_EUSART1_Write 0001                                       ??_sprintf 005F  
                                 ?_oled_devInit 0001                               _SYSTEM_Initialize 695C  
                                    __accesstop 0060                         __end_of__initialization 6BBC  
                            ?_SYSTEM_Initialize 0001                              oled_writeData@data 0001  
                                 ___rparam_used 000001                                   ?_oled_setFont 0001  
                                 ?_oled_putChar 0003                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 6917                             ??_SYSTEM_Initialize 0003  
                                 __end_of_fputc 710C                                   __end_of_fputs 6CFE  
       __end_of_oled_setContrastControlRegister 6998        __size_of_oled_setContrastControlRegister 0010  
             ??_oled_setContrastControlRegister 0002                ?_oled_setContrastControlRegister 0001  
               _oled_setContrastControlRegister 6988                                   __end_of_putch 6916  
                          __end_of_EUSART1_Read 6A6A                               __end_of_OledFont0 7F65  
                                  RN_Leds@state 0005                                  ??_oled_devInit 0003  
                                       ??_fputc 0005                       __end_of_SYSTEM_Initialize 696A  
                                       ??_fputs 000E                                         ??_putch 0001  
                                    __pbssBANK0 00CA                                ??_oled_putString 0011  
                   oled_regulorResistorSelect@r 0002                                  ??_oled_setFont 0003  
                           oled_putString@index 0011                                  ??_oled_putChar 0005  
                            __size_of_init_port 000E                          __size_of_oled_clearRow 0028  
                        oled_putChar@start_page 0004                 __end_of_EUSART1_SetErrorHandler 6924  
                            __size_of_oled_init 002E                                ??_oled_writeData 0001  
                     Set_Column_Address@address 0002                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler 692E         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 6924                            __size_of_sendCommand 0036  
                            __size_of_test_leds 0056                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0226                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                       ?_get_Data 0001  
                                       _RN_Leds 710C                                         __Hparam 0000  
                                       __Lparam 0000                                _Set_Page_Address 6978  
                                       ___aodiv 7420                                         ___aomod 72BC  
                                     ?_vfprintf 0051              oled_setContrastControlRegister@mod 0002  
                                       __pcinit 6B90                                         __ramtop 0800  
                                       _delayms 6BC6                                         __ptext0 75A8  
                                       __ptext1 6D50                                         __ptext2 6EFC  
                                       __ptext3 6BC6                                         __ptext4 6CFE  
                                       __ptext5 6DA6                                         __ptext6 775C  
                                       __ptext7 7982                                         __ptext8 6F7C  
                                       __ptext9 6B5A                        __size_of_oled_setDisplay 0030  
                              oled_setFont@font 0001                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 6A22                                   _oled_clearRow 6A6A  
                                  __size_of_abs 0040                                    __size_of_pad 00C6  
                                    _oled_clear 69EC                               __end_of_init_port 6978  
                            _EUSART1_Initialize 6BFE                        ??_PIN_MANAGER_Initialize 0001  
                                    ??_get_Data 0003                               __end_of_oled_init 6AC0  
                    __size_of_SYSTEM_Initialize 000E                                         _sprintf 6CFE  
                          end_of_initialization 6BBC                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0003                                   __Lmediumconst 7C64  
                   _EUSART1_OverrunErrorHandler 00D6                                         fputs@fp 000C  
                             _oled_powerControl 6944                               __end_of_test_leds 6DA6  
                            ?_oled_powerControl 0001                               __end_of_vfpfcnvrt 7982  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                            __end_of_oled_devInit 6E80  
                                    ??_vfprintf 0057                            ??_EUSART1_Initialize 0003  
                                       strlen@a 0003                                         strlen@s 0001  
                           ??_oled_powerControl 0002                                  ?_oled_clearRow 0001  
                          __end_of_oled_setFont 6A22                              _Set_Column_Address 69D6  
                          __end_of_oled_putChar 6EFC                                       _TRISAbits 000F92  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                                     _TRISEbits 000F96                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                             ?_Set_Column_Address 0001  
                      oled_putString@start_page 0010                       __end_of_oled_powerControl 6950  
                  ??_oled_regulorResistorSelect 0002                                    _EUSART1_Read 6A42  
                      ??_oled_initialDispayLine 0002                                sendCommand@texto 0002  
                          ??_Set_Column_Address 0002                                     vfpfcnvrt@ap 0044  
                                   vfpfcnvrt@fp 0040                                     vfpfcnvrt@ll 0048  
                        ?_OSCILLATOR_Initialize 0001                        oled_writeCommand@command 0001  
                                __end_of_strlen 6B90                                     ?_oled_clear 0001  
                           start_initialization 6B90             __size_of_oled_regulorResistorSelect 000C  
               __size_of_PIN_MANAGER_Initialize 003E                                     __end_of_abs 6CBA  
                                   __end_of_pad 7042                               ??_oled_setDisplay 0002  
                                     _OledFont0 7C65                           __end_of_EUSART1_Write 69D6  
                                 delayms@length 0001                                     vfprintf@fmt 0053  
                                   __pdataBANK0 00FA                                 ??_oled_clearRow 000D  
                                      ??_strlen 0003                       oled_putString@station_dot 000F  
                                   __pbssCOMRAM 005F                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 0001                        __end_of_Set_Page_Address 6988  
                                      ?_RN_Leds 0001                               __size_of_get_Data 0034  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                    __size_of_oled_powerControl 000C                            oled_putString@string 000D  
                             _oled_writeCommand 6998                           __size_of_oled_devInit 0078  
                       oled_putChar@station_dot 0003                          _PIN_MANAGER_Initialize 6C3C  
                                     _dtoa$1539 002E                             __size_of_oled_clear 001A  
               __size_of_oled_initialDispayLine 000C                              ?_oled_writeCommand 0001  
                                 __pmediumconst 7C64                                        ?___aodiv 0001  
                                      ?___aomod 0001                                ___aodiv@quotient 0013  
                         __size_of_oled_setFont 001C                                   ??_sendCommand 0004  
                         __size_of_oled_putChar 007C                                        ?_delayms 0001  
                           ??_oled_writeCommand 0001                               __size_of_vfprintf 0062  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 00D4                         _EUSART1_SetErrorHandler 691A  
                                      ?_sprintf 0059                                  __size_of_fputc 00CA  
                                     _init_port 696A                                  __size_of_fputs 0044  
                                __size_of_putch 0002                                    _oled_devInit 6E08  
            __end_of_oled_regulorResistorSelect 695C                      _oled_regulorResistorSelect 6950  
                                     _oled_init 6A92                                        _LATAbits 000F89  
                     __end_of_oled_writeCommand 69AC         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _LATEbits 000F8D                                    _oled_setFont 6A06  
                                  _oled_putChar 6E80                                        _PIR1bits 000F9E  
                       __size_of_oled_putString 0080                                       _test_leds 6D50  
                                     _vfpfcnvrt 775C                         Set_Page_Address@address 0002  
                       __size_of_oled_writeData 0014                             __end_of_sendCommand 6B5A  
                        _oled_initialDispayLine 6938                                      vfpfcnvrt@c 0050  
                                    ?_init_port 0001                                     _INTCON2bits 000FF1  
                                    ?_oled_init 0001                                __size_of_RN_Leds 00D8  
                                      __Hrparam 0000                                      vfprintf@ap 0055  
                                      __Lrparam 0000                                      vfprintf@fp 0051  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                                      ?_test_leds 0001  
                    oled_initialDispayLine@line 0002                                    _selectedFont 00FA  
                   __size_of_EUSART1_Initialize 003E                                 _oled_setDisplay 6AC0  
                                    ?_vfpfcnvrt 0040                                 ___aodiv@divisor 0009  
                               ___aodiv@counter 0011                                __size_of_delayms 0038  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@fmt 005B                                    ??_oled_clear 000F  
                                      _get_Data 6AF0                                        __ptext10 6CBA  
                                      __ptext11 6C7A                                        __ptext20 6E08  
                                      __ptext12 72BC                                        __ptext21 6988  
                                      __ptext13 7420                                        __ptext30 69D6  
                                      __ptext22 6950                                        __ptext14 71E4  
                                      __ptext31 6998                                        __ptext23 6944  
                                      __ptext15 7042                                        __ptext40 691A  
                                      __ptext32 696A                                        __ptext24 6938  
                                      __ptext16 6914                                        __ptext41 710C  
                                      __ptext33 6AF0                                        __ptext25 69EC  
                                      __ptext17 6A92                                        __ptext42 6B24  
                                      __ptext34 695C                                        __ptext26 6A6A  
                                      __ptext18 6A06                                        __ptext43 69C0  
                                      __ptext35 6C3C                                        __ptext27 6E80  
                                      __ptext19 6AC0                                        __ptext44 6A42  
                                      __ptext36 6A22                                        __ptext28 69AC  
                                      __ptext37 6BFE                                        __ptext29 6978  
                                      __ptext38 692E                                        __ptext39 6924  
                              __size_of_sprintf 0052                                   __size_of_ctoa 00D8  
                                 __size_of_main 01B4                                   __size_of_dtoa 02E2  
                    __size_of_oled_writeCommand 0014                                  _Contrast_level 00FC  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                              __end_of_oled_clear 6A06  
                                      isa$xinst 000000                                        main@READ 006A  
                                      _vfprintf 6DA6                     __size_of_Set_Column_Address 0016  
                                      main@read 00AA                                     _sendCommand 6B24  
                            oled_clearRow@index 000E                     _EUSART1_FramingErrorHandler 00D8  
                              ___aomod@dividend 0001                                      _INTCONbits 000FF2  
                             ?_Set_Page_Address 0001                                     ??_init_port 0001  
                                     sprintf@ap 0060                                     ??_oled_init 000F  
                            ??_Set_Page_Address 0002                            oled_powerControl@vol 0002  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 6938  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 692E  
                                    _RCSTA1bits 000FAB                         __end_of_oled_setDisplay 6AF0  
                                _oled_putString 6EFC                               oled_clearRow@page 000D  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                                     ??_test_leds 0012  
                               ___aomod@divisor 0009                                     ??_vfpfcnvrt 0046  
                               ___aomod@counter 0011                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 005F                           __end_of_oled_clearRow 6A92  
                                      sprintf@f 0062                                        sprintf@s 0059  
                                _oled_writeData 69AC                                    ___aodiv@sign 0012  
                __end_of_PIN_MANAGER_Initialize 6C7A                     ?_oled_regulorResistorSelect 0001  
                                  ___aomod@sign 0012                          __end_of_oled_putString 6F7C  
