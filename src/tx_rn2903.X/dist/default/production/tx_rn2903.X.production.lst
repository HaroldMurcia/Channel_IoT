

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 06 22:34:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 05/05/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18LF45K50 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    95  0000                     
    96                           	psect	idataBANK0
    97  00650D                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _selectedFont
   101  00650D  EB                 	db	low _OledFont0
   102  00650E  79                 	db	high _OledFont0
   103                           
   104                           ;initializer for _Contrast_level
   105  00650F  13                 	db	19
   106                           
   107                           	psect	mediumconst
   108  0079EA                     __pmediumconst:
   109                           	callstack 0
   110  0079EA  00                 	db	0
   111  0079EB                     _OledFont0:
   112                           	callstack 0
   113  0079EB  00                 	db	0
   114  0079EC  00                 	db	0
   115  0079ED  00                 	db	0
   116  0079EE  00                 	db	0
   117  0079EF  00                 	db	0
   118  0079F0  00                 	db	0
   119  0079F1  00                 	db	0
   120  0079F2  00                 	db	0
   121  0079F3  00                 	db	0
   122  0079F4  00                 	db	0
   123  0079F5  00                 	db	0
   124  0079F6  5F                 	db	95
   125  0079F7  00                 	db	0
   126  0079F8  00                 	db	0
   127  0079F9  00                 	db	0
   128  0079FA  00                 	db	0
   129  0079FB  00                 	db	0
   130  0079FC  00                 	db	0
   131  0079FD  03                 	db	3
   132  0079FE  00                 	db	0
   133  0079FF  03                 	db	3
   134  007A00  00                 	db	0
   135  007A01  00                 	db	0
   136  007A02  00                 	db	0
   137  007A03  64                 	db	100
   138  007A04  3C                 	db	60
   139  007A05  26                 	db	38
   140  007A06  64                 	db	100
   141  007A07  3C                 	db	60
   142  007A08  26                 	db	38
   143  007A09  24                 	db	36
   144  007A0A  00                 	db	0
   145  007A0B  26                 	db	38
   146  007A0C  49                 	db	73
   147  007A0D  49                 	db	73
   148  007A0E  7F                 	db	127
   149  007A0F  49                 	db	73
   150  007A10  49                 	db	73
   151  007A11  32                 	db	50
   152  007A12  00                 	db	0
   153  007A13  42                 	db	66
   154  007A14  25                 	db	37
   155  007A15  12                 	db	18
   156  007A16  08                 	db	8
   157  007A17  24                 	db	36
   158  007A18  52                 	db	82
   159  007A19  21                 	db	33
   160  007A1A  00                 	db	0
   161  007A1B  20                 	db	32
   162  007A1C  50                 	db	80
   163  007A1D  4E                 	db	78
   164  007A1E  55                 	db	85
   165  007A1F  22                 	db	34
   166  007A20  58                 	db	88
   167  007A21  28                 	db	40
   168  007A22  00                 	db	0
   169  007A23  00                 	db	0
   170  007A24  00                 	db	0
   171  007A25  00                 	db	0
   172  007A26  03                 	db	3
   173  007A27  00                 	db	0
   174  007A28  00                 	db	0
   175  007A29  00                 	db	0
   176  007A2A  00                 	db	0
   177  007A2B  00                 	db	0
   178  007A2C  00                 	db	0
   179  007A2D  1C                 	db	28
   180  007A2E  22                 	db	34
   181  007A2F  41                 	db	65
   182  007A30  00                 	db	0
   183  007A31  00                 	db	0
   184  007A32  00                 	db	0
   185  007A33  00                 	db	0
   186  007A34  00                 	db	0
   187  007A35  00                 	db	0
   188  007A36  41                 	db	65
   189  007A37  22                 	db	34
   190  007A38  1C                 	db	28
   191  007A39  00                 	db	0
   192  007A3A  00                 	db	0
   193  007A3B  00                 	db	0
   194  007A3C  15                 	db	21
   195  007A3D  15                 	db	21
   196  007A3E  0E                 	db	14
   197  007A3F  0E                 	db	14
   198  007A40  15                 	db	21
   199  007A41  15                 	db	21
   200  007A42  00                 	db	0
   201  007A43  00                 	db	0
   202  007A44  08                 	db	8
   203  007A45  08                 	db	8
   204  007A46  3E                 	db	62
   205  007A47  08                 	db	8
   206  007A48  08                 	db	8
   207  007A49  00                 	db	0
   208  007A4A  00                 	db	0
   209  007A4B  00                 	db	0
   210  007A4C  00                 	db	0
   211  007A4D  00                 	db	0
   212  007A4E  50                 	db	80
   213  007A4F  30                 	db	48
   214  007A50  00                 	db	0
   215  007A51  00                 	db	0
   216  007A52  00                 	db	0
   217  007A53  00                 	db	0
   218  007A54  08                 	db	8
   219  007A55  08                 	db	8
   220  007A56  08                 	db	8
   221  007A57  08                 	db	8
   222  007A58  08                 	db	8
   223  007A59  00                 	db	0
   224  007A5A  00                 	db	0
   225  007A5B  00                 	db	0
   226  007A5C  00                 	db	0
   227  007A5D  00                 	db	0
   228  007A5E  40                 	db	64
   229  007A5F  00                 	db	0
   230  007A60  00                 	db	0
   231  007A61  00                 	db	0
   232  007A62  00                 	db	0
   233  007A63  40                 	db	64
   234  007A64  20                 	db	32
   235  007A65  10                 	db	16
   236  007A66  08                 	db	8
   237  007A67  04                 	db	4
   238  007A68  02                 	db	2
   239  007A69  01                 	db	1
   240  007A6A  00                 	db	0
   241  007A6B  00                 	db	0
   242  007A6C  3E                 	db	62
   243  007A6D  41                 	db	65
   244  007A6E  41                 	db	65
   245  007A6F  41                 	db	65
   246  007A70  3E                 	db	62
   247  007A71  00                 	db	0
   248  007A72  00                 	db	0
   249  007A73  00                 	db	0
   250  007A74  00                 	db	0
   251  007A75  41                 	db	65
   252  007A76  7F                 	db	127
   253  007A77  40                 	db	64
   254  007A78  00                 	db	0
   255  007A79  00                 	db	0
   256  007A7A  00                 	db	0
   257  007A7B  00                 	db	0
   258  007A7C  42                 	db	66
   259  007A7D  61                 	db	97
   260  007A7E  51                 	db	81
   261  007A7F  49                 	db	73
   262  007A80  6E                 	db	110
   263  007A81  00                 	db	0
   264  007A82  00                 	db	0
   265  007A83  00                 	db	0
   266  007A84  22                 	db	34
   267  007A85  41                 	db	65
   268  007A86  49                 	db	73
   269  007A87  49                 	db	73
   270  007A88  36                 	db	54
   271  007A89  00                 	db	0
   272  007A8A  00                 	db	0
   273  007A8B  00                 	db	0
   274  007A8C  18                 	db	24
   275  007A8D  14                 	db	20
   276  007A8E  12                 	db	18
   277  007A8F  7F                 	db	127
   278  007A90  10                 	db	16
   279  007A91  00                 	db	0
   280  007A92  00                 	db	0
   281  007A93  00                 	db	0
   282  007A94  27                 	db	39
   283  007A95  49                 	db	73
   284  007A96  49                 	db	73
   285  007A97  49                 	db	73
   286  007A98  71                 	db	113
   287  007A99  00                 	db	0
   288  007A9A  00                 	db	0
   289  007A9B  00                 	db	0
   290  007A9C  3C                 	db	60
   291  007A9D  4A                 	db	74
   292  007A9E  49                 	db	73
   293  007A9F  48                 	db	72
   294  007AA0  70                 	db	112
   295  007AA1  00                 	db	0
   296  007AA2  00                 	db	0
   297  007AA3  00                 	db	0
   298  007AA4  43                 	db	67
   299  007AA5  21                 	db	33
   300  007AA6  11                 	db	17
   301  007AA7  0D                 	db	13
   302  007AA8  03                 	db	3
   303  007AA9  00                 	db	0
   304  007AAA  00                 	db	0
   305  007AAB  00                 	db	0
   306  007AAC  36                 	db	54
   307  007AAD  49                 	db	73
   308  007AAE  49                 	db	73
   309  007AAF  49                 	db	73
   310  007AB0  36                 	db	54
   311  007AB1  00                 	db	0
   312  007AB2  00                 	db	0
   313  007AB3  00                 	db	0
   314  007AB4  06                 	db	6
   315  007AB5  09                 	db	9
   316  007AB6  49                 	db	73
   317  007AB7  29                 	db	41
   318  007AB8  1E                 	db	30
   319  007AB9  00                 	db	0
   320  007ABA  00                 	db	0
   321  007ABB  00                 	db	0
   322  007ABC  00                 	db	0
   323  007ABD  00                 	db	0
   324  007ABE  12                 	db	18
   325  007ABF  00                 	db	0
   326  007AC0  00                 	db	0
   327  007AC1  00                 	db	0
   328  007AC2  00                 	db	0
   329  007AC3  00                 	db	0
   330  007AC4  00                 	db	0
   331  007AC5  00                 	db	0
   332  007AC6  52                 	db	82
   333  007AC7  30                 	db	48
   334  007AC8  00                 	db	0
   335  007AC9  00                 	db	0
   336  007ACA  00                 	db	0
   337  007ACB  00                 	db	0
   338  007ACC  00                 	db	0
   339  007ACD  08                 	db	8
   340  007ACE  14                 	db	20
   341  007ACF  14                 	db	20
   342  007AD0  22                 	db	34
   343  007AD1  00                 	db	0
   344  007AD2  00                 	db	0
   345  007AD3  00                 	db	0
   346  007AD4  14                 	db	20
   347  007AD5  14                 	db	20
   348  007AD6  14                 	db	20
   349  007AD7  14                 	db	20
   350  007AD8  14                 	db	20
   351  007AD9  14                 	db	20
   352  007ADA  00                 	db	0
   353  007ADB  00                 	db	0
   354  007ADC  00                 	db	0
   355  007ADD  22                 	db	34
   356  007ADE  14                 	db	20
   357  007ADF  14                 	db	20
   358  007AE0  08                 	db	8
   359  007AE1  00                 	db	0
   360  007AE2  00                 	db	0
   361  007AE3  00                 	db	0
   362  007AE4  02                 	db	2
   363  007AE5  01                 	db	1
   364  007AE6  59                 	db	89
   365  007AE7  05                 	db	5
   366  007AE8  02                 	db	2
   367  007AE9  00                 	db	0
   368  007AEA  00                 	db	0
   369  007AEB  3E                 	db	62
   370  007AEC  41                 	db	65
   371  007AED  5D                 	db	93
   372  007AEE  55                 	db	85
   373  007AEF  4D                 	db	77
   374  007AF0  51                 	db	81
   375  007AF1  2E                 	db	46
   376  007AF2  00                 	db	0
   377  007AF3  40                 	db	64
   378  007AF4  7C                 	db	124
   379  007AF5  4A                 	db	74
   380  007AF6  09                 	db	9
   381  007AF7  4A                 	db	74
   382  007AF8  7C                 	db	124
   383  007AF9  40                 	db	64
   384  007AFA  00                 	db	0
   385  007AFB  41                 	db	65
   386  007AFC  7F                 	db	127
   387  007AFD  49                 	db	73
   388  007AFE  49                 	db	73
   389  007AFF  49                 	db	73
   390  007B00  49                 	db	73
   391  007B01  36                 	db	54
   392  007B02  00                 	db	0
   393  007B03  1C                 	db	28
   394  007B04  22                 	db	34
   395  007B05  41                 	db	65
   396  007B06  41                 	db	65
   397  007B07  41                 	db	65
   398  007B08  41                 	db	65
   399  007B09  22                 	db	34
   400  007B0A  00                 	db	0
   401  007B0B  41                 	db	65
   402  007B0C  7F                 	db	127
   403  007B0D  41                 	db	65
   404  007B0E  41                 	db	65
   405  007B0F  41                 	db	65
   406  007B10  22                 	db	34
   407  007B11  1C                 	db	28
   408  007B12  00                 	db	0
   409  007B13  41                 	db	65
   410  007B14  7F                 	db	127
   411  007B15  49                 	db	73
   412  007B16  49                 	db	73
   413  007B17  5D                 	db	93
   414  007B18  41                 	db	65
   415  007B19  63                 	db	99
   416  007B1A  00                 	db	0
   417  007B1B  41                 	db	65
   418  007B1C  7F                 	db	127
   419  007B1D  49                 	db	73
   420  007B1E  09                 	db	9
   421  007B1F  1D                 	db	29
   422  007B20  01                 	db	1
   423  007B21  03                 	db	3
   424  007B22  00                 	db	0
   425  007B23  1C                 	db	28
   426  007B24  22                 	db	34
   427  007B25  41                 	db	65
   428  007B26  49                 	db	73
   429  007B27  49                 	db	73
   430  007B28  3A                 	db	58
   431  007B29  08                 	db	8
   432  007B2A  00                 	db	0
   433  007B2B  41                 	db	65
   434  007B2C  7F                 	db	127
   435  007B2D  08                 	db	8
   436  007B2E  08                 	db	8
   437  007B2F  08                 	db	8
   438  007B30  7F                 	db	127
   439  007B31  41                 	db	65
   440  007B32  00                 	db	0
   441  007B33  00                 	db	0
   442  007B34  41                 	db	65
   443  007B35  41                 	db	65
   444  007B36  7F                 	db	127
   445  007B37  41                 	db	65
   446  007B38  41                 	db	65
   447  007B39  00                 	db	0
   448  007B3A  00                 	db	0
   449  007B3B  30                 	db	48
   450  007B3C  40                 	db	64
   451  007B3D  41                 	db	65
   452  007B3E  41                 	db	65
   453  007B3F  3F                 	db	63
   454  007B40  01                 	db	1
   455  007B41  01                 	db	1
   456  007B42  00                 	db	0
   457  007B43  41                 	db	65
   458  007B44  7F                 	db	127
   459  007B45  08                 	db	8
   460  007B46  0C                 	db	12
   461  007B47  12                 	db	18
   462  007B48  61                 	db	97
   463  007B49  41                 	db	65
   464  007B4A  00                 	db	0
   465  007B4B  41                 	db	65
   466  007B4C  7F                 	db	127
   467  007B4D  41                 	db	65
   468  007B4E  40                 	db	64
   469  007B4F  40                 	db	64
   470  007B50  40                 	db	64
   471  007B51  60                 	db	96
   472  007B52  00                 	db	0
   473  007B53  41                 	db	65
   474  007B54  7F                 	db	127
   475  007B55  42                 	db	66
   476  007B56  0C                 	db	12
   477  007B57  42                 	db	66
   478  007B58  7F                 	db	127
   479  007B59  41                 	db	65
   480  007B5A  00                 	db	0
   481  007B5B  41                 	db	65
   482  007B5C  7F                 	db	127
   483  007B5D  42                 	db	66
   484  007B5E  0C                 	db	12
   485  007B5F  11                 	db	17
   486  007B60  7F                 	db	127
   487  007B61  01                 	db	1
   488  007B62  00                 	db	0
   489  007B63  1C                 	db	28
   490  007B64  22                 	db	34
   491  007B65  41                 	db	65
   492  007B66  41                 	db	65
   493  007B67  41                 	db	65
   494  007B68  22                 	db	34
   495  007B69  1C                 	db	28
   496  007B6A  00                 	db	0
   497  007B6B  41                 	db	65
   498  007B6C  7F                 	db	127
   499  007B6D  49                 	db	73
   500  007B6E  09                 	db	9
   501  007B6F  09                 	db	9
   502  007B70  09                 	db	9
   503  007B71  06                 	db	6
   504  007B72  00                 	db	0
   505  007B73  0C                 	db	12
   506  007B74  12                 	db	18
   507  007B75  21                 	db	33
   508  007B76  21                 	db	33
   509  007B77  61                 	db	97
   510  007B78  52                 	db	82
   511  007B79  4C                 	db	76
   512  007B7A  00                 	db	0
   513  007B7B  41                 	db	65
   514  007B7C  7F                 	db	127
   515  007B7D  09                 	db	9
   516  007B7E  09                 	db	9
   517  007B7F  19                 	db	25
   518  007B80  69                 	db	105
   519  007B81  46                 	db	70
   520  007B82  00                 	db	0
   521  007B83  66                 	db	102
   522  007B84  49                 	db	73
   523  007B85  49                 	db	73
   524  007B86  49                 	db	73
   525  007B87  49                 	db	73
   526  007B88  49                 	db	73
   527  007B89  33                 	db	51
   528  007B8A  00                 	db	0
   529  007B8B  03                 	db	3
   530  007B8C  01                 	db	1
   531  007B8D  41                 	db	65
   532  007B8E  7F                 	db	127
   533  007B8F  41                 	db	65
   534  007B90  01                 	db	1
   535  007B91  03                 	db	3
   536  007B92  00                 	db	0
   537  007B93  01                 	db	1
   538  007B94  3F                 	db	63
   539  007B95  41                 	db	65
   540  007B96  40                 	db	64
   541  007B97  41                 	db	65
   542  007B98  3F                 	db	63
   543  007B99  01                 	db	1
   544  007B9A  00                 	db	0
   545  007B9B  01                 	db	1
   546  007B9C  0F                 	db	15
   547  007B9D  31                 	db	49
   548  007B9E  40                 	db	64
   549  007B9F  31                 	db	49
   550  007BA0  0F                 	db	15
   551  007BA1  01                 	db	1
   552  007BA2  00                 	db	0
   553  007BA3  01                 	db	1
   554  007BA4  1F                 	db	31
   555  007BA5  61                 	db	97
   556  007BA6  14                 	db	20
   557  007BA7  61                 	db	97
   558  007BA8  1F                 	db	31
   559  007BA9  01                 	db	1
   560  007BAA  00                 	db	0
   561  007BAB  41                 	db	65
   562  007BAC  41                 	db	65
   563  007BAD  36                 	db	54
   564  007BAE  08                 	db	8
   565  007BAF  36                 	db	54
   566  007BB0  41                 	db	65
   567  007BB1  41                 	db	65
   568  007BB2  00                 	db	0
   569  007BB3  01                 	db	1
   570  007BB4  03                 	db	3
   571  007BB5  44                 	db	68
   572  007BB6  78                 	db	120
   573  007BB7  44                 	db	68
   574  007BB8  03                 	db	3
   575  007BB9  01                 	db	1
   576  007BBA  00                 	db	0
   577  007BBB  43                 	db	67
   578  007BBC  61                 	db	97
   579  007BBD  51                 	db	81
   580  007BBE  49                 	db	73
   581  007BBF  45                 	db	69
   582  007BC0  43                 	db	67
   583  007BC1  61                 	db	97
   584  007BC2  00                 	db	0
   585  007BC3  00                 	db	0
   586  007BC4  00                 	db	0
   587  007BC5  7F                 	db	127
   588  007BC6  41                 	db	65
   589  007BC7  41                 	db	65
   590  007BC8  00                 	db	0
   591  007BC9  00                 	db	0
   592  007BCA  00                 	db	0
   593  007BCB  01                 	db	1
   594  007BCC  02                 	db	2
   595  007BCD  04                 	db	4
   596  007BCE  08                 	db	8
   597  007BCF  10                 	db	16
   598  007BD0  20                 	db	32
   599  007BD1  40                 	db	64
   600  007BD2  00                 	db	0
   601  007BD3  00                 	db	0
   602  007BD4  00                 	db	0
   603  007BD5  41                 	db	65
   604  007BD6  41                 	db	65
   605  007BD7  7F                 	db	127
   606  007BD8  00                 	db	0
   607  007BD9  00                 	db	0
   608  007BDA  00                 	db	0
   609  007BDB  00                 	db	0
   610  007BDC  04                 	db	4
   611  007BDD  02                 	db	2
   612  007BDE  01                 	db	1
   613  007BDF  01                 	db	1
   614  007BE0  02                 	db	2
   615  007BE1  04                 	db	4
   616  007BE2  00                 	db	0
   617  007BE3  00                 	db	0
   618  007BE4  40                 	db	64
   619  007BE5  40                 	db	64
   620  007BE6  40                 	db	64
   621  007BE7  40                 	db	64
   622  007BE8  40                 	db	64
   623  007BE9  40                 	db	64
   624  007BEA  00                 	db	0
   625  007BEB  00                 	db	0
   626  007BEC  01                 	db	1
   627  007BED  02                 	db	2
   628  007BEE  00                 	db	0
   629  007BEF  00                 	db	0
   630  007BF0  00                 	db	0
   631  007BF1  00                 	db	0
   632  007BF2  00                 	db	0
   633  007BF3  00                 	db	0
   634  007BF4  34                 	db	52
   635  007BF5  4A                 	db	74
   636  007BF6  4A                 	db	74
   637  007BF7  4A                 	db	74
   638  007BF8  3C                 	db	60
   639  007BF9  40                 	db	64
   640  007BFA  00                 	db	0
   641  007BFB  00                 	db	0
   642  007BFC  41                 	db	65
   643  007BFD  3F                 	db	63
   644  007BFE  48                 	db	72
   645  007BFF  48                 	db	72
   646  007C00  48                 	db	72
   647  007C01  30                 	db	48
   648  007C02  00                 	db	0
   649  007C03  00                 	db	0
   650  007C04  3C                 	db	60
   651  007C05  42                 	db	66
   652  007C06  42                 	db	66
   653  007C07  42                 	db	66
   654  007C08  24                 	db	36
   655  007C09  00                 	db	0
   656  007C0A  00                 	db	0
   657  007C0B  00                 	db	0
   658  007C0C  30                 	db	48
   659  007C0D  48                 	db	72
   660  007C0E  48                 	db	72
   661  007C0F  49                 	db	73
   662  007C10  3F                 	db	63
   663  007C11  40                 	db	64
   664  007C12  00                 	db	0
   665  007C13  00                 	db	0
   666  007C14  3C                 	db	60
   667  007C15  4A                 	db	74
   668  007C16  4A                 	db	74
   669  007C17  4A                 	db	74
   670  007C18  2C                 	db	44
   671  007C19  00                 	db	0
   672  007C1A  00                 	db	0
   673  007C1B  00                 	db	0
   674  007C1C  00                 	db	0
   675  007C1D  48                 	db	72
   676  007C1E  7E                 	db	126
   677  007C1F  49                 	db	73
   678  007C20  09                 	db	9
   679  007C21  00                 	db	0
   680  007C22  00                 	db	0
   681  007C23  00                 	db	0
   682  007C24  26                 	db	38
   683  007C25  49                 	db	73
   684  007C26  49                 	db	73
   685  007C27  49                 	db	73
   686  007C28  3F                 	db	63
   687  007C29  01                 	db	1
   688  007C2A  00                 	db	0
   689  007C2B  41                 	db	65
   690  007C2C  7F                 	db	127
   691  007C2D  48                 	db	72
   692  007C2E  04                 	db	4
   693  007C2F  44                 	db	68
   694  007C30  78                 	db	120
   695  007C31  40                 	db	64
   696  007C32  00                 	db	0
   697  007C33  00                 	db	0
   698  007C34  00                 	db	0
   699  007C35  44                 	db	68
   700  007C36  7D                 	db	125
   701  007C37  40                 	db	64
   702  007C38  00                 	db	0
   703  007C39  00                 	db	0
   704  007C3A  00                 	db	0
   705  007C3B  00                 	db	0
   706  007C3C  00                 	db	0
   707  007C3D  40                 	db	64
   708  007C3E  44                 	db	68
   709  007C3F  3D                 	db	61
   710  007C40  00                 	db	0
   711  007C41  00                 	db	0
   712  007C42  00                 	db	0
   713  007C43  41                 	db	65
   714  007C44  7F                 	db	127
   715  007C45  10                 	db	16
   716  007C46  18                 	db	24
   717  007C47  24                 	db	36
   718  007C48  42                 	db	66
   719  007C49  42                 	db	66
   720  007C4A  00                 	db	0
   721  007C4B  00                 	db	0
   722  007C4C  40                 	db	64
   723  007C4D  41                 	db	65
   724  007C4E  7F                 	db	127
   725  007C4F  40                 	db	64
   726  007C50  40                 	db	64
   727  007C51  00                 	db	0
   728  007C52  00                 	db	0
   729  007C53  42                 	db	66
   730  007C54  7E                 	db	126
   731  007C55  02                 	db	2
   732  007C56  7C                 	db	124
   733  007C57  02                 	db	2
   734  007C58  7E                 	db	126
   735  007C59  40                 	db	64
   736  007C5A  00                 	db	0
   737  007C5B  42                 	db	66
   738  007C5C  7E                 	db	126
   739  007C5D  44                 	db	68
   740  007C5E  02                 	db	2
   741  007C5F  42                 	db	66
   742  007C60  7C                 	db	124
   743  007C61  40                 	db	64
   744  007C62  00                 	db	0
   745  007C63  00                 	db	0
   746  007C64  3C                 	db	60
   747  007C65  42                 	db	66
   748  007C66  42                 	db	66
   749  007C67  42                 	db	66
   750  007C68  3C                 	db	60
   751  007C69  00                 	db	0
   752  007C6A  00                 	db	0
   753  007C6B  00                 	db	0
   754  007C6C  41                 	db	65
   755  007C6D  7F                 	db	127
   756  007C6E  49                 	db	73
   757  007C6F  09                 	db	9
   758  007C70  09                 	db	9
   759  007C71  06                 	db	6
   760  007C72  00                 	db	0
   761  007C73  00                 	db	0
   762  007C74  06                 	db	6
   763  007C75  09                 	db	9
   764  007C76  09                 	db	9
   765  007C77  49                 	db	73
   766  007C78  7F                 	db	127
   767  007C79  41                 	db	65
   768  007C7A  00                 	db	0
   769  007C7B  00                 	db	0
   770  007C7C  42                 	db	66
   771  007C7D  7E                 	db	126
   772  007C7E  44                 	db	68
   773  007C7F  02                 	db	2
   774  007C80  02                 	db	2
   775  007C81  04                 	db	4
   776  007C82  00                 	db	0
   777  007C83  00                 	db	0
   778  007C84  64                 	db	100
   779  007C85  4A                 	db	74
   780  007C86  4A                 	db	74
   781  007C87  4A                 	db	74
   782  007C88  36                 	db	54
   783  007C89  00                 	db	0
   784  007C8A  00                 	db	0
   785  007C8B  00                 	db	0
   786  007C8C  04                 	db	4
   787  007C8D  3F                 	db	63
   788  007C8E  44                 	db	68
   789  007C8F  44                 	db	68
   790  007C90  20                 	db	32
   791  007C91  00                 	db	0
   792  007C92  00                 	db	0
   793  007C93  00                 	db	0
   794  007C94  02                 	db	2
   795  007C95  3E                 	db	62
   796  007C96  40                 	db	64
   797  007C97  40                 	db	64
   798  007C98  22                 	db	34
   799  007C99  7E                 	db	126
   800  007C9A  40                 	db	64
   801  007C9B  02                 	db	2
   802  007C9C  0E                 	db	14
   803  007C9D  32                 	db	50
   804  007C9E  40                 	db	64
   805  007C9F  32                 	db	50
   806  007CA0  0E                 	db	14
   807  007CA1  02                 	db	2
   808  007CA2  00                 	db	0
   809  007CA3  02                 	db	2
   810  007CA4  1E                 	db	30
   811  007CA5  62                 	db	98
   812  007CA6  18                 	db	24
   813  007CA7  62                 	db	98
   814  007CA8  1E                 	db	30
   815  007CA9  02                 	db	2
   816  007CAA  00                 	db	0
   817  007CAB  42                 	db	66
   818  007CAC  62                 	db	98
   819  007CAD  14                 	db	20
   820  007CAE  08                 	db	8
   821  007CAF  14                 	db	20
   822  007CB0  62                 	db	98
   823  007CB1  42                 	db	66
   824  007CB2  00                 	db	0
   825  007CB3  01                 	db	1
   826  007CB4  43                 	db	67
   827  007CB5  45                 	db	69
   828  007CB6  38                 	db	56
   829  007CB7  05                 	db	5
   830  007CB8  03                 	db	3
   831  007CB9  01                 	db	1
   832  007CBA  00                 	db	0
   833  007CBB  00                 	db	0
   834  007CBC  46                 	db	70
   835  007CBD  62                 	db	98
   836  007CBE  52                 	db	82
   837  007CBF  4A                 	db	74
   838  007CC0  46                 	db	70
   839  007CC1  62                 	db	98
   840  007CC2  00                 	db	0
   841  007CC3  00                 	db	0
   842  007CC4  00                 	db	0
   843  007CC5  08                 	db	8
   844  007CC6  36                 	db	54
   845  007CC7  41                 	db	65
   846  007CC8  00                 	db	0
   847  007CC9  00                 	db	0
   848  007CCA  00                 	db	0
   849  007CCB  00                 	db	0
   850  007CCC  00                 	db	0
   851  007CCD  00                 	db	0
   852  007CCE  7F                 	db	127
   853  007CCF  00                 	db	0
   854  007CD0  00                 	db	0
   855  007CD1  00                 	db	0
   856  007CD2  00                 	db	0
   857  007CD3  00                 	db	0
   858  007CD4  00                 	db	0
   859  007CD5  00                 	db	0
   860  007CD6  41                 	db	65
   861  007CD7  36                 	db	54
   862  007CD8  08                 	db	8
   863  007CD9  00                 	db	0
   864  007CDA  00                 	db	0
   865  007CDB  00                 	db	0
   866  007CDC  18                 	db	24
   867  007CDD  08                 	db	8
   868  007CDE  08                 	db	8
   869  007CDF  10                 	db	16
   870  007CE0  10                 	db	16
   871  007CE1  18                 	db	24
   872  007CE2  00                 	db	0
   873  007CE3  AA                 	db	170
   874  007CE4  55                 	db	85
   875  007CE5  AA                 	db	170
   876  007CE6  55                 	db	85
   877  007CE7  AA                 	db	170
   878  007CE8  55                 	db	85
   879  007CE9  AA                 	db	170
   880  007CEA  55                 	db	85
   881  007CEB                     __end_of_OledFont0:
   882                           	callstack 0
   883  0000                     _ANSELA	set	3931
   884  0000                     _ANSELE	set	3935
   885  0000                     _ANSELB	set	3932
   886  0000                     _ANSELC	set	3933
   887  0000                     _ANSELD	set	3934
   888  0000                     _LATCbits	set	3979
   889  0000                     _LATBbits	set	3978
   890  0000                     _TRISCbits	set	3988
   891  0000                     _TRISBbits	set	3987
   892  0000                     _LATEbits	set	3981
   893  0000                     _TRISEbits	set	3990
   894  0000                     _LATAbits	set	3977
   895  0000                     _TRISAbits	set	3986
   896  0000                     _ACTCON	set	4021
   897  0000                     _OSCTUNE	set	3995
   898  0000                     _OSCCON2	set	4050
   899  0000                     _OSCCON	set	4051
   900  0000                     _INTCONbits	set	4082
   901  0000                     _INTCON2bits	set	4081
   902  0000                     _WPUB	set	3973
   903  0000                     _TRISD	set	3989
   904  0000                     _TRISC	set	3988
   905  0000                     _TRISB	set	3987
   906  0000                     _TRISA	set	3986
   907  0000                     _TRISE	set	3990
   908  0000                     _LATC	set	3979
   909  0000                     _LATB	set	3978
   910  0000                     _LATA	set	3977
   911  0000                     _LATD	set	3980
   912  0000                     _LATE	set	3981
   913  0000                     _TXREG1	set	4013
   914  0000                     _RCREG1	set	4014
   915  0000                     _RCSTA1bits	set	4011
   916  0000                     _TXSTA1bits	set	4012
   917  0000                     _PIR1bits	set	3998
   918  0000                     _SPBRGH1	set	4016
   919  0000                     _SPBRG1	set	4015
   920  0000                     _TXSTA1	set	4012
   921  0000                     _RCSTA1	set	4011
   922  0000                     _BAUDCON1	set	4024
   923  0000                     _PLLRDY	set	32407
   924  007CEB                     STR_16:
   925                           
   926                           ; BSR set to: 0
   927  007CEB  72                 	db	114	;'r'
   928  007CEC  61                 	db	97	;'a'
   929  007CED  64                 	db	100	;'d'
   930  007CEE  69                 	db	105	;'i'
   931  007CEF  6F                 	db	111	;'o'
   932  007CF0  20                 	db	32
   933  007CF1  73                 	db	115	;'s'
   934  007CF2  65                 	db	101	;'e'
   935  007CF3  74                 	db	116	;'t'
   936  007CF4  20                 	db	32
   937  007CF5  66                 	db	102	;'f'
   938  007CF6  72                 	db	114	;'r'
   939  007CF7  65                 	db	101	;'e'
   940  007CF8  71                 	db	113	;'q'
   941  007CF9  20                 	db	32
   942  007CFA  39                 	db	57	;'9'
   943  007CFB  32                 	db	50	;'2'
   944  007CFC  33                 	db	51	;'3'
   945  007CFD  33                 	db	51	;'3'
   946  007CFE  30                 	db	48	;'0'
   947  007CFF  30                 	db	48	;'0'
   948  007D00  30                 	db	48	;'0'
   949  007D01  30                 	db	48	;'0'
   950  007D02  30                 	db	48	;'0'
   951  007D03  0D                 	db	13
   952  007D04  0A                 	db	10
   953  007D05  00                 	db	0
   954  007D06                     
   955                           ; BSR set to: 0
   956  007D06  73                 	db	115	;'s'
   957  007D07  79                 	db	121	;'y'
   958  007D08  73                 	db	115	;'s'
   959  007D09  20                 	db	32
   960  007D0A  73                 	db	115	;'s'
   961  007D0B  65                 	db	101	;'e'
   962  007D0C  74                 	db	116	;'t'
   963  007D0D  20                 	db	32
   964  007D0E  70                 	db	112	;'p'
   965  007D0F  69                 	db	105	;'i'
   966  007D10  6E                 	db	110	;'n'
   967  007D11  64                 	db	100	;'d'
   968  007D12  69                 	db	105	;'i'
   969  007D13  67                 	db	103	;'g'
   970  007D14  20                 	db	32
   971  007D15  47                 	db	71	;'G'
   972  007D16  50                 	db	80	;'P'
   973  007D17  49                 	db	73	;'I'
   974  007D18  4F                 	db	79	;'O'
   975  007D19  31                 	db	49	;'1'
   976  007D1A  30                 	db	48	;'0'
   977  007D1B  20                 	db	32
   978  007D1C  30                 	db	48	;'0'
   979  007D1D  0D                 	db	13
   980  007D1E  0A                 	db	10
   981  007D1F  00                 	db	0
   982  007D20                     
   983                           ; BSR set to: 0
   984  007D20  73                 	db	115	;'s'
   985  007D21  79                 	db	121	;'y'
   986  007D22  73                 	db	115	;'s'
   987  007D23  20                 	db	32
   988  007D24  73                 	db	115	;'s'
   989  007D25  65                 	db	101	;'e'
   990  007D26  74                 	db	116	;'t'
   991  007D27  20                 	db	32
   992  007D28  70                 	db	112	;'p'
   993  007D29  69                 	db	105	;'i'
   994  007D2A  6E                 	db	110	;'n'
   995  007D2B  64                 	db	100	;'d'
   996  007D2C  69                 	db	105	;'i'
   997  007D2D  67                 	db	103	;'g'
   998  007D2E  20                 	db	32
   999  007D2F  47                 	db	71	;'G'
  1000  007D30  50                 	db	80	;'P'
  1001  007D31  49                 	db	73	;'I'
  1002  007D32  4F                 	db	79	;'O'
  1003  007D33  31                 	db	49	;'1'
  1004  007D34  31                 	db	49	;'1'
  1005  007D35  20                 	db	32
  1006  007D36  30                 	db	48	;'0'
  1007  007D37  0D                 	db	13
  1008  007D38  0A                 	db	10
  1009  007D39  00                 	db	0
  1010  007D3A                     
  1011                           ; BSR set to: 0
  1012  007D3A  73                 	db	115	;'s'
  1013  007D3B  79                 	db	121	;'y'
  1014  007D3C  73                 	db	115	;'s'
  1015  007D3D  20                 	db	32
  1016  007D3E  73                 	db	115	;'s'
  1017  007D3F  65                 	db	101	;'e'
  1018  007D40  74                 	db	116	;'t'
  1019  007D41  20                 	db	32
  1020  007D42  70                 	db	112	;'p'
  1021  007D43  69                 	db	105	;'i'
  1022  007D44  6E                 	db	110	;'n'
  1023  007D45  64                 	db	100	;'d'
  1024  007D46  69                 	db	105	;'i'
  1025  007D47  67                 	db	103	;'g'
  1026  007D48  20                 	db	32
  1027  007D49  47                 	db	71	;'G'
  1028  007D4A  50                 	db	80	;'P'
  1029  007D4B  49                 	db	73	;'I'
  1030  007D4C  4F                 	db	79	;'O'
  1031  007D4D  31                 	db	49	;'1'
  1032  007D4E  30                 	db	48	;'0'
  1033  007D4F  20                 	db	32
  1034  007D50  31                 	db	49	;'1'
  1035  007D51  0D                 	db	13
  1036  007D52  0A                 	db	10
  1037  007D53  00                 	db	0
  1038  007D54                     
  1039                           ; BSR set to: 0
  1040  007D54  73                 	db	115	;'s'
  1041  007D55  79                 	db	121	;'y'
  1042  007D56  73                 	db	115	;'s'
  1043  007D57  20                 	db	32
  1044  007D58  73                 	db	115	;'s'
  1045  007D59  65                 	db	101	;'e'
  1046  007D5A  74                 	db	116	;'t'
  1047  007D5B  20                 	db	32
  1048  007D5C  70                 	db	112	;'p'
  1049  007D5D  69                 	db	105	;'i'
  1050  007D5E  6E                 	db	110	;'n'
  1051  007D5F  64                 	db	100	;'d'
  1052  007D60  69                 	db	105	;'i'
  1053  007D61  67                 	db	103	;'g'
  1054  007D62  20                 	db	32
  1055  007D63  47                 	db	71	;'G'
  1056  007D64  50                 	db	80	;'P'
  1057  007D65  49                 	db	73	;'I'
  1058  007D66  4F                 	db	79	;'O'
  1059  007D67  31                 	db	49	;'1'
  1060  007D68  31                 	db	49	;'1'
  1061  007D69  20                 	db	32
  1062  007D6A  31                 	db	49	;'1'
  1063  007D6B  0D                 	db	13
  1064  007D6C  0A                 	db	10
  1065  007D6D  00                 	db	0
  1066  007D6E                     STR_31:
  1067                           
  1068                           ; BSR set to: 0
  1069  007D6E  72                 	db	114	;'r'
  1070  007D6F  61                 	db	97	;'a'
  1071  007D70  64                 	db	100	;'d'
  1072  007D71  69                 	db	105	;'i'
  1073  007D72  6F                 	db	111	;'o'
  1074  007D73  20                 	db	32
  1075  007D74  73                 	db	115	;'s'
  1076  007D75  65                 	db	101	;'e'
  1077  007D76  74                 	db	116	;'t'
  1078  007D77  20                 	db	32
  1079  007D78  77                 	db	119	;'w'
  1080  007D79  64                 	db	100	;'d'
  1081  007D7A  74                 	db	116	;'t'
  1082  007D7B  20                 	db	32
  1083  007D7C  31                 	db	49	;'1'
  1084  007D7D  35                 	db	53	;'5'
  1085  007D7E  30                 	db	48	;'0'
  1086  007D7F  30                 	db	48	;'0'
  1087  007D80  30                 	db	48	;'0'
  1088  007D81  0D                 	db	13
  1089  007D82  0A                 	db	10
  1090  007D83  00                 	db	0
  1091  007D84                     STR_25:
  1092                           
  1093                           ; BSR set to: 0
  1094  007D84  72                 	db	114	;'r'
  1095  007D85  61                 	db	97	;'a'
  1096  007D86  64                 	db	100	;'d'
  1097  007D87  69                 	db	105	;'i'
  1098  007D88  6F                 	db	111	;'o'
  1099  007D89  20                 	db	32
  1100  007D8A  73                 	db	115	;'s'
  1101  007D8B  65                 	db	101	;'e'
  1102  007D8C  74                 	db	116	;'t'
  1103  007D8D  20                 	db	32
  1104  007D8E  6D                 	db	109	;'m'
  1105  007D8F  6F                 	db	111	;'o'
  1106  007D90  64                 	db	100	;'d'
  1107  007D91  20                 	db	32
  1108  007D92  6C                 	db	108	;'l'
  1109  007D93  6F                 	db	111	;'o'
  1110  007D94  72                 	db	114	;'r'
  1111  007D95  61                 	db	97	;'a'
  1112  007D96  0D                 	db	13
  1113  007D97  0A                 	db	10
  1114  007D98  00                 	db	0
  1115  007D99                     STR_33:
  1116                           
  1117                           ; BSR set to: 0
  1118  007D99  66                 	db	102	;'f'
  1119  007D9A  61                 	db	97	;'a'
  1120  007D9B  63                 	db	99	;'c'
  1121  007D9C  74                 	db	116	;'t'
  1122  007D9D  6F                 	db	111	;'o'
  1123  007D9E  72                 	db	114	;'r'
  1124  007D9F  20                 	db	32
  1125  007DA0  64                 	db	100	;'d'
  1126  007DA1  65                 	db	101	;'e'
  1127  007DA2  20                 	db	32
  1128  007DA3  64                 	db	100	;'d'
  1129  007DA4  69                 	db	105	;'i'
  1130  007DA5  73                 	db	115	;'s'
  1131  007DA6  70                 	db	112	;'p'
  1132  007DA7  65                 	db	101	;'e'
  1133  007DA8  72                 	db	114	;'r'
  1134  007DA9  73                 	db	115	;'s'
  1135  007DAA  69                 	db	105	;'i'
  1136  007DAB  6F                 	db	111	;'o'
  1137  007DAC  6E                 	db	110	;'n'
  1138  007DAD  00                 	db	0
  1139  007DAE                     STR_34:
  1140                           
  1141                           ; BSR set to: 0
  1142  007DAE  72                 	db	114	;'r'
  1143  007DAF  61                 	db	97	;'a'
  1144  007DB0  64                 	db	100	;'d'
  1145  007DB1  69                 	db	105	;'i'
  1146  007DB2  6F                 	db	111	;'o'
  1147  007DB3  20                 	db	32
  1148  007DB4  73                 	db	115	;'s'
  1149  007DB5  65                 	db	101	;'e'
  1150  007DB6  74                 	db	116	;'t'
  1151  007DB7  20                 	db	32
  1152  007DB8  73                 	db	115	;'s'
  1153  007DB9  66                 	db	102	;'f'
  1154  007DBA  20                 	db	32
  1155  007DBB  53                 	db	83	;'S'
  1156  007DBC  46                 	db	70	;'F'
  1157  007DBD  31                 	db	49	;'1'
  1158  007DBE  32                 	db	50	;'2'
  1159  007DBF  0D                 	db	13
  1160  007DC0  0A                 	db	10
  1161  007DC1  00                 	db	0
  1162  007DC2                     STR_37:
  1163                           
  1164                           ; BSR set to: 0
  1165  007DC2  72                 	db	114	;'r'
  1166  007DC3  61                 	db	97	;'a'
  1167  007DC4  64                 	db	100	;'d'
  1168  007DC5  69                 	db	105	;'i'
  1169  007DC6  6F                 	db	111	;'o'
  1170  007DC7  20                 	db	32
  1171  007DC8  73                 	db	115	;'s'
  1172  007DC9  65                 	db	101	;'e'
  1173  007DCA  74                 	db	116	;'t'
  1174  007DCB  20                 	db	32
  1175  007DCC  73                 	db	115	;'s'
  1176  007DCD  79                 	db	121	;'y'
  1177  007DCE  6E                 	db	110	;'n'
  1178  007DCF  63                 	db	99	;'c'
  1179  007DD0  20                 	db	32
  1180  007DD1  33                 	db	51	;'3'
  1181  007DD2  34                 	db	52	;'4'
  1182  007DD3  0D                 	db	13
  1183  007DD4  0A                 	db	10
  1184  007DD5  00                 	db	0
  1185  007DD6                     STR_28:
  1186                           
  1187                           ; BSR set to: 0
  1188  007DD6  72                 	db	114	;'r'
  1189  007DD7  61                 	db	97	;'a'
  1190  007DD8  64                 	db	100	;'d'
  1191  007DD9  69                 	db	105	;'i'
  1192  007DDA  6F                 	db	111	;'o'
  1193  007DDB  20                 	db	32
  1194  007DDC  73                 	db	115	;'s'
  1195  007DDD  65                 	db	101	;'e'
  1196  007DDE  74                 	db	116	;'t'
  1197  007DDF  20                 	db	32
  1198  007DE0  69                 	db	105	;'i'
  1199  007DE1  71                 	db	113	;'q'
  1200  007DE2  69                 	db	105	;'i'
  1201  007DE3  20                 	db	32
  1202  007DE4  6F                 	db	111	;'o'
  1203  007DE5  66                 	db	102	;'f'
  1204  007DE6  66                 	db	102	;'f'
  1205  007DE7  0D                 	db	13
  1206  007DE8  0A                 	db	10
  1207  007DE9  00                 	db	0
  1208  007DEA                     STR_13:
  1209                           
  1210                           ; BSR set to: 0
  1211  007DEA  72                 	db	114	;'r'
  1212  007DEB  61                 	db	97	;'a'
  1213  007DEC  64                 	db	100	;'d'
  1214  007DED  69                 	db	105	;'i'
  1215  007DEE  6F                 	db	111	;'o'
  1216  007DEF  20                 	db	32
  1217  007DF0  73                 	db	115	;'s'
  1218  007DF1  65                 	db	101	;'e'
  1219  007DF2  74                 	db	116	;'t'
  1220  007DF3  20                 	db	32
  1221  007DF4  62                 	db	98	;'b'
  1222  007DF5  77                 	db	119	;'w'
  1223  007DF6  20                 	db	32
  1224  007DF7  32                 	db	50	;'2'
  1225  007DF8  35                 	db	53	;'5'
  1226  007DF9  30                 	db	48	;'0'
  1227  007DFA  0D                 	db	13
  1228  007DFB  0A                 	db	10
  1229  007DFC  00                 	db	0
  1230  007DFD                     STR_22:
  1231                           
  1232                           ; BSR set to: 0
  1233  007DFD  72                 	db	114	;'r'
  1234  007DFE  61                 	db	97	;'a'
  1235  007DFF  64                 	db	100	;'d'
  1236  007E00  69                 	db	105	;'i'
  1237  007E01  6F                 	db	111	;'o'
  1238  007E02  20                 	db	32
  1239  007E03  73                 	db	115	;'s'
  1240  007E04  65                 	db	101	;'e'
  1241  007E05  74                 	db	116	;'t'
  1242  007E06  20                 	db	32
  1243  007E07  63                 	db	99	;'c'
  1244  007E08  72                 	db	114	;'r'
  1245  007E09  20                 	db	32
  1246  007E0A  34                 	db	52	;'4'
  1247  007E0B  2F                 	db	47
  1248  007E0C  35                 	db	53	;'5'
  1249  007E0D  0D                 	db	13
  1250  007E0E  0A                 	db	10
  1251  007E0F  00                 	db	0
  1252  007E10                     STR_19:
  1253                           
  1254                           ; BSR set to: 0
  1255  007E10  72                 	db	114	;'r'
  1256  007E11  61                 	db	97	;'a'
  1257  007E12  64                 	db	100	;'d'
  1258  007E13  69                 	db	105	;'i'
  1259  007E14  6F                 	db	111	;'o'
  1260  007E15  20                 	db	32
  1261  007E16  73                 	db	115	;'s'
  1262  007E17  65                 	db	101	;'e'
  1263  007E18  74                 	db	116	;'t'
  1264  007E19  20                 	db	32
  1265  007E1A  63                 	db	99	;'c'
  1266  007E1B  72                 	db	114	;'r'
  1267  007E1C  63                 	db	99	;'c'
  1268  007E1D  20                 	db	32
  1269  007E1E  6F                 	db	111	;'o'
  1270  007E1F  6E                 	db	110	;'n'
  1271  007E20  0D                 	db	13
  1272  007E21  0A                 	db	10
  1273  007E22  00                 	db	0
  1274  007E23                     STR_10:
  1275                           
  1276                           ; BSR set to: 0
  1277  007E23  72                 	db	114	;'r'
  1278  007E24  61                 	db	97	;'a'
  1279  007E25  64                 	db	100	;'d'
  1280  007E26  69                 	db	105	;'i'
  1281  007E27  6F                 	db	111	;'o'
  1282  007E28  20                 	db	32
  1283  007E29  73                 	db	115	;'s'
  1284  007E2A  65                 	db	101	;'e'
  1285  007E2B  74                 	db	116	;'t'
  1286  007E2C  20                 	db	32
  1287  007E2D  70                 	db	112	;'p'
  1288  007E2E  77                 	db	119	;'w'
  1289  007E2F  72                 	db	114	;'r'
  1290  007E30  20                 	db	32
  1291  007E31  33                 	db	51	;'3'
  1292  007E32  0D                 	db	13
  1293  007E33  0A                 	db	10
  1294  007E34  00                 	db	0
  1295  007E35                     STR_8:
  1296                           
  1297                           ; BSR set to: 0
  1298  007E35  43                 	db	67	;'C'
  1299  007E36  6F                 	db	111	;'o'
  1300  007E37  6E                 	db	110	;'n'
  1301  007E38  66                 	db	102	;'f'
  1302  007E39  69                 	db	105	;'i'
  1303  007E3A  67                 	db	103	;'g'
  1304  007E3B  20                 	db	32
  1305  007E3C  6D                 	db	109	;'m'
  1306  007E3D  6F                 	db	111	;'o'
  1307  007E3E  64                 	db	100	;'d'
  1308  007E3F  75                 	db	117	;'u'
  1309  007E40  6C                 	db	108	;'l'
  1310  007E41  6F                 	db	111	;'o'
  1311  007E42  20                 	db	32
  1312  007E43  52                 	db	82	;'R'
  1313  007E44  4E                 	db	78	;'N'
  1314  007E45  00                 	db	0
  1315  007E46                     STR_39:
  1316                           
  1317                           ; BSR set to: 0
  1318  007E46  63                 	db	99	;'c'
  1319  007E47  6F                 	db	111	;'o'
  1320  007E48  6D                 	db	109	;'m'
  1321  007E49  61                 	db	97	;'a'
  1322  007E4A  6E                 	db	110	;'n'
  1323  007E4B  64                 	db	100	;'d'
  1324  007E4C  6F                 	db	111	;'o'
  1325  007E4D  20                 	db	32
  1326  007E4E  65                 	db	101	;'e'
  1327  007E4F  6E                 	db	110	;'n'
  1328  007E50  76                 	db	118	;'v'
  1329  007E51  69                 	db	105	;'i'
  1330  007E52  61                 	db	97	;'a'
  1331  007E53  64                 	db	100	;'d'
  1332  007E54  6F                 	db	111	;'o'
  1333  007E55  00                 	db	0
  1334  007E56                     STR_18:
  1335                           
  1336                           ; BSR set to: 0
  1337  007E56  63                 	db	99	;'c'
  1338  007E57  6F                 	db	111	;'o'
  1339  007E58  64                 	db	100	;'d'
  1340  007E59  20                 	db	32
  1341  007E5A  44                 	db	68	;'D'
  1342  007E5B  65                 	db	101	;'e'
  1343  007E5C  63                 	db	99	;'c'
  1344  007E5D  20                 	db	32
  1345  007E5E  45                 	db	69	;'E'
  1346  007E5F  72                 	db	114	;'r'
  1347  007E60  72                 	db	114	;'r'
  1348  007E61  6F                 	db	111	;'o'
  1349  007E62  72                 	db	114	;'r'
  1350  007E63  65                 	db	101	;'e'
  1351  007E64  73                 	db	115	;'s'
  1352  007E65  00                 	db	0
  1353  007E66                     STR_12:
  1354                           
  1355                           ; BSR set to: 0
  1356  007E66  61                 	db	97	;'a'
  1357  007E67  6E                 	db	110	;'n'
  1358  007E68  63                 	db	99	;'c'
  1359  007E69  68                 	db	104	;'h'
  1360  007E6A  6F                 	db	111	;'o'
  1361  007E6B  20                 	db	32
  1362  007E6C  64                 	db	100	;'d'
  1363  007E6D  65                 	db	101	;'e'
  1364  007E6E  20                 	db	32
  1365  007E6F  62                 	db	98	;'b'
  1366  007E70  61                 	db	97	;'a'
  1367  007E71  6E                 	db	110	;'n'
  1368  007E72  64                 	db	100	;'d'
  1369  007E73  61                 	db	97	;'a'
  1370  007E74  00                 	db	0
  1371  007E75                     STR_49:
  1372                           
  1373                           ; BSR set to: 0
  1374  007E75  72                 	db	114	;'r'
  1375  007E76  61                 	db	97	;'a'
  1376  007E77  64                 	db	100	;'d'
  1377  007E78  69                 	db	105	;'i'
  1378  007E79  6F                 	db	111	;'o'
  1379  007E7A  20                 	db	32
  1380  007E7B  74                 	db	116	;'t'
  1381  007E7C  78                 	db	120	;'x'
  1382  007E7D  20                 	db	32
  1383  007E7E  31                 	db	49	;'1'
  1384  007E7F  30                 	db	48	;'0'
  1385  007E80  0D                 	db	13
  1386  007E81  0A                 	db	10
  1387  007E82  00                 	db	0
  1388  007E83                     STR_52:
  1389                           
  1390                           ; BSR set to: 0
  1391  007E83  72                 	db	114	;'r'
  1392  007E84  61                 	db	97	;'a'
  1393  007E85  64                 	db	100	;'d'
  1394  007E86  69                 	db	105	;'i'
  1395  007E87  6F                 	db	111	;'o'
  1396  007E88  20                 	db	32
  1397  007E89  74                 	db	116	;'t'
  1398  007E8A  78                 	db	120	;'x'
  1399  007E8B  20                 	db	32
  1400  007E8C  32                 	db	50	;'2'
  1401  007E8D  30                 	db	48	;'0'
  1402  007E8E  0D                 	db	13
  1403  007E8F  0A                 	db	10
  1404  007E90  00                 	db	0
  1405  007E91                     STR_55:
  1406                           
  1407                           ; BSR set to: 0
  1408  007E91  72                 	db	114	;'r'
  1409  007E92  61                 	db	97	;'a'
  1410  007E93  64                 	db	100	;'d'
  1411  007E94  69                 	db	105	;'i'
  1412  007E95  6F                 	db	111	;'o'
  1413  007E96  20                 	db	32
  1414  007E97  74                 	db	116	;'t'
  1415  007E98  78                 	db	120	;'x'
  1416  007E99  20                 	db	32
  1417  007E9A  33                 	db	51	;'3'
  1418  007E9B  30                 	db	48	;'0'
  1419  007E9C  0D                 	db	13
  1420  007E9D  0A                 	db	10
  1421  007E9E  00                 	db	0
  1422  007E9F                     STR_58:
  1423                           
  1424                           ; BSR set to: 0
  1425  007E9F  72                 	db	114	;'r'
  1426  007EA0  61                 	db	97	;'a'
  1427  007EA1  64                 	db	100	;'d'
  1428  007EA2  69                 	db	105	;'i'
  1429  007EA3  6F                 	db	111	;'o'
  1430  007EA4  20                 	db	32
  1431  007EA5  74                 	db	116	;'t'
  1432  007EA6  78                 	db	120	;'x'
  1433  007EA7  20                 	db	32
  1434  007EA8  34                 	db	52	;'4'
  1435  007EA9  30                 	db	48	;'0'
  1436  007EAA  0D                 	db	13
  1437  007EAB  0A                 	db	10
  1438  007EAC  00                 	db	0
  1439  007EAD                     STR_61:
  1440                           
  1441                           ; BSR set to: 0
  1442  007EAD  72                 	db	114	;'r'
  1443  007EAE  61                 	db	97	;'a'
  1444  007EAF  64                 	db	100	;'d'
  1445  007EB0  69                 	db	105	;'i'
  1446  007EB1  6F                 	db	111	;'o'
  1447  007EB2  20                 	db	32
  1448  007EB3  74                 	db	116	;'t'
  1449  007EB4  78                 	db	120	;'x'
  1450  007EB5  20                 	db	32
  1451  007EB6  35                 	db	53	;'5'
  1452  007EB7  30                 	db	48	;'0'
  1453  007EB8  0D                 	db	13
  1454  007EB9  0A                 	db	10
  1455  007EBA  00                 	db	0
  1456  007EBB                     STR_64:
  1457                           
  1458                           ; BSR set to: 0
  1459  007EBB  72                 	db	114	;'r'
  1460  007EBC  61                 	db	97	;'a'
  1461  007EBD  64                 	db	100	;'d'
  1462  007EBE  69                 	db	105	;'i'
  1463  007EBF  6F                 	db	111	;'o'
  1464  007EC0  20                 	db	32
  1465  007EC1  74                 	db	116	;'t'
  1466  007EC2  78                 	db	120	;'x'
  1467  007EC3  20                 	db	32
  1468  007EC4  36                 	db	54	;'6'
  1469  007EC5  30                 	db	48	;'0'
  1470  007EC6  0D                 	db	13
  1471  007EC7  0A                 	db	10
  1472  007EC8  00                 	db	0
  1473  007EC9                     STR_67:
  1474                           
  1475                           ; BSR set to: 0
  1476  007EC9  72                 	db	114	;'r'
  1477  007ECA  61                 	db	97	;'a'
  1478  007ECB  64                 	db	100	;'d'
  1479  007ECC  69                 	db	105	;'i'
  1480  007ECD  6F                 	db	111	;'o'
  1481  007ECE  20                 	db	32
  1482  007ECF  74                 	db	116	;'t'
  1483  007ED0  78                 	db	120	;'x'
  1484  007ED1  20                 	db	32
  1485  007ED2  37                 	db	55	;'7'
  1486  007ED3  30                 	db	48	;'0'
  1487  007ED4  0D                 	db	13
  1488  007ED5  0A                 	db	10
  1489  007ED6  00                 	db	0
  1490  007ED7                     STR_70:
  1491                           
  1492                           ; BSR set to: 0
  1493  007ED7  72                 	db	114	;'r'
  1494  007ED8  61                 	db	97	;'a'
  1495  007ED9  64                 	db	100	;'d'
  1496  007EDA  69                 	db	105	;'i'
  1497  007EDB  6F                 	db	111	;'o'
  1498  007EDC  20                 	db	32
  1499  007EDD  74                 	db	116	;'t'
  1500  007EDE  78                 	db	120	;'x'
  1501  007EDF  20                 	db	32
  1502  007EE0  38                 	db	56	;'8'
  1503  007EE1  30                 	db	48	;'0'
  1504  007EE2  0D                 	db	13
  1505  007EE3  0A                 	db	10
  1506  007EE4  00                 	db	0
  1507  007EE5                     STR_73:
  1508                           
  1509                           ; BSR set to: 0
  1510  007EE5  72                 	db	114	;'r'
  1511  007EE6  61                 	db	97	;'a'
  1512  007EE7  64                 	db	100	;'d'
  1513  007EE8  69                 	db	105	;'i'
  1514  007EE9  6F                 	db	111	;'o'
  1515  007EEA  20                 	db	32
  1516  007EEB  74                 	db	116	;'t'
  1517  007EEC  78                 	db	120	;'x'
  1518  007EED  20                 	db	32
  1519  007EEE  39                 	db	57	;'9'
  1520  007EEF  30                 	db	48	;'0'
  1521  007EF0  0D                 	db	13
  1522  007EF1  0A                 	db	10
  1523  007EF2  00                 	db	0
  1524  007EF3                     STR_48:
  1525                           
  1526                           ; BSR set to: 0
  1527  007EF3  74                 	db	116	;'t'
  1528  007EF4  72                 	db	114	;'r'
  1529  007EF5  61                 	db	97	;'a'
  1530  007EF6  6E                 	db	110	;'n'
  1531  007EF7  73                 	db	115	;'s'
  1532  007EF8  6D                 	db	109	;'m'
  1533  007EF9  69                 	db	105	;'i'
  1534  007EFA  73                 	db	115	;'s'
  1535  007EFB  69                 	db	105	;'i'
  1536  007EFC  6F                 	db	111	;'o'
  1537  007EFD  6E                 	db	110	;'n'
  1538  007EFE  3D                 	db	61	;'='
  1539  007EFF  31                 	db	49	;'1'
  1540  007F00  00                 	db	0
  1541  007F01                     STR_51:
  1542                           
  1543                           ; BSR set to: 0
  1544  007F01  74                 	db	116	;'t'
  1545  007F02  72                 	db	114	;'r'
  1546  007F03  61                 	db	97	;'a'
  1547  007F04  6E                 	db	110	;'n'
  1548  007F05  73                 	db	115	;'s'
  1549  007F06  6D                 	db	109	;'m'
  1550  007F07  69                 	db	105	;'i'
  1551  007F08  73                 	db	115	;'s'
  1552  007F09  69                 	db	105	;'i'
  1553  007F0A  6F                 	db	111	;'o'
  1554  007F0B  6E                 	db	110	;'n'
  1555  007F0C  3D                 	db	61	;'='
  1556  007F0D  32                 	db	50	;'2'
  1557  007F0E  00                 	db	0
  1558  007F0F                     STR_54:
  1559                           
  1560                           ; BSR set to: 0
  1561  007F0F  74                 	db	116	;'t'
  1562  007F10  72                 	db	114	;'r'
  1563  007F11  61                 	db	97	;'a'
  1564  007F12  6E                 	db	110	;'n'
  1565  007F13  73                 	db	115	;'s'
  1566  007F14  6D                 	db	109	;'m'
  1567  007F15  69                 	db	105	;'i'
  1568  007F16  73                 	db	115	;'s'
  1569  007F17  69                 	db	105	;'i'
  1570  007F18  6F                 	db	111	;'o'
  1571  007F19  6E                 	db	110	;'n'
  1572  007F1A  3D                 	db	61	;'='
  1573  007F1B  33                 	db	51	;'3'
  1574  007F1C  00                 	db	0
  1575  007F1D                     STR_57:
  1576                           
  1577                           ; BSR set to: 0
  1578  007F1D  74                 	db	116	;'t'
  1579  007F1E  72                 	db	114	;'r'
  1580  007F1F  61                 	db	97	;'a'
  1581  007F20  6E                 	db	110	;'n'
  1582  007F21  73                 	db	115	;'s'
  1583  007F22  6D                 	db	109	;'m'
  1584  007F23  69                 	db	105	;'i'
  1585  007F24  73                 	db	115	;'s'
  1586  007F25  69                 	db	105	;'i'
  1587  007F26  6F                 	db	111	;'o'
  1588  007F27  6E                 	db	110	;'n'
  1589  007F28  3D                 	db	61	;'='
  1590  007F29  34                 	db	52	;'4'
  1591  007F2A  00                 	db	0
  1592  007F2B                     STR_60:
  1593                           
  1594                           ; BSR set to: 0
  1595  007F2B  74                 	db	116	;'t'
  1596  007F2C  72                 	db	114	;'r'
  1597  007F2D  61                 	db	97	;'a'
  1598  007F2E  6E                 	db	110	;'n'
  1599  007F2F  73                 	db	115	;'s'
  1600  007F30  6D                 	db	109	;'m'
  1601  007F31  69                 	db	105	;'i'
  1602  007F32  73                 	db	115	;'s'
  1603  007F33  69                 	db	105	;'i'
  1604  007F34  6F                 	db	111	;'o'
  1605  007F35  6E                 	db	110	;'n'
  1606  007F36  3D                 	db	61	;'='
  1607  007F37  35                 	db	53	;'5'
  1608  007F38  00                 	db	0
  1609  007F39                     STR_63:
  1610                           
  1611                           ; BSR set to: 0
  1612  007F39  74                 	db	116	;'t'
  1613  007F3A  72                 	db	114	;'r'
  1614  007F3B  61                 	db	97	;'a'
  1615  007F3C  6E                 	db	110	;'n'
  1616  007F3D  73                 	db	115	;'s'
  1617  007F3E  6D                 	db	109	;'m'
  1618  007F3F  69                 	db	105	;'i'
  1619  007F40  73                 	db	115	;'s'
  1620  007F41  69                 	db	105	;'i'
  1621  007F42  6F                 	db	111	;'o'
  1622  007F43  6E                 	db	110	;'n'
  1623  007F44  3D                 	db	61	;'='
  1624  007F45  36                 	db	54	;'6'
  1625  007F46  00                 	db	0
  1626  007F47                     STR_66:
  1627                           
  1628                           ; BSR set to: 0
  1629  007F47  74                 	db	116	;'t'
  1630  007F48  72                 	db	114	;'r'
  1631  007F49  61                 	db	97	;'a'
  1632  007F4A  6E                 	db	110	;'n'
  1633  007F4B  73                 	db	115	;'s'
  1634  007F4C  6D                 	db	109	;'m'
  1635  007F4D  69                 	db	105	;'i'
  1636  007F4E  73                 	db	115	;'s'
  1637  007F4F  69                 	db	105	;'i'
  1638  007F50  6F                 	db	111	;'o'
  1639  007F51  6E                 	db	110	;'n'
  1640  007F52  3D                 	db	61	;'='
  1641  007F53  37                 	db	55	;'7'
  1642  007F54  00                 	db	0
  1643  007F55                     STR_69:
  1644                           
  1645                           ; BSR set to: 0
  1646  007F55  74                 	db	116	;'t'
  1647  007F56  72                 	db	114	;'r'
  1648  007F57  61                 	db	97	;'a'
  1649  007F58  6E                 	db	110	;'n'
  1650  007F59  73                 	db	115	;'s'
  1651  007F5A  6D                 	db	109	;'m'
  1652  007F5B  69                 	db	105	;'i'
  1653  007F5C  73                 	db	115	;'s'
  1654  007F5D  69                 	db	105	;'i'
  1655  007F5E  6F                 	db	111	;'o'
  1656  007F5F  6E                 	db	110	;'n'
  1657  007F60  3D                 	db	61	;'='
  1658  007F61  38                 	db	56	;'8'
  1659  007F62  00                 	db	0
  1660  007F63                     STR_72:
  1661                           
  1662                           ; BSR set to: 0
  1663  007F63  74                 	db	116	;'t'
  1664  007F64  72                 	db	114	;'r'
  1665  007F65  61                 	db	97	;'a'
  1666  007F66  6E                 	db	110	;'n'
  1667  007F67  73                 	db	115	;'s'
  1668  007F68  6D                 	db	109	;'m'
  1669  007F69  69                 	db	105	;'i'
  1670  007F6A  73                 	db	115	;'s'
  1671  007F6B  69                 	db	105	;'i'
  1672  007F6C  6F                 	db	111	;'o'
  1673  007F6D  6E                 	db	110	;'n'
  1674  007F6E  3D                 	db	61	;'='
  1675  007F6F  39                 	db	57	;'9'
  1676  007F70  00                 	db	0
  1677  007F71                     STR_76:
  1678                           
  1679                           ; BSR set to: 0
  1680  007F71  6D                 	db	109	;'m'
  1681  007F72  61                 	db	97	;'a'
  1682  007F73  63                 	db	99	;'c'
  1683  007F74  20                 	db	32
  1684  007F75  72                 	db	114	;'r'
  1685  007F76  65                 	db	101	;'e'
  1686  007F77  73                 	db	115	;'s'
  1687  007F78  75                 	db	117	;'u'
  1688  007F79  6D                 	db	109	;'m'
  1689  007F7A  65                 	db	101	;'e'
  1690  007F7B  0D                 	db	13
  1691  007F7C  0A                 	db	10
  1692  007F7D  00                 	db	0
  1693  007F7E                     STR_46:
  1694                           
  1695                           ; BSR set to: 0
  1696  007F7E  6D                 	db	109	;'m'
  1697  007F7F  61                 	db	97	;'a'
  1698  007F80  63                 	db	99	;'c'
  1699  007F81  20                 	db	32
  1700  007F82  70                 	db	112	;'p'
  1701  007F83  61                 	db	97	;'a'
  1702  007F84  75                 	db	117	;'u'
  1703  007F85  73                 	db	115	;'s'
  1704  007F86  65                 	db	101	;'e'
  1705  007F87  0D                 	db	13
  1706  007F88  0A                 	db	10
  1707  007F89  00                 	db	0
  1708  007F8A                     STR_21:
  1709                           
  1710                           ; BSR set to: 0
  1711  007F8A  74                 	db	116	;'t'
  1712  007F8B  61                 	db	97	;'a'
  1713  007F8C  73                 	db	115	;'s'
  1714  007F8D  61                 	db	97	;'a'
  1715  007F8E  20                 	db	32
  1716  007F8F  64                 	db	100	;'d'
  1717  007F90  65                 	db	101	;'e'
  1718  007F91  20                 	db	32
  1719  007F92  63                 	db	99	;'c'
  1720  007F93  6F                 	db	111	;'o'
  1721  007F94  64                 	db	100	;'d'
  1722  007F95  00                 	db	0
  1723  007F96                     STR_15:
  1724                           
  1725                           ; BSR set to: 0
  1726  007F96  66                 	db	102	;'f'
  1727  007F97  72                 	db	114	;'r'
  1728  007F98  65                 	db	101	;'e'
  1729  007F99  63                 	db	99	;'c'
  1730  007F9A  75                 	db	117	;'u'
  1731  007F9B  65                 	db	101	;'e'
  1732  007F9C  6E                 	db	110	;'n'
  1733  007F9D  63                 	db	99	;'c'
  1734  007F9E  69                 	db	105	;'i'
  1735  007F9F  61                 	db	97	;'a'
  1736  007FA0  00                 	db	0
  1737  007FA1                     
  1738                           ; BSR set to: 0
  1739  007FA1  4C                 	db	76	;'L'
  1740  007FA2  45                 	db	69	;'E'
  1741  007FA3  44                 	db	68	;'D'
  1742  007FA4  20                 	db	32
  1743  007FA5  54                 	db	84	;'T'
  1744  007FA6  65                 	db	101	;'e'
  1745  007FA7  73                 	db	115	;'s'
  1746  007FA8  74                 	db	116	;'t'
  1747  007FA9  3A                 	db	58	;':'
  1748  007FAA  00                 	db	0
  1749  007FAB                     STR_45:
  1750                           
  1751                           ; BSR set to: 0
  1752  007FAB  4D                 	db	77	;'M'
  1753  007FAC  41                 	db	65	;'A'
  1754  007FAD  43                 	db	67	;'C'
  1755  007FAE  20                 	db	32
  1756  007FAF  50                 	db	80	;'P'
  1757  007FB0  55                 	db	85	;'U'
  1758  007FB1  41                 	db	65	;'A'
  1759  007FB2  53                 	db	83	;'S'
  1760  007FB3  45                 	db	69	;'E'
  1761  007FB4  00                 	db	0
  1762  007FB5                     STR_27:
  1763                           
  1764                           ; BSR set to: 0
  1765  007FB5  69                 	db	105	;'i'
  1766  007FB6  6E                 	db	110	;'n'
  1767  007FB7  76                 	db	118	;'v'
  1768  007FB8  65                 	db	101	;'e'
  1769  007FB9  72                 	db	114	;'r'
  1770  007FBA  73                 	db	115	;'s'
  1771  007FBB  69                 	db	105	;'i'
  1772  007FBC  6F                 	db	111	;'o'
  1773  007FBD  6E                 	db	110	;'n'
  1774  007FBE  00                 	db	0
  1775  007FBF                     
  1776                           ; BSR set to: 0
  1777  007FBF  45                 	db	69	;'E'
  1778  007FC0  6E                 	db	110	;'n'
  1779  007FC1  63                 	db	99	;'c'
  1780  007FC2  65                 	db	101	;'e'
  1781  007FC3  6E                 	db	110	;'n'
  1782  007FC4  64                 	db	100	;'d'
  1783  007FC5  69                 	db	105	;'i'
  1784  007FC6  64                 	db	100	;'d'
  1785  007FC7  6F                 	db	111	;'o'
  1786  007FC8  00                 	db	0
  1787  007FC9                     STR_9:
  1788                           
  1789                           ; BSR set to: 0
  1790  007FC9  70                 	db	112	;'p'
  1791  007FCA  6F                 	db	111	;'o'
  1792  007FCB  74                 	db	116	;'t'
  1793  007FCC  65                 	db	101	;'e'
  1794  007FCD  6E                 	db	110	;'n'
  1795  007FCE  63                 	db	99	;'c'
  1796  007FCF  69                 	db	105	;'i'
  1797  007FD0  61                 	db	97	;'a'
  1798  007FD1  00                 	db	0
  1799  007FD2                     STR_24:
  1800                           
  1801                           ; BSR set to: 0
  1802  007FD2  6D                 	db	109	;'m'
  1803  007FD3  6F                 	db	111	;'o'
  1804  007FD4  64                 	db	100	;'d'
  1805  007FD5  20                 	db	32
  1806  007FD6  6C                 	db	108	;'l'
  1807  007FD7  6F                 	db	111	;'o'
  1808  007FD8  72                 	db	114	;'r'
  1809  007FD9  61                 	db	97	;'a'
  1810  007FDA  00                 	db	0
  1811  007FDB                     
  1812                           ; BSR set to: 0
  1813  007FDB  41                 	db	65	;'A'
  1814  007FDC  70                 	db	112	;'p'
  1815  007FDD  61                 	db	97	;'a'
  1816  007FDE  67                 	db	103	;'g'
  1817  007FDF  61                 	db	97	;'a'
  1818  007FE0  64                 	db	100	;'d'
  1819  007FE1  6F                 	db	111	;'o'
  1820  007FE2  00                 	db	0
  1821  007FE3                     STR_75:
  1822                           
  1823                           ; BSR set to: 0
  1824  007FE3  74                 	db	116	;'t'
  1825  007FE4  65                 	db	101	;'e'
  1826  007FE5  72                 	db	114	;'r'
  1827  007FE6  6D                 	db	109	;'m'
  1828  007FE7  69                 	db	105	;'i'
  1829  007FE8  6E                 	db	110	;'n'
  1830  007FE9  6F                 	db	111	;'o'
  1831  007FEA  00                 	db	0
  1832  007FEB                     STR_78:
  1833                           
  1834                           ; BSR set to: 0
  1835  007FEB  63                 	db	99	;'c'
  1836  007FEC  6F                 	db	111	;'o'
  1837  007FED  6E                 	db	110	;'n'
  1838  007FEE  74                 	db	116	;'t'
  1839  007FEF  3A                 	db	58	;':'
  1840  007FF0  20                 	db	32
  1841  007FF1  00                 	db	0
  1842  007FF2                     STR_36:
  1843                           
  1844                           ; BSR set to: 0
  1845  007FF2  73                 	db	115	;'s'
  1846  007FF3  79                 	db	121	;'y'
  1847  007FF4  6E                 	db	110	;'n'
  1848  007FF5  63                 	db	99	;'c'
  1849  007FF6  00                 	db	0
  1850  007FF7                     STR_30:
  1851                           
  1852                           ; BSR set to: 0
  1853  007FF7  77                 	db	119	;'w'
  1854  007FF8  64                 	db	100	;'d'
  1855  007FF9  74                 	db	116	;'t'
  1856  007FFA  00                 	db	0
  1857  007FFB                     STR_6:
  1858                           
  1859                           ; BSR set to: 0
  1860  007FFB  25                 	db	37
  1861  007FFC  63                 	db	99	;'c'
  1862  007FFD  00                 	db	0
  1863  007FFE  00                 	db	0	; dummy byte at the end
  1864  0000                     
  1865                           ; #config settings
  1866                           
  1867                           	psect	cinit
  1868  0066E8                     __pcinit:
  1869                           	callstack 0
  1870  0066E8                     start_initialization:
  1871                           	callstack 0
  1872  0066E8                     __initialization:
  1873                           	callstack 0
  1874                           
  1875                           ; Initialize objects allocated to BANK0 (3 bytes)
  1876                           ; load TBLPTR registers with __pidataBANK0
  1877  0066E8  0E0D               	movlw	low __pidataBANK0
  1878  0066EA  6EF6               	movwf	tblptrl,c
  1879  0066EC  0E65               	movlw	high __pidataBANK0
  1880  0066EE  6EF7               	movwf	tblptrh,c
  1881  0066F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1882  0066F2  6EF8               	movwf	tblptru,c
  1883  0066F4  0009               	tblrd		*+	;fetch initializer
  1884  0066F6  CFF5 F091          	movff	tablat,__pdataBANK0
  1885  0066FA  0009               	tblrd		*+	;fetch initializer
  1886  0066FC  CFF5 F092          	movff	tablat,__pdataBANK0+1
  1887  006700  0009               	tblrd		*+	;fetch initializer
  1888  006702  CFF5 F093          	movff	tablat,__pdataBANK0+2
  1889                           
  1890                           ; Clear objects allocated to BANK0 (49 bytes)
  1891  006706  EE00  F060         	lfsr	0,__pbssBANK0
  1892  00670A  0E31               	movlw	49
  1893  00670C                     clear_0:
  1894  00670C  6AEE               	clrf	postinc0,c
  1895  00670E  06E8               	decf	wreg,f,c
  1896  006710  E1FD               	bnz	clear_0
  1897  006712                     end_of_initialization:
  1898                           	callstack 0
  1899  006712                     __end_of__initialization:
  1900                           	callstack 0
  1901  006712  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1902  006714  6EF8               	movwf	tblptru,c
  1903  006716  0100               	movlb	0
  1904  006718  EF97  F037         	goto	_main	;jump to C main() function
  1905                           
  1906                           	psect	bssBANK0
  1907  000060                     __pbssBANK0:
  1908                           	callstack 0
  1909  000060                     	ds	32
  1910  000080                     _nout:
  1911                           	callstack 0
  1912  000080                     	ds	2
  1913  000082                     _width:
  1914                           	callstack 0
  1915  000082                     	ds	2
  1916  000084                     _prec:
  1917                           	callstack 0
  1918  000084                     	ds	2
  1919  000086                     _flags:
  1920                           	callstack 0
  1921  000086                     	ds	2
  1922  000088                     _log:
  1923                           	callstack 0
  1924  000088                     	ds	2
  1925  00008A                     _EUSART1_ErrorHandler:
  1926                           	callstack 0
  1927  00008A                     	ds	2
  1928  00008C                     _EUSART1_OverrunErrorHandler:
  1929                           	callstack 0
  1930  00008C                     	ds	2
  1931  00008E                     _EUSART1_FramingErrorHandler:
  1932                           	callstack 0
  1933  00008E                     	ds	2
  1934  000090                     _eusart1RxLastError:
  1935                           	callstack 0
  1936  000090                     	ds	1
  1937                           
  1938                           	psect	dataBANK0
  1939  000091                     __pdataBANK0:
  1940                           	callstack 0
  1941  000091                     _selectedFont:
  1942                           	callstack 0
  1943  000091                     	ds	2
  1944  000093                     _Contrast_level:
  1945                           	callstack 0
  1946  000093                     	ds	1
  1947                           
  1948                           	psect	cstackCOMRAM
  1949  000001                     __pcstackCOMRAM:
  1950                           	callstack 0
  1951  000001                     ?_get_Data:
  1952                           	callstack 0
  1953  000001                     ?___awdiv:
  1954                           	callstack 0
  1955  000001                     ?___awmod:
  1956                           	callstack 0
  1957  000001                     EUSART1_Write@txData:
  1958                           	callstack 0
  1959  000001                     oled_writeCommand@command:
  1960                           	callstack 0
  1961  000001                     oled_writeData@data:
  1962                           	callstack 0
  1963  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1964                           	callstack 0
  1965  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1966                           	callstack 0
  1967  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1968                           	callstack 0
  1969  000001                     oled_setFont@font:
  1970                           	callstack 0
  1971  000001                     ___awdiv@dividend:
  1972                           	callstack 0
  1973  000001                     ___awmod@dividend:
  1974                           	callstack 0
  1975  000001                     fputc@c:
  1976                           	callstack 0
  1977                           
  1978                           ; 2 bytes @ 0x0
  1979  000001                     	ds	1
  1980  000002                     Set_Page_Address@address:
  1981                           	callstack 0
  1982  000002                     Set_Column_Address@address:
  1983                           	callstack 0
  1984  000002                     oled_setDisplay@displayType:
  1985                           	callstack 0
  1986  000002                     oled_setContrastControlRegister@mod:
  1987                           	callstack 0
  1988  000002                     oled_initialDispayLine@line:
  1989                           	callstack 0
  1990  000002                     oled_powerControl@vol:
  1991                           	callstack 0
  1992  000002                     oled_regulorResistorSelect@r:
  1993                           	callstack 0
  1994  000002                     sendCommand@texto:
  1995                           	callstack 0
  1996                           
  1997                           ; 2 bytes @ 0x1
  1998  000002                     	ds	1
  1999  000003                     ??_get_Data:
  2000  000003                     ??_oled_devInit:
  2001  000003                     oled_putChar@station_dot:
  2002                           	callstack 0
  2003  000003                     ___awdiv@divisor:
  2004                           	callstack 0
  2005  000003                     ___awmod@divisor:
  2006                           	callstack 0
  2007  000003                     fputc@fp:
  2008                           	callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x2
  2011  000003                     	ds	1
  2012  000004                     oled_putChar@start_page:
  2013                           	callstack 0
  2014                           
  2015                           ; 1 bytes @ 0x3
  2016  000004                     	ds	1
  2017  000005                     ??_fputc:
  2018  000005                     ??_oled_putChar:
  2019  000005                     ___awdiv@counter:
  2020                           	callstack 0
  2021  000005                     ___awmod@counter:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x4
  2025  000005                     	ds	1
  2026  000006                     ___awdiv@sign:
  2027                           	callstack 0
  2028  000006                     ___awmod@sign:
  2029                           	callstack 0
  2030                           
  2031                           ; 1 bytes @ 0x5
  2032  000006                     	ds	1
  2033  000007                     ___awdiv@quotient:
  2034                           	callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x6
  2037  000007                     	ds	3
  2038  00000A                     ?_ctoa:
  2039                           	callstack 0
  2040  00000A                     ctoa@fp:
  2041                           	callstack 0
  2042                           
  2043                           ; 2 bytes @ 0x9
  2044  00000A                     	ds	1
  2045  00000B                     oled_putChar@k:
  2046                           	callstack 0
  2047                           
  2048                           ; 1 bytes @ 0xA
  2049  00000B                     	ds	1
  2050  00000C                     oled_putChar@index:
  2051                           	callstack 0
  2052  00000C                     ctoa@c:
  2053                           	callstack 0
  2054                           
  2055                           ; 1 bytes @ 0xB
  2056  00000C                     	ds	1
  2057  00000D                     ??_ctoa:
  2058  00000D                     oled_clearRow@page:
  2059                           	callstack 0
  2060  00000D                     oled_putString@string:
  2061                           	callstack 0
  2062                           
  2063                           ; 2 bytes @ 0xC
  2064  00000D                     	ds	1
  2065  00000E                     oled_clearRow@index:
  2066                           	callstack 0
  2067  00000E                     ctoa@l:
  2068                           	callstack 0
  2069                           
  2070                           ; 2 bytes @ 0xD
  2071  00000E                     	ds	1
  2072  00000F                     oled_putString@station_dot:
  2073                           	callstack 0
  2074                           
  2075                           ; 1 bytes @ 0xE
  2076  00000F                     	ds	1
  2077  000010                     oled_putString@start_page:
  2078                           	callstack 0
  2079  000010                     ctoa@w:
  2080                           	callstack 0
  2081                           
  2082                           ; 2 bytes @ 0xF
  2083  000010                     	ds	1
  2084  000011                     oled_putString@index:
  2085                           	callstack 0
  2086                           
  2087                           ; 1 bytes @ 0x10
  2088  000011                     	ds	1
  2089  000012                     ?_vfpfcnvrt:
  2090                           	callstack 0
  2091  000012                     oled_putUint8@station_dot:
  2092                           	callstack 0
  2093  000012                     vfpfcnvrt@fp:
  2094                           	callstack 0
  2095                           
  2096                           ; 2 bytes @ 0x11
  2097  000012                     	ds	1
  2098  000013                     oled_putUint8@start_page:
  2099                           	callstack 0
  2100                           
  2101                           ; 1 bytes @ 0x12
  2102  000013                     	ds	1
  2103  000014                     oled_putUint8@number:
  2104                           	callstack 0
  2105  000014                     vfpfcnvrt@fmt:
  2106                           	callstack 0
  2107                           
  2108                           ; 2 bytes @ 0x13
  2109  000014                     	ds	1
  2110  000015                     oled_putUint8@numData:
  2111                           	callstack 0
  2112                           
  2113                           ; 6 bytes @ 0x14
  2114  000015                     	ds	1
  2115  000016                     vfpfcnvrt@ap:
  2116                           	callstack 0
  2117                           
  2118                           ; 2 bytes @ 0x15
  2119  000016                     	ds	2
  2120  000018                     ??_vfpfcnvrt:
  2121                           
  2122                           ; 1 bytes @ 0x17
  2123  000018                     	ds	2
  2124  00001A                     vfpfcnvrt@c:
  2125                           	callstack 0
  2126                           
  2127                           ; 1 bytes @ 0x19
  2128  00001A                     	ds	1
  2129  00001B                     ?_vfprintf:
  2130                           	callstack 0
  2131  00001B                     vfprintf@fp:
  2132                           	callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x1A
  2135  00001B                     	ds	2
  2136  00001D                     vfprintf@fmt:
  2137                           	callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x1C
  2140  00001D                     	ds	2
  2141  00001F                     vfprintf@ap:
  2142                           	callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x1E
  2145  00001F                     	ds	2
  2146  000021                     vfprintf@cfmt:
  2147                           	callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x20
  2150  000021                     	ds	2
  2151  000023                     ?_sprintf:
  2152                           	callstack 0
  2153  000023                     sprintf@s:
  2154                           	callstack 0
  2155                           
  2156                           ; 2 bytes @ 0x22
  2157  000023                     	ds	2
  2158  000025                     sprintf@fmt:
  2159                           	callstack 0
  2160                           
  2161                           ; 2 bytes @ 0x24
  2162  000025                     	ds	4
  2163  000029                     sprintf@ap:
  2164                           	callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x28
  2167  000029                     	ds	2
  2168  00002B                     sprintf@f:
  2169                           	callstack 0
  2170                           
  2171                           ; 6 bytes @ 0x2A
  2172  00002B                     	ds	6
  2173  000031                     ??_init_mod_LoRa:
  2174                           
  2175                           ; 1 bytes @ 0x30
  2176  000031                     	ds	2
  2177  000033                     init_mod_LoRa@READ:
  2178                           	callstack 0
  2179                           
  2180                           ; 10 bytes @ 0x32
  2181  000033                     	ds	10
  2182  00003D                     ??_main:
  2183                           
  2184                           ; 1 bytes @ 0x3C
  2185  00003D                     	ds	2
  2186  00003F                     main@read:
  2187                           	callstack 0
  2188                           
  2189                           ; 32 bytes @ 0x3E
  2190  00003F                     	ds	32
  2191  00005F                     main@cont:
  2192                           	callstack 0
  2193                           
  2194                           ; 1 bytes @ 0x5E
  2195  00005F                     	ds	1
  2196                           
  2197 ;;
  2198 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2199 ;;
  2200 ;; *************** function _main *****************
  2201 ;; Defined at:
  2202 ;;		line 200 in file "main.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  read           32   62[COMRAM] unsigned char [32]
  2207 ;;  cont            1   94[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0
  2218 ;;      Locals:        33       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2220 ;;      Totals:        35       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:       35 bytes
  2222 ;; Hardware stack levels required when called: 7
  2223 ;; This function calls:
  2224 ;;		_EUSART1_Read
  2225 ;;		_SYSTEM_Initialize
  2226 ;;		_init_mod_LoRa
  2227 ;;		_init_port
  2228 ;;		_oled_clear
  2229 ;;		_oled_init
  2230 ;;		_oled_putString
  2231 ;;		_oled_putUint8
  2232 ;;		_sendCommand
  2233 ;;		_sprintf
  2234 ;; This function is called by:
  2235 ;;		Startup code after reset
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text0
  2240  006F2E                     __ptext0:
  2241                           	callstack 0
  2242  006F2E                     _main:
  2243                           	callstack 24
  2244  006F2E                     
  2245                           ;main.c: 202:     SYSTEM_Initialize();
  2246  006F2E  ECA9  F032         	call	_SYSTEM_Initialize	;wreg free
  2247  006F32                     
  2248                           ;main.c: 203:     init_port();
  2249  006F32  ECB0  F032         	call	_init_port	;wreg free
  2250  006F36                     
  2251                           ;main.c: 204:     _delay((unsigned long)((200)*(48000000/4000.0)));
  2252  006F36  0E0D               	movlw	13
  2253  006F38  6E3E               	movwf	(??_main+1)^0,c
  2254  006F3A  0E2D               	movlw	45
  2255  006F3C  6E3D               	movwf	??_main^0,c
  2256  006F3E  0ED8               	movlw	216
  2257  006F40                     u1097:
  2258  006F40  2EE8               	decfsz	wreg,f,c
  2259  006F42  D7FE               	bra	u1097
  2260  006F44  2E3D               	decfsz	??_main^0,f,c
  2261  006F46  D7FC               	bra	u1097
  2262  006F48  2E3E               	decfsz	(??_main+1)^0,f,c
  2263  006F4A  D7FA               	bra	u1097
  2264  006F4C                     
  2265                           ;main.c: 205:     oled_init();
  2266  006F4C  EC45  F033         	call	_oled_init	;wreg free
  2267  006F50                     
  2268                           ;main.c: 206:     init_mod_LoRa();
  2269  006F50  EC1B  F03A         	call	_init_mod_LoRa	;wreg free
  2270  006F54                     
  2271                           ;main.c: 207:     oled_clear();
  2272  006F54  ECF1  F032         	call	_oled_clear	;wreg free
  2273  006F58                     
  2274                           ;main.c: 208:     char read[32];;main.c: 209:     uint8_t cont = 0;
  2275  006F58  0E00               	movlw	0
  2276  006F5A  6E5F               	movwf	main@cont^0,c
  2277  006F5C                     l2674:
  2278                           
  2279                           ;main.c: 211:     { if(cont <1)
  2280  006F5C  505F               	movf	main@cont^0,w,c
  2281  006F5E  A4D8               	btfss	status,2,c
  2282  006F60  EFB4  F037         	goto	u961
  2283  006F64  EFB6  F037         	goto	u960
  2284  006F68                     u961:
  2285  006F68  EFE2  F037         	goto	l2684
  2286  006F6C                     u960:
  2287  006F6C                     
  2288                           ;main.c: 212:         {;main.c: 213:             oled_putString("MAC PUASE",0,0);
  2289  006F6C  0EAB               	movlw	low STR_45
  2290  006F6E  6E0D               	movwf	oled_putString@string^0,c
  2291  006F70  0E7F               	movlw	high STR_45
  2292  006F72  6E0E               	movwf	(oled_putString@string+1)^0,c
  2293  006F74  0E00               	movlw	0
  2294  006F76  6E0F               	movwf	oled_putString@station_dot^0,c
  2295  006F78  0E00               	movlw	0
  2296  006F7A  6E10               	movwf	oled_putString@start_page^0,c
  2297  006F7C  ECD5  F034         	call	_oled_putString	;wreg free
  2298  006F80                     
  2299                           ;main.c: 214:             sendCommand("mac pause\r\n");
  2300  006F80  0E7E               	movlw	low STR_46
  2301  006F82  6E02               	movwf	sendCommand@texto^0,c
  2302  006F84  0E7F               	movlw	high STR_46
  2303  006F86  6E03               	movwf	(sendCommand@texto+1)^0,c
  2304  006F88  ECA9  F033         	call	_sendCommand	;wreg free
  2305  006F8C                     
  2306                           ;main.c: 215:             sprintf(read,"%c",EUSART1_Read());
  2307  006F8C  0E3F               	movlw	low main@read
  2308  006F8E  6E23               	movwf	sprintf@s^0,c
  2309  006F90  0E00               	movlw	high main@read
  2310  006F92  6E24               	movwf	(sprintf@s+1)^0,c
  2311  006F94  0EFB               	movlw	low STR_6
  2312  006F96  6E25               	movwf	sprintf@fmt^0,c
  2313  006F98  0E7F               	movlw	high STR_6
  2314  006F9A  6E26               	movwf	(sprintf@fmt+1)^0,c
  2315  006F9C  EC30  F033         	call	_EUSART1_Read	;wreg free
  2316  006FA0  6E3D               	movwf	??_main^0,c
  2317  006FA2  503D               	movf	??_main^0,w,c
  2318  006FA4  6E27               	movwf	(?_sprintf+4)^0,c
  2319  006FA6  6A28               	clrf	(?_sprintf+5)^0,c
  2320  006FA8  EC03  F034         	call	_sprintf	;wreg free
  2321  006FAC                     
  2322                           ;main.c: 216:             oled_putString(read,0,1);
  2323  006FAC  0E3F               	movlw	low main@read
  2324  006FAE  6E0D               	movwf	oled_putString@string^0,c
  2325  006FB0  0E00               	movlw	high main@read
  2326  006FB2  6E0E               	movwf	(oled_putString@string+1)^0,c
  2327  006FB4  0E00               	movlw	0
  2328  006FB6  6E0F               	movwf	oled_putString@station_dot^0,c
  2329  006FB8  0E01               	movlw	1
  2330  006FBA  6E10               	movwf	oled_putString@start_page^0,c
  2331  006FBC  ECD5  F034         	call	_oled_putString	;wreg free
  2332                           
  2333                           ;main.c: 218:          }
  2334  006FC0  EFFA  F039         	goto	l2806
  2335  006FC4                     l2684:
  2336  006FC4  045F               	decf	main@cont^0,w,c
  2337  006FC6  A4D8               	btfss	status,2,c
  2338  006FC8  EFE8  F037         	goto	u971
  2339  006FCC  EFEA  F037         	goto	u970
  2340  006FD0                     u971:
  2341  006FD0  EF16  F038         	goto	l2694
  2342  006FD4                     u970:
  2343  006FD4                     
  2344                           ;main.c: 220:         {;main.c: 221:             oled_putString("transmision=1",0,2);
  2345  006FD4  0EF3               	movlw	low STR_48
  2346  006FD6  6E0D               	movwf	oled_putString@string^0,c
  2347  006FD8  0E7E               	movlw	high STR_48
  2348  006FDA  6E0E               	movwf	(oled_putString@string+1)^0,c
  2349  006FDC  0E00               	movlw	0
  2350  006FDE  6E0F               	movwf	oled_putString@station_dot^0,c
  2351  006FE0  0E02               	movlw	2
  2352  006FE2  6E10               	movwf	oled_putString@start_page^0,c
  2353  006FE4  ECD5  F034         	call	_oled_putString	;wreg free
  2354  006FE8                     
  2355                           ;main.c: 222:             sendCommand("radio tx 10\r\n");
  2356  006FE8  0E75               	movlw	low STR_49
  2357  006FEA  6E02               	movwf	sendCommand@texto^0,c
  2358  006FEC  0E7E               	movlw	high STR_49
  2359  006FEE  6E03               	movwf	(sendCommand@texto+1)^0,c
  2360  006FF0  ECA9  F033         	call	_sendCommand	;wreg free
  2361  006FF4                     
  2362                           ;main.c: 223:             sprintf(read,"%c",EUSART1_Read());
  2363  006FF4  0E3F               	movlw	low main@read
  2364  006FF6  6E23               	movwf	sprintf@s^0,c
  2365  006FF8  0E00               	movlw	high main@read
  2366  006FFA  6E24               	movwf	(sprintf@s+1)^0,c
  2367  006FFC  0EFB               	movlw	low STR_6
  2368  006FFE  6E25               	movwf	sprintf@fmt^0,c
  2369  007000  0E7F               	movlw	high STR_6
  2370  007002  6E26               	movwf	(sprintf@fmt+1)^0,c
  2371  007004  EC30  F033         	call	_EUSART1_Read	;wreg free
  2372  007008  6E3D               	movwf	??_main^0,c
  2373  00700A  503D               	movf	??_main^0,w,c
  2374  00700C  6E27               	movwf	(?_sprintf+4)^0,c
  2375  00700E  6A28               	clrf	(?_sprintf+5)^0,c
  2376  007010  EC03  F034         	call	_sprintf	;wreg free
  2377  007014                     l2692:
  2378                           
  2379                           ;main.c: 224:             oled_putString(read,0,3);
  2380  007014  0E3F               	movlw	low main@read
  2381  007016  6E0D               	movwf	oled_putString@string^0,c
  2382  007018  0E00               	movlw	high main@read
  2383  00701A  6E0E               	movwf	(oled_putString@string+1)^0,c
  2384  00701C  0E00               	movlw	0
  2385  00701E  6E0F               	movwf	oled_putString@station_dot^0,c
  2386  007020  0E03               	movlw	3
  2387  007022  6E10               	movwf	oled_putString@start_page^0,c
  2388  007024  ECD5  F034         	call	_oled_putString	;wreg free
  2389                           
  2390                           ;main.c: 225:         }
  2391  007028  EFFA  F039         	goto	l2806
  2392  00702C                     l2694:
  2393  00702C  0E02               	movlw	2
  2394  00702E  185F               	xorwf	main@cont^0,w,c
  2395  007030  A4D8               	btfss	status,2,c
  2396  007032  EF1D  F038         	goto	u981
  2397  007036  EF1F  F038         	goto	u980
  2398  00703A                     u981:
  2399  00703A  EF41  F038         	goto	l2704
  2400  00703E                     u980:
  2401  00703E                     
  2402                           ;main.c: 227:         {;main.c: 228:             oled_putString("transmision=2",0,2);
  2403  00703E  0E01               	movlw	low STR_51
  2404  007040  6E0D               	movwf	oled_putString@string^0,c
  2405  007042  0E7F               	movlw	high STR_51
  2406  007044  6E0E               	movwf	(oled_putString@string+1)^0,c
  2407  007046  0E00               	movlw	0
  2408  007048  6E0F               	movwf	oled_putString@station_dot^0,c
  2409  00704A  0E02               	movlw	2
  2410  00704C  6E10               	movwf	oled_putString@start_page^0,c
  2411  00704E  ECD5  F034         	call	_oled_putString	;wreg free
  2412  007052                     
  2413                           ;main.c: 229:             sendCommand("radio tx 20\r\n");
  2414  007052  0E83               	movlw	low STR_52
  2415  007054  6E02               	movwf	sendCommand@texto^0,c
  2416  007056  0E7E               	movlw	high STR_52
  2417  007058  6E03               	movwf	(sendCommand@texto+1)^0,c
  2418  00705A  ECA9  F033         	call	_sendCommand	;wreg free
  2419  00705E                     
  2420                           ;main.c: 230:             sprintf(read,"%c",EUSART1_Read());
  2421  00705E  0E3F               	movlw	low main@read
  2422  007060  6E23               	movwf	sprintf@s^0,c
  2423  007062  0E00               	movlw	high main@read
  2424  007064  6E24               	movwf	(sprintf@s+1)^0,c
  2425  007066  0EFB               	movlw	low STR_6
  2426  007068  6E25               	movwf	sprintf@fmt^0,c
  2427  00706A  0E7F               	movlw	high STR_6
  2428  00706C  6E26               	movwf	(sprintf@fmt+1)^0,c
  2429  00706E  EC30  F033         	call	_EUSART1_Read	;wreg free
  2430  007072  6E3D               	movwf	??_main^0,c
  2431  007074  503D               	movf	??_main^0,w,c
  2432  007076  6E27               	movwf	(?_sprintf+4)^0,c
  2433  007078  6A28               	clrf	(?_sprintf+5)^0,c
  2434  00707A  EC03  F034         	call	_sprintf	;wreg free
  2435  00707E  EF0A  F038         	goto	l2692
  2436  007082                     l2704:
  2437  007082  0E03               	movlw	3
  2438  007084  185F               	xorwf	main@cont^0,w,c
  2439  007086  A4D8               	btfss	status,2,c
  2440  007088  EF48  F038         	goto	u991
  2441  00708C  EF4A  F038         	goto	u990
  2442  007090                     u991:
  2443  007090  EF6C  F038         	goto	l2714
  2444  007094                     u990:
  2445  007094                     
  2446                           ;main.c: 234:         {;main.c: 235:             oled_putString("transmision=3",0,2);
  2447  007094  0E0F               	movlw	low STR_54
  2448  007096  6E0D               	movwf	oled_putString@string^0,c
  2449  007098  0E7F               	movlw	high STR_54
  2450  00709A  6E0E               	movwf	(oled_putString@string+1)^0,c
  2451  00709C  0E00               	movlw	0
  2452  00709E  6E0F               	movwf	oled_putString@station_dot^0,c
  2453  0070A0  0E02               	movlw	2
  2454  0070A2  6E10               	movwf	oled_putString@start_page^0,c
  2455  0070A4  ECD5  F034         	call	_oled_putString	;wreg free
  2456  0070A8                     
  2457                           ;main.c: 236:             sendCommand("radio tx 30\r\n");
  2458  0070A8  0E91               	movlw	low STR_55
  2459  0070AA  6E02               	movwf	sendCommand@texto^0,c
  2460  0070AC  0E7E               	movlw	high STR_55
  2461  0070AE  6E03               	movwf	(sendCommand@texto+1)^0,c
  2462  0070B0  ECA9  F033         	call	_sendCommand	;wreg free
  2463  0070B4                     
  2464                           ;main.c: 237:             sprintf(read,"%c",EUSART1_Read());
  2465  0070B4  0E3F               	movlw	low main@read
  2466  0070B6  6E23               	movwf	sprintf@s^0,c
  2467  0070B8  0E00               	movlw	high main@read
  2468  0070BA  6E24               	movwf	(sprintf@s+1)^0,c
  2469  0070BC  0EFB               	movlw	low STR_6
  2470  0070BE  6E25               	movwf	sprintf@fmt^0,c
  2471  0070C0  0E7F               	movlw	high STR_6
  2472  0070C2  6E26               	movwf	(sprintf@fmt+1)^0,c
  2473  0070C4  EC30  F033         	call	_EUSART1_Read	;wreg free
  2474  0070C8  6E3D               	movwf	??_main^0,c
  2475  0070CA  503D               	movf	??_main^0,w,c
  2476  0070CC  6E27               	movwf	(?_sprintf+4)^0,c
  2477  0070CE  6A28               	clrf	(?_sprintf+5)^0,c
  2478  0070D0  EC03  F034         	call	_sprintf	;wreg free
  2479  0070D4  EF0A  F038         	goto	l2692
  2480  0070D8                     l2714:
  2481  0070D8  0E04               	movlw	4
  2482  0070DA  185F               	xorwf	main@cont^0,w,c
  2483  0070DC  A4D8               	btfss	status,2,c
  2484  0070DE  EF73  F038         	goto	u1001
  2485  0070E2  EF75  F038         	goto	u1000
  2486  0070E6                     u1001:
  2487  0070E6  EF97  F038         	goto	l2724
  2488  0070EA                     u1000:
  2489  0070EA                     
  2490                           ;main.c: 241:         {;main.c: 242:             oled_putString("transmision=4",0,2);
  2491  0070EA  0E1D               	movlw	low STR_57
  2492  0070EC  6E0D               	movwf	oled_putString@string^0,c
  2493  0070EE  0E7F               	movlw	high STR_57
  2494  0070F0  6E0E               	movwf	(oled_putString@string+1)^0,c
  2495  0070F2  0E00               	movlw	0
  2496  0070F4  6E0F               	movwf	oled_putString@station_dot^0,c
  2497  0070F6  0E02               	movlw	2
  2498  0070F8  6E10               	movwf	oled_putString@start_page^0,c
  2499  0070FA  ECD5  F034         	call	_oled_putString	;wreg free
  2500  0070FE                     
  2501                           ;main.c: 243:             sendCommand("radio tx 40\r\n");
  2502  0070FE  0E9F               	movlw	low STR_58
  2503  007100  6E02               	movwf	sendCommand@texto^0,c
  2504  007102  0E7E               	movlw	high STR_58
  2505  007104  6E03               	movwf	(sendCommand@texto+1)^0,c
  2506  007106  ECA9  F033         	call	_sendCommand	;wreg free
  2507  00710A                     
  2508                           ;main.c: 244:             sprintf(read,"%c",EUSART1_Read());
  2509  00710A  0E3F               	movlw	low main@read
  2510  00710C  6E23               	movwf	sprintf@s^0,c
  2511  00710E  0E00               	movlw	high main@read
  2512  007110  6E24               	movwf	(sprintf@s+1)^0,c
  2513  007112  0EFB               	movlw	low STR_6
  2514  007114  6E25               	movwf	sprintf@fmt^0,c
  2515  007116  0E7F               	movlw	high STR_6
  2516  007118  6E26               	movwf	(sprintf@fmt+1)^0,c
  2517  00711A  EC30  F033         	call	_EUSART1_Read	;wreg free
  2518  00711E  6E3D               	movwf	??_main^0,c
  2519  007120  503D               	movf	??_main^0,w,c
  2520  007122  6E27               	movwf	(?_sprintf+4)^0,c
  2521  007124  6A28               	clrf	(?_sprintf+5)^0,c
  2522  007126  EC03  F034         	call	_sprintf	;wreg free
  2523  00712A  EF0A  F038         	goto	l2692
  2524  00712E                     l2724:
  2525  00712E  0E05               	movlw	5
  2526  007130  185F               	xorwf	main@cont^0,w,c
  2527  007132  A4D8               	btfss	status,2,c
  2528  007134  EF9E  F038         	goto	u1011
  2529  007138  EFA0  F038         	goto	u1010
  2530  00713C                     u1011:
  2531  00713C  EFC2  F038         	goto	l2734
  2532  007140                     u1010:
  2533  007140                     
  2534                           ;main.c: 248:         {;main.c: 249:             oled_putString("transmision=5",0,2);
  2535  007140  0E2B               	movlw	low STR_60
  2536  007142  6E0D               	movwf	oled_putString@string^0,c
  2537  007144  0E7F               	movlw	high STR_60
  2538  007146  6E0E               	movwf	(oled_putString@string+1)^0,c
  2539  007148  0E00               	movlw	0
  2540  00714A  6E0F               	movwf	oled_putString@station_dot^0,c
  2541  00714C  0E02               	movlw	2
  2542  00714E  6E10               	movwf	oled_putString@start_page^0,c
  2543  007150  ECD5  F034         	call	_oled_putString	;wreg free
  2544  007154                     
  2545                           ;main.c: 250:             sendCommand("radio tx 50\r\n");
  2546  007154  0EAD               	movlw	low STR_61
  2547  007156  6E02               	movwf	sendCommand@texto^0,c
  2548  007158  0E7E               	movlw	high STR_61
  2549  00715A  6E03               	movwf	(sendCommand@texto+1)^0,c
  2550  00715C  ECA9  F033         	call	_sendCommand	;wreg free
  2551  007160                     
  2552                           ;main.c: 251:             sprintf(read,"%c",EUSART1_Read());
  2553  007160  0E3F               	movlw	low main@read
  2554  007162  6E23               	movwf	sprintf@s^0,c
  2555  007164  0E00               	movlw	high main@read
  2556  007166  6E24               	movwf	(sprintf@s+1)^0,c
  2557  007168  0EFB               	movlw	low STR_6
  2558  00716A  6E25               	movwf	sprintf@fmt^0,c
  2559  00716C  0E7F               	movlw	high STR_6
  2560  00716E  6E26               	movwf	(sprintf@fmt+1)^0,c
  2561  007170  EC30  F033         	call	_EUSART1_Read	;wreg free
  2562  007174  6E3D               	movwf	??_main^0,c
  2563  007176  503D               	movf	??_main^0,w,c
  2564  007178  6E27               	movwf	(?_sprintf+4)^0,c
  2565  00717A  6A28               	clrf	(?_sprintf+5)^0,c
  2566  00717C  EC03  F034         	call	_sprintf	;wreg free
  2567  007180  EF0A  F038         	goto	l2692
  2568  007184                     l2734:
  2569  007184  0E06               	movlw	6
  2570  007186  185F               	xorwf	main@cont^0,w,c
  2571  007188  A4D8               	btfss	status,2,c
  2572  00718A  EFC9  F038         	goto	u1021
  2573  00718E  EFCB  F038         	goto	u1020
  2574  007192                     u1021:
  2575  007192  EFED  F038         	goto	l2744
  2576  007196                     u1020:
  2577  007196                     
  2578                           ;main.c: 255:         {;main.c: 256:             oled_putString("transmision=6",0,2);
  2579  007196  0E39               	movlw	low STR_63
  2580  007198  6E0D               	movwf	oled_putString@string^0,c
  2581  00719A  0E7F               	movlw	high STR_63
  2582  00719C  6E0E               	movwf	(oled_putString@string+1)^0,c
  2583  00719E  0E00               	movlw	0
  2584  0071A0  6E0F               	movwf	oled_putString@station_dot^0,c
  2585  0071A2  0E02               	movlw	2
  2586  0071A4  6E10               	movwf	oled_putString@start_page^0,c
  2587  0071A6  ECD5  F034         	call	_oled_putString	;wreg free
  2588  0071AA                     
  2589                           ;main.c: 257:             sendCommand("radio tx 60\r\n");
  2590  0071AA  0EBB               	movlw	low STR_64
  2591  0071AC  6E02               	movwf	sendCommand@texto^0,c
  2592  0071AE  0E7E               	movlw	high STR_64
  2593  0071B0  6E03               	movwf	(sendCommand@texto+1)^0,c
  2594  0071B2  ECA9  F033         	call	_sendCommand	;wreg free
  2595  0071B6                     
  2596                           ;main.c: 258:             sprintf(read,"%c",EUSART1_Read());
  2597  0071B6  0E3F               	movlw	low main@read
  2598  0071B8  6E23               	movwf	sprintf@s^0,c
  2599  0071BA  0E00               	movlw	high main@read
  2600  0071BC  6E24               	movwf	(sprintf@s+1)^0,c
  2601  0071BE  0EFB               	movlw	low STR_6
  2602  0071C0  6E25               	movwf	sprintf@fmt^0,c
  2603  0071C2  0E7F               	movlw	high STR_6
  2604  0071C4  6E26               	movwf	(sprintf@fmt+1)^0,c
  2605  0071C6  EC30  F033         	call	_EUSART1_Read	;wreg free
  2606  0071CA  6E3D               	movwf	??_main^0,c
  2607  0071CC  503D               	movf	??_main^0,w,c
  2608  0071CE  6E27               	movwf	(?_sprintf+4)^0,c
  2609  0071D0  6A28               	clrf	(?_sprintf+5)^0,c
  2610  0071D2  EC03  F034         	call	_sprintf	;wreg free
  2611  0071D6  EF0A  F038         	goto	l2692
  2612  0071DA                     l2744:
  2613  0071DA  0E07               	movlw	7
  2614  0071DC  185F               	xorwf	main@cont^0,w,c
  2615  0071DE  A4D8               	btfss	status,2,c
  2616  0071E0  EFF4  F038         	goto	u1031
  2617  0071E4  EFF6  F038         	goto	u1030
  2618  0071E8                     u1031:
  2619  0071E8  EF18  F039         	goto	l2754
  2620  0071EC                     u1030:
  2621  0071EC                     
  2622                           ;main.c: 262:         {;main.c: 263:             oled_putString("transmision=7",0,2);
  2623  0071EC  0E47               	movlw	low STR_66
  2624  0071EE  6E0D               	movwf	oled_putString@string^0,c
  2625  0071F0  0E7F               	movlw	high STR_66
  2626  0071F2  6E0E               	movwf	(oled_putString@string+1)^0,c
  2627  0071F4  0E00               	movlw	0
  2628  0071F6  6E0F               	movwf	oled_putString@station_dot^0,c
  2629  0071F8  0E02               	movlw	2
  2630  0071FA  6E10               	movwf	oled_putString@start_page^0,c
  2631  0071FC  ECD5  F034         	call	_oled_putString	;wreg free
  2632  007200                     
  2633                           ;main.c: 264:             sendCommand("radio tx 70\r\n");
  2634  007200  0EC9               	movlw	low STR_67
  2635  007202  6E02               	movwf	sendCommand@texto^0,c
  2636  007204  0E7E               	movlw	high STR_67
  2637  007206  6E03               	movwf	(sendCommand@texto+1)^0,c
  2638  007208  ECA9  F033         	call	_sendCommand	;wreg free
  2639  00720C                     
  2640                           ;main.c: 265:             sprintf(read,"%c",EUSART1_Read());
  2641  00720C  0E3F               	movlw	low main@read
  2642  00720E  6E23               	movwf	sprintf@s^0,c
  2643  007210  0E00               	movlw	high main@read
  2644  007212  6E24               	movwf	(sprintf@s+1)^0,c
  2645  007214  0EFB               	movlw	low STR_6
  2646  007216  6E25               	movwf	sprintf@fmt^0,c
  2647  007218  0E7F               	movlw	high STR_6
  2648  00721A  6E26               	movwf	(sprintf@fmt+1)^0,c
  2649  00721C  EC30  F033         	call	_EUSART1_Read	;wreg free
  2650  007220  6E3D               	movwf	??_main^0,c
  2651  007222  503D               	movf	??_main^0,w,c
  2652  007224  6E27               	movwf	(?_sprintf+4)^0,c
  2653  007226  6A28               	clrf	(?_sprintf+5)^0,c
  2654  007228  EC03  F034         	call	_sprintf	;wreg free
  2655  00722C  EF0A  F038         	goto	l2692
  2656  007230                     l2754:
  2657  007230  0E08               	movlw	8
  2658  007232  185F               	xorwf	main@cont^0,w,c
  2659  007234  A4D8               	btfss	status,2,c
  2660  007236  EF1F  F039         	goto	u1041
  2661  00723A  EF21  F039         	goto	u1040
  2662  00723E                     u1041:
  2663  00723E  EF43  F039         	goto	l2764
  2664  007242                     u1040:
  2665  007242                     
  2666                           ;main.c: 269:         {;main.c: 270:             oled_putString("transmision=8",0,2);
  2667  007242  0E55               	movlw	low STR_69
  2668  007244  6E0D               	movwf	oled_putString@string^0,c
  2669  007246  0E7F               	movlw	high STR_69
  2670  007248  6E0E               	movwf	(oled_putString@string+1)^0,c
  2671  00724A  0E00               	movlw	0
  2672  00724C  6E0F               	movwf	oled_putString@station_dot^0,c
  2673  00724E  0E02               	movlw	2
  2674  007250  6E10               	movwf	oled_putString@start_page^0,c
  2675  007252  ECD5  F034         	call	_oled_putString	;wreg free
  2676  007256                     
  2677                           ;main.c: 271:             sendCommand("radio tx 80\r\n");
  2678  007256  0ED7               	movlw	low STR_70
  2679  007258  6E02               	movwf	sendCommand@texto^0,c
  2680  00725A  0E7E               	movlw	high STR_70
  2681  00725C  6E03               	movwf	(sendCommand@texto+1)^0,c
  2682  00725E  ECA9  F033         	call	_sendCommand	;wreg free
  2683  007262                     
  2684                           ;main.c: 272:             sprintf(read,"%c",EUSART1_Read());
  2685  007262  0E3F               	movlw	low main@read
  2686  007264  6E23               	movwf	sprintf@s^0,c
  2687  007266  0E00               	movlw	high main@read
  2688  007268  6E24               	movwf	(sprintf@s+1)^0,c
  2689  00726A  0EFB               	movlw	low STR_6
  2690  00726C  6E25               	movwf	sprintf@fmt^0,c
  2691  00726E  0E7F               	movlw	high STR_6
  2692  007270  6E26               	movwf	(sprintf@fmt+1)^0,c
  2693  007272  EC30  F033         	call	_EUSART1_Read	;wreg free
  2694  007276  6E3D               	movwf	??_main^0,c
  2695  007278  503D               	movf	??_main^0,w,c
  2696  00727A  6E27               	movwf	(?_sprintf+4)^0,c
  2697  00727C  6A28               	clrf	(?_sprintf+5)^0,c
  2698  00727E  EC03  F034         	call	_sprintf	;wreg free
  2699  007282  EF0A  F038         	goto	l2692
  2700  007286                     l2764:
  2701  007286  0E09               	movlw	9
  2702  007288  185F               	xorwf	main@cont^0,w,c
  2703  00728A  A4D8               	btfss	status,2,c
  2704  00728C  EF4A  F039         	goto	u1051
  2705  007290  EF4C  F039         	goto	u1050
  2706  007294                     u1051:
  2707  007294  EF6E  F039         	goto	l2774
  2708  007298                     u1050:
  2709  007298                     
  2710                           ;main.c: 276:         {;main.c: 277:             oled_putString("transmision=9",0,2);
  2711  007298  0E63               	movlw	low STR_72
  2712  00729A  6E0D               	movwf	oled_putString@string^0,c
  2713  00729C  0E7F               	movlw	high STR_72
  2714  00729E  6E0E               	movwf	(oled_putString@string+1)^0,c
  2715  0072A0  0E00               	movlw	0
  2716  0072A2  6E0F               	movwf	oled_putString@station_dot^0,c
  2717  0072A4  0E02               	movlw	2
  2718  0072A6  6E10               	movwf	oled_putString@start_page^0,c
  2719  0072A8  ECD5  F034         	call	_oled_putString	;wreg free
  2720  0072AC                     
  2721                           ;main.c: 278:             sendCommand("radio tx 90\r\n");
  2722  0072AC  0EE5               	movlw	low STR_73
  2723  0072AE  6E02               	movwf	sendCommand@texto^0,c
  2724  0072B0  0E7E               	movlw	high STR_73
  2725  0072B2  6E03               	movwf	(sendCommand@texto+1)^0,c
  2726  0072B4  ECA9  F033         	call	_sendCommand	;wreg free
  2727  0072B8                     
  2728                           ;main.c: 279:             sprintf(read,"%c",EUSART1_Read());
  2729  0072B8  0E3F               	movlw	low main@read
  2730  0072BA  6E23               	movwf	sprintf@s^0,c
  2731  0072BC  0E00               	movlw	high main@read
  2732  0072BE  6E24               	movwf	(sprintf@s+1)^0,c
  2733  0072C0  0EFB               	movlw	low STR_6
  2734  0072C2  6E25               	movwf	sprintf@fmt^0,c
  2735  0072C4  0E7F               	movlw	high STR_6
  2736  0072C6  6E26               	movwf	(sprintf@fmt+1)^0,c
  2737  0072C8  EC30  F033         	call	_EUSART1_Read	;wreg free
  2738  0072CC  6E3D               	movwf	??_main^0,c
  2739  0072CE  503D               	movf	??_main^0,w,c
  2740  0072D0  6E27               	movwf	(?_sprintf+4)^0,c
  2741  0072D2  6A28               	clrf	(?_sprintf+5)^0,c
  2742  0072D4  EC03  F034         	call	_sprintf	;wreg free
  2743  0072D8  EF0A  F038         	goto	l2692
  2744  0072DC                     l2774:
  2745  0072DC  0E0A               	movlw	10
  2746  0072DE  185F               	xorwf	main@cont^0,w,c
  2747  0072E0  A4D8               	btfss	status,2,c
  2748  0072E2  EF75  F039         	goto	u1061
  2749  0072E6  EF77  F039         	goto	u1060
  2750  0072EA                     u1061:
  2751  0072EA  EFFA  F039         	goto	l237
  2752  0072EE                     u1060:
  2753  0072EE                     
  2754                           ;main.c: 283:         {;main.c: 284:             oled_clear();
  2755  0072EE  ECF1  F032         	call	_oled_clear	;wreg free
  2756  0072F2                     
  2757                           ;main.c: 285:             oled_putString("termino",0,0);
  2758  0072F2  0EE3               	movlw	low STR_75
  2759  0072F4  6E0D               	movwf	oled_putString@string^0,c
  2760  0072F6  0E7F               	movlw	high STR_75
  2761  0072F8  6E0E               	movwf	(oled_putString@string+1)^0,c
  2762  0072FA  0E00               	movlw	0
  2763  0072FC  6E0F               	movwf	oled_putString@station_dot^0,c
  2764  0072FE  0E00               	movlw	0
  2765  007300  6E10               	movwf	oled_putString@start_page^0,c
  2766  007302  ECD5  F034         	call	_oled_putString	;wreg free
  2767  007306                     
  2768                           ;main.c: 286:             sendCommand("mac resume\r\n");
  2769  007306  0E71               	movlw	low STR_76
  2770  007308  6E02               	movwf	sendCommand@texto^0,c
  2771  00730A  0E7F               	movlw	high STR_76
  2772  00730C  6E03               	movwf	(sendCommand@texto+1)^0,c
  2773  00730E  ECA9  F033         	call	_sendCommand	;wreg free
  2774  007312                     
  2775                           ;main.c: 287:             sprintf(read,"%c",EUSART1_Read());
  2776  007312  0E3F               	movlw	low main@read
  2777  007314  6E23               	movwf	sprintf@s^0,c
  2778  007316  0E00               	movlw	high main@read
  2779  007318  6E24               	movwf	(sprintf@s+1)^0,c
  2780  00731A  0EFB               	movlw	low STR_6
  2781  00731C  6E25               	movwf	sprintf@fmt^0,c
  2782  00731E  0E7F               	movlw	high STR_6
  2783  007320  6E26               	movwf	(sprintf@fmt+1)^0,c
  2784  007322  EC30  F033         	call	_EUSART1_Read	;wreg free
  2785  007326  6E3D               	movwf	??_main^0,c
  2786  007328  503D               	movf	??_main^0,w,c
  2787  00732A  6E27               	movwf	(?_sprintf+4)^0,c
  2788  00732C  6A28               	clrf	(?_sprintf+5)^0,c
  2789  00732E  EC03  F034         	call	_sprintf	;wreg free
  2790  007332                     
  2791                           ;main.c: 288:             oled_putString(read,0,3);
  2792  007332  0E3F               	movlw	low main@read
  2793  007334  6E0D               	movwf	oled_putString@string^0,c
  2794  007336  0E00               	movlw	high main@read
  2795  007338  6E0E               	movwf	(oled_putString@string+1)^0,c
  2796  00733A  0E00               	movlw	0
  2797  00733C  6E0F               	movwf	oled_putString@station_dot^0,c
  2798  00733E  0E03               	movlw	3
  2799  007340  6E10               	movwf	oled_putString@start_page^0,c
  2800  007342  ECD5  F034         	call	_oled_putString	;wreg free
  2801  007346                     
  2802                           ;main.c: 289:             oled_putUint8(cont,9,1);
  2803  007346  0E09               	movlw	9
  2804  007348  6E12               	movwf	oled_putUint8@station_dot^0,c
  2805  00734A  0E01               	movlw	1
  2806  00734C  6E13               	movwf	oled_putUint8@start_page^0,c
  2807  00734E  505F               	movf	main@cont^0,w,c
  2808  007350  EC15  F035         	call	_oled_putUint8
  2809  007354                     
  2810                           ;main.c: 290:             oled_putString("cont: ",4,1);
  2811  007354  0EEB               	movlw	low STR_78
  2812  007356  6E0D               	movwf	oled_putString@string^0,c
  2813  007358  0E7F               	movlw	high STR_78
  2814  00735A  6E0E               	movwf	(oled_putString@string+1)^0,c
  2815  00735C  0E04               	movlw	4
  2816  00735E  6E0F               	movwf	oled_putString@station_dot^0,c
  2817  007360  0E01               	movlw	1
  2818  007362  6E10               	movwf	oled_putString@start_page^0,c
  2819  007364  ECD5  F034         	call	_oled_putString	;wreg free
  2820  007368                     
  2821                           ;main.c: 291:             cont = 0;
  2822  007368  0E00               	movlw	0
  2823  00736A  6E5F               	movwf	main@cont^0,c
  2824  00736C                     
  2825                           ;main.c: 292:             _delay((unsigned long)((200)*(48000000/4000.0)));
  2826  00736C  0E0D               	movlw	13
  2827  00736E  6E3E               	movwf	(??_main+1)^0,c
  2828  007370  0E2D               	movlw	45
  2829  007372  6E3D               	movwf	??_main^0,c
  2830  007374  0ED8               	movlw	216
  2831  007376                     u1107:
  2832  007376  2EE8               	decfsz	wreg,f,c
  2833  007378  D7FE               	bra	u1107
  2834  00737A  2E3D               	decfsz	??_main^0,f,c
  2835  00737C  D7FC               	bra	u1107
  2836  00737E  2E3E               	decfsz	(??_main+1)^0,f,c
  2837  007380  D7FA               	bra	u1107
  2838  007382                     
  2839                           ;main.c: 294:             oled_clear();
  2840  007382  ECF1  F032         	call	_oled_clear	;wreg free
  2841  007386                     
  2842                           ;main.c: 295:             oled_putString("MAC PUASE",0,0);
  2843  007386  0EAB               	movlw	low STR_45
  2844  007388  6E0D               	movwf	oled_putString@string^0,c
  2845  00738A  0E7F               	movlw	high STR_45
  2846  00738C  6E0E               	movwf	(oled_putString@string+1)^0,c
  2847  00738E  0E00               	movlw	0
  2848  007390  6E0F               	movwf	oled_putString@station_dot^0,c
  2849  007392  0E00               	movlw	0
  2850  007394  6E10               	movwf	oled_putString@start_page^0,c
  2851  007396  ECD5  F034         	call	_oled_putString	;wreg free
  2852  00739A                     
  2853                           ;main.c: 296:             sendCommand("mac pause\r\n");
  2854  00739A  0E7E               	movlw	low STR_46
  2855  00739C  6E02               	movwf	sendCommand@texto^0,c
  2856  00739E  0E7F               	movlw	high STR_46
  2857  0073A0  6E03               	movwf	(sendCommand@texto+1)^0,c
  2858  0073A2  ECA9  F033         	call	_sendCommand	;wreg free
  2859  0073A6                     
  2860                           ;main.c: 297:             sprintf(read,"%c",EUSART1_Read());
  2861  0073A6  0E3F               	movlw	low main@read
  2862  0073A8  6E23               	movwf	sprintf@s^0,c
  2863  0073AA  0E00               	movlw	high main@read
  2864  0073AC  6E24               	movwf	(sprintf@s+1)^0,c
  2865  0073AE  0EFB               	movlw	low STR_6
  2866  0073B0  6E25               	movwf	sprintf@fmt^0,c
  2867  0073B2  0E7F               	movlw	high STR_6
  2868  0073B4  6E26               	movwf	(sprintf@fmt+1)^0,c
  2869  0073B6  EC30  F033         	call	_EUSART1_Read	;wreg free
  2870  0073BA  6E3D               	movwf	??_main^0,c
  2871  0073BC  503D               	movf	??_main^0,w,c
  2872  0073BE  6E27               	movwf	(?_sprintf+4)^0,c
  2873  0073C0  6A28               	clrf	(?_sprintf+5)^0,c
  2874  0073C2  EC03  F034         	call	_sprintf	;wreg free
  2875  0073C6                     
  2876                           ;main.c: 298:             oled_putString(read,0,1);
  2877  0073C6  0E3F               	movlw	low main@read
  2878  0073C8  6E0D               	movwf	oled_putString@string^0,c
  2879  0073CA  0E00               	movlw	high main@read
  2880  0073CC  6E0E               	movwf	(oled_putString@string+1)^0,c
  2881  0073CE  0E00               	movlw	0
  2882  0073D0  6E0F               	movwf	oled_putString@station_dot^0,c
  2883  0073D2  0E01               	movlw	1
  2884  0073D4  6E10               	movwf	oled_putString@start_page^0,c
  2885  0073D6  ECD5  F034         	call	_oled_putString	;wreg free
  2886  0073DA                     
  2887                           ;main.c: 299:             _delay((unsigned long)((200)*(48000000/4000.0)));
  2888  0073DA  0E0D               	movlw	13
  2889  0073DC  6E3E               	movwf	(??_main+1)^0,c
  2890  0073DE  0E2D               	movlw	45
  2891  0073E0  6E3D               	movwf	??_main^0,c
  2892  0073E2  0ED8               	movlw	216
  2893  0073E4                     u1117:
  2894  0073E4  2EE8               	decfsz	wreg,f,c
  2895  0073E6  D7FE               	bra	u1117
  2896  0073E8  2E3D               	decfsz	??_main^0,f,c
  2897  0073EA  D7FC               	bra	u1117
  2898  0073EC  2E3E               	decfsz	(??_main+1)^0,f,c
  2899  0073EE  D7FA               	bra	u1117
  2900  0073F0  EFFA  F039         	goto	l2806
  2901  0073F4                     l237:
  2902  0073F4                     l2806:
  2903                           
  2904                           ;main.c: 301:         oled_putUint8(cont,9,1);
  2905  0073F4  0E09               	movlw	9
  2906  0073F6  6E12               	movwf	oled_putUint8@station_dot^0,c
  2907  0073F8  0E01               	movlw	1
  2908  0073FA  6E13               	movwf	oled_putUint8@start_page^0,c
  2909  0073FC  505F               	movf	main@cont^0,w,c
  2910  0073FE  EC15  F035         	call	_oled_putUint8
  2911  007402                     
  2912                           ;main.c: 302:         oled_putString("cont: ",4,1);
  2913  007402  0EEB               	movlw	low STR_78
  2914  007404  6E0D               	movwf	oled_putString@string^0,c
  2915  007406  0E7F               	movlw	high STR_78
  2916  007408  6E0E               	movwf	(oled_putString@string+1)^0,c
  2917  00740A  0E04               	movlw	4
  2918  00740C  6E0F               	movwf	oled_putString@station_dot^0,c
  2919  00740E  0E01               	movlw	1
  2920  007410  6E10               	movwf	oled_putString@start_page^0,c
  2921  007412  ECD5  F034         	call	_oled_putString	;wreg free
  2922  007416                     
  2923                           ;main.c: 303:         cont++;
  2924  007416  2A5F               	incf	main@cont^0,f,c
  2925  007418                     
  2926                           ;main.c: 304:         _delay((unsigned long)((3000)*(48000000/4000.0)));
  2927  007418  0EB7               	movlw	183
  2928  00741A  6E3E               	movwf	(??_main+1)^0,c
  2929  00741C  0EA1               	movlw	161
  2930  00741E  6E3D               	movwf	??_main^0,c
  2931  007420  0EC4               	movlw	196
  2932  007422                     u1127:
  2933  007422  2EE8               	decfsz	wreg,f,c
  2934  007424  D7FE               	bra	u1127
  2935  007426  2E3D               	decfsz	??_main^0,f,c
  2936  007428  D7FC               	bra	u1127
  2937  00742A  2E3E               	decfsz	(??_main+1)^0,f,c
  2938  00742C  D7FA               	bra	u1127
  2939  00742E  EFAE  F037         	goto	l2674
  2940  007432  EF00  F000         	goto	start
  2941  007436                     __end_of_main:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _oled_putUint8 *****************
  2945 ;; Defined at:
  2946 ;;		line 264 in file "SSD1306oLED.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  number          1    wreg     unsigned char 
  2949 ;;  station_dot     1   17[COMRAM] unsigned char 
  2950 ;;  start_page      1   18[COMRAM] unsigned char 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  number          1   19[COMRAM] unsigned char 
  2953 ;;  numData         6   20[COMRAM] struct .
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         2       0       0       0       0       0       0       0       0
  2964 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        9 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 4
  2970 ;; This function calls:
  2971 ;;		___awdiv
  2972 ;;		___awmod
  2973 ;;		_oled_putString
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text1
  2980  006A2A                     __ptext1:
  2981                           	callstack 0
  2982  006A2A                     _oled_putUint8:
  2983                           	callstack 26
  2984                           
  2985                           ;incstack = 0
  2986                           ;oled_putUint8@number stored from wreg
  2987  006A2A  6E14               	movwf	oled_putUint8@number^0,c
  2988  006A2C                     
  2989                           ;SSD1306oLED.c: 264: void oled_putUint8(uint8_t number, uint8_t station_dot, uint8_t sta
      +                          rt_page);SSD1306oLED.c: 265: {;SSD1306oLED.c: 266:     display_data_t numData;;SSD1306oL
      +                          ED.c: 267:     numData.d2 = '0' + (number % 10);
  2990  006A2C  C014  F001         	movff	oled_putUint8@number,___awmod@dividend
  2991  006A30  6A02               	clrf	(___awmod@dividend+1)^0,c
  2992  006A32  0E00               	movlw	0
  2993  006A34  6E04               	movwf	(___awmod@divisor+1)^0,c
  2994  006A36  0E0A               	movlw	10
  2995  006A38  6E03               	movwf	___awmod@divisor^0,c
  2996  006A3A  EC5D  F035         	call	___awmod	;wreg free
  2997  006A3E  5001               	movf	?___awmod^0,w,c
  2998  006A40  0F30               	addlw	48
  2999  006A42  6E17               	movwf	(oled_putUint8@numData+2)^0,c
  3000                           
  3001                           ;SSD1306oLED.c: 268:     number /= 10;
  3002  006A44  C014  F001         	movff	oled_putUint8@number,___awdiv@dividend
  3003  006A48  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3004  006A4A  0E00               	movlw	0
  3005  006A4C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3006  006A4E  0E0A               	movlw	10
  3007  006A50  6E03               	movwf	___awdiv@divisor^0,c
  3008  006A52  ECB5  F035         	call	___awdiv	;wreg free
  3009  006A56  5001               	movf	?___awdiv^0,w,c
  3010  006A58  6E14               	movwf	oled_putUint8@number^0,c
  3011                           
  3012                           ;SSD1306oLED.c: 269:     numData.d1 = '0' + (number % 10);
  3013  006A5A  C014  F001         	movff	oled_putUint8@number,___awmod@dividend
  3014  006A5E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3015  006A60  0E00               	movlw	0
  3016  006A62  6E04               	movwf	(___awmod@divisor+1)^0,c
  3017  006A64  0E0A               	movlw	10
  3018  006A66  6E03               	movwf	___awmod@divisor^0,c
  3019  006A68  EC5D  F035         	call	___awmod	;wreg free
  3020  006A6C  5001               	movf	?___awmod^0,w,c
  3021  006A6E  0F30               	addlw	48
  3022  006A70  6E16               	movwf	(oled_putUint8@numData+1)^0,c
  3023                           
  3024                           ;SSD1306oLED.c: 270:     number /= 10;
  3025  006A72  C014  F001         	movff	oled_putUint8@number,___awdiv@dividend
  3026  006A76  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3027  006A78  0E00               	movlw	0
  3028  006A7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3029  006A7C  0E0A               	movlw	10
  3030  006A7E  6E03               	movwf	___awdiv@divisor^0,c
  3031  006A80  ECB5  F035         	call	___awdiv	;wreg free
  3032  006A84  5001               	movf	?___awdiv^0,w,c
  3033  006A86  6E14               	movwf	oled_putUint8@number^0,c
  3034                           
  3035                           ;SSD1306oLED.c: 271:     numData.d0 = '0' + (number % 10);
  3036  006A88  C014  F001         	movff	oled_putUint8@number,___awmod@dividend
  3037  006A8C  6A02               	clrf	(___awmod@dividend+1)^0,c
  3038  006A8E  0E00               	movlw	0
  3039  006A90  6E04               	movwf	(___awmod@divisor+1)^0,c
  3040  006A92  0E0A               	movlw	10
  3041  006A94  6E03               	movwf	___awmod@divisor^0,c
  3042  006A96  EC5D  F035         	call	___awmod	;wreg free
  3043  006A9A  5001               	movf	?___awmod^0,w,c
  3044  006A9C  0F30               	addlw	48
  3045  006A9E  6E15               	movwf	oled_putUint8@numData^0,c
  3046  006AA0                     
  3047                           ;SSD1306oLED.c: 273:     numData.b[3]=0;
  3048  006AA0  0E00               	movlw	0
  3049  006AA2  6E18               	movwf	(oled_putUint8@numData+3)^0,c
  3050  006AA4                     
  3051                           ;SSD1306oLED.c: 275:     oled_putString(numData.b,station_dot,start_page);
  3052  006AA4  0E15               	movlw	low oled_putUint8@numData
  3053  006AA6  6E0D               	movwf	oled_putString@string^0,c
  3054  006AA8  0E00               	movlw	high oled_putUint8@numData
  3055  006AAA  6E0E               	movwf	(oled_putString@string+1)^0,c
  3056  006AAC  C012  F00F         	movff	oled_putUint8@station_dot,oled_putString@station_dot
  3057  006AB0  C013  F010         	movff	oled_putUint8@start_page,oled_putString@start_page
  3058  006AB4  ECD5  F034         	call	_oled_putString	;wreg free
  3059  006AB8  0012               	return		;funcret
  3060  006ABA                     __end_of_oled_putUint8:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function ___awmod *****************
  3064 ;; Defined at:
  3065 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  dividend        2    0[COMRAM] int 
  3068 ;;  divisor         2    2[COMRAM] int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  sign            1    5[COMRAM] unsigned char 
  3071 ;;  counter         1    4[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    0[COMRAM] int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         4       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        6 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_oled_putUint8
  3091 ;;		_oled_putint8
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text2
  3096  006ABA                     __ptext2:
  3097                           	callstack 0
  3098  006ABA                     ___awmod:
  3099                           	callstack 29
  3100  006ABA  0E00               	movlw	0
  3101  006ABC  6E06               	movwf	___awmod@sign^0,c
  3102  006ABE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3103  006AC0  EF66  F035         	goto	u870
  3104  006AC4  EF64  F035         	goto	u871
  3105  006AC8                     u871:
  3106  006AC8  EF6C  F035         	goto	l2350
  3107  006ACC                     u870:
  3108  006ACC  6C01               	negf	___awmod@dividend^0,c
  3109  006ACE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3110  006AD0  B0D8               	btfsc	status,0,c
  3111  006AD2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3112  006AD4  0E01               	movlw	1
  3113  006AD6  6E06               	movwf	___awmod@sign^0,c
  3114  006AD8                     l2350:
  3115  006AD8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3116  006ADA  EF73  F035         	goto	u880
  3117  006ADE  EF71  F035         	goto	u881
  3118  006AE2                     u881:
  3119  006AE2  EF77  F035         	goto	l2354
  3120  006AE6                     u880:
  3121  006AE6  6C03               	negf	___awmod@divisor^0,c
  3122  006AE8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3123  006AEA  B0D8               	btfsc	status,0,c
  3124  006AEC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3125  006AEE                     l2354:
  3126  006AEE  5003               	movf	___awmod@divisor^0,w,c
  3127  006AF0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3128  006AF2  B4D8               	btfsc	status,2,c
  3129  006AF4  EF7E  F035         	goto	u891
  3130  006AF8  EF80  F035         	goto	u890
  3131  006AFC                     u891:
  3132  006AFC  EFA4  F035         	goto	l2370
  3133  006B00                     u890:
  3134  006B00  0E01               	movlw	1
  3135  006B02  6E05               	movwf	___awmod@counter^0,c
  3136  006B04  EF88  F035         	goto	l2360
  3137  006B08                     l2358:
  3138  006B08  90D8               	bcf	status,0,c
  3139  006B0A  3603               	rlcf	___awmod@divisor^0,f,c
  3140  006B0C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3141  006B0E  2A05               	incf	___awmod@counter^0,f,c
  3142  006B10                     l2360:
  3143  006B10  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3144  006B12  EF8D  F035         	goto	u901
  3145  006B16  EF8F  F035         	goto	u900
  3146  006B1A                     u901:
  3147  006B1A  EF84  F035         	goto	l2358
  3148  006B1E                     u900:
  3149  006B1E                     l2362:
  3150  006B1E  5003               	movf	___awmod@divisor^0,w,c
  3151  006B20  5C01               	subwf	___awmod@dividend^0,w,c
  3152  006B22  5004               	movf	(___awmod@divisor+1)^0,w,c
  3153  006B24  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3154  006B26  A0D8               	btfss	status,0,c
  3155  006B28  EF98  F035         	goto	u911
  3156  006B2C  EF9A  F035         	goto	u910
  3157  006B30                     u911:
  3158  006B30  EF9E  F035         	goto	l2366
  3159  006B34                     u910:
  3160  006B34  5003               	movf	___awmod@divisor^0,w,c
  3161  006B36  5E01               	subwf	___awmod@dividend^0,f,c
  3162  006B38  5004               	movf	(___awmod@divisor+1)^0,w,c
  3163  006B3A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3164  006B3C                     l2366:
  3165  006B3C  90D8               	bcf	status,0,c
  3166  006B3E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3167  006B40  3203               	rrcf	___awmod@divisor^0,f,c
  3168  006B42  2E05               	decfsz	___awmod@counter^0,f,c
  3169  006B44  EF8F  F035         	goto	l2362
  3170  006B48                     l2370:
  3171  006B48  5006               	movf	___awmod@sign^0,w,c
  3172  006B4A  B4D8               	btfsc	status,2,c
  3173  006B4C  EFAA  F035         	goto	u921
  3174  006B50  EFAC  F035         	goto	u920
  3175  006B54                     u921:
  3176  006B54  EFB0  F035         	goto	l2374
  3177  006B58                     u920:
  3178  006B58  6C01               	negf	___awmod@dividend^0,c
  3179  006B5A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3180  006B5C  B0D8               	btfsc	status,0,c
  3181  006B5E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3182  006B60                     l2374:
  3183  006B60  C001  F001         	movff	___awmod@dividend,?___awmod
  3184  006B64  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3185  006B68  0012               	return		;funcret
  3186  006B6A                     __end_of___awmod:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function ___awdiv *****************
  3190 ;; Defined at:
  3191 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  dividend        2    0[COMRAM] int 
  3194 ;;  divisor         2    2[COMRAM] int 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  quotient        2    6[COMRAM] int 
  3197 ;;  sign            1    5[COMRAM] unsigned char 
  3198 ;;  counter         1    4[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2    0[COMRAM] int 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         4       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3211 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        8 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_oled_putUint8
  3218 ;;		_oled_putint8
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text3
  3223  006B6A                     __ptext3:
  3224                           	callstack 0
  3225  006B6A                     ___awdiv:
  3226                           	callstack 29
  3227  006B6A  0E00               	movlw	0
  3228  006B6C  6E06               	movwf	___awdiv@sign^0,c
  3229  006B6E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3230  006B70  EFBE  F035         	goto	u810
  3231  006B74  EFBC  F035         	goto	u811
  3232  006B78                     u811:
  3233  006B78  EFC4  F035         	goto	l2306
  3234  006B7C                     u810:
  3235  006B7C  6C03               	negf	___awdiv@divisor^0,c
  3236  006B7E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3237  006B80  B0D8               	btfsc	status,0,c
  3238  006B82  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3239  006B84  0E01               	movlw	1
  3240  006B86  6E06               	movwf	___awdiv@sign^0,c
  3241  006B88                     l2306:
  3242  006B88  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3243  006B8A  EFCB  F035         	goto	u820
  3244  006B8E  EFC9  F035         	goto	u821
  3245  006B92                     u821:
  3246  006B92  EFD1  F035         	goto	l2312
  3247  006B96                     u820:
  3248  006B96  6C01               	negf	___awdiv@dividend^0,c
  3249  006B98  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3250  006B9A  B0D8               	btfsc	status,0,c
  3251  006B9C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3252  006B9E  0E01               	movlw	1
  3253  006BA0  1A06               	xorwf	___awdiv@sign^0,f,c
  3254  006BA2                     l2312:
  3255  006BA2  0E00               	movlw	0
  3256  006BA4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3257  006BA6  0E00               	movlw	0
  3258  006BA8  6E07               	movwf	___awdiv@quotient^0,c
  3259  006BAA  5003               	movf	___awdiv@divisor^0,w,c
  3260  006BAC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3261  006BAE  B4D8               	btfsc	status,2,c
  3262  006BB0  EFDC  F035         	goto	u831
  3263  006BB4  EFDE  F035         	goto	u830
  3264  006BB8                     u831:
  3265  006BB8  EF06  F036         	goto	l2334
  3266  006BBC                     u830:
  3267  006BBC  0E01               	movlw	1
  3268  006BBE  6E05               	movwf	___awdiv@counter^0,c
  3269  006BC0  EFE6  F035         	goto	l2320
  3270  006BC4                     l2318:
  3271  006BC4  90D8               	bcf	status,0,c
  3272  006BC6  3603               	rlcf	___awdiv@divisor^0,f,c
  3273  006BC8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3274  006BCA  2A05               	incf	___awdiv@counter^0,f,c
  3275  006BCC                     l2320:
  3276  006BCC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3277  006BCE  EFEB  F035         	goto	u841
  3278  006BD2  EFED  F035         	goto	u840
  3279  006BD6                     u841:
  3280  006BD6  EFE2  F035         	goto	l2318
  3281  006BDA                     u840:
  3282  006BDA                     l2322:
  3283  006BDA  90D8               	bcf	status,0,c
  3284  006BDC  3607               	rlcf	___awdiv@quotient^0,f,c
  3285  006BDE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3286  006BE0  5003               	movf	___awdiv@divisor^0,w,c
  3287  006BE2  5C01               	subwf	___awdiv@dividend^0,w,c
  3288  006BE4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3289  006BE6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3290  006BE8  A0D8               	btfss	status,0,c
  3291  006BEA  EFF9  F035         	goto	u851
  3292  006BEE  EFFB  F035         	goto	u850
  3293  006BF2                     u851:
  3294  006BF2  EF00  F036         	goto	l2330
  3295  006BF6                     u850:
  3296  006BF6  5003               	movf	___awdiv@divisor^0,w,c
  3297  006BF8  5E01               	subwf	___awdiv@dividend^0,f,c
  3298  006BFA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3299  006BFC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3300  006BFE  8007               	bsf	___awdiv@quotient^0,0,c
  3301  006C00                     l2330:
  3302  006C00  90D8               	bcf	status,0,c
  3303  006C02  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3304  006C04  3203               	rrcf	___awdiv@divisor^0,f,c
  3305  006C06  2E05               	decfsz	___awdiv@counter^0,f,c
  3306  006C08  EFED  F035         	goto	l2322
  3307  006C0C                     l2334:
  3308  006C0C  5006               	movf	___awdiv@sign^0,w,c
  3309  006C0E  B4D8               	btfsc	status,2,c
  3310  006C10  EF0C  F036         	goto	u861
  3311  006C14  EF0E  F036         	goto	u860
  3312  006C18                     u861:
  3313  006C18  EF12  F036         	goto	l2338
  3314  006C1C                     u860:
  3315  006C1C  6C07               	negf	___awdiv@quotient^0,c
  3316  006C1E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3317  006C20  B0D8               	btfsc	status,0,c
  3318  006C22  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3319  006C24                     l2338:
  3320  006C24  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3321  006C28  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3322  006C2C  0012               	return		;funcret
  3323  006C2E                     __end_of___awdiv:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _oled_init *****************
  3327 ;; Defined at:
  3328 ;;		line 366 in file "SSD1306oLED.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 5
  3349 ;; This function calls:
  3350 ;;		_oled_clear
  3351 ;;		_oled_devInit
  3352 ;;		_oled_setDisplay
  3353 ;;		_oled_setFont
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text4
  3360  00668A                     __ptext4:
  3361                           	callstack 0
  3362  00668A                     _oled_init:
  3363                           	callstack 25
  3364  00668A                     
  3365                           ;SSD1306oLED.c: 369:     TRISEbits.TRISE2 = 0;
  3366  00668A  9496               	bcf	150,2,c	;volatile
  3367                           
  3368                           ;SSD1306oLED.c: 370:     LATEbits.LATE2 = 1;
  3369  00668C  848D               	bsf	141,2,c	;volatile
  3370                           
  3371                           ;SSD1306oLED.c: 371:     TRISBbits.TRISB2 = 0;
  3372  00668E  9493               	bcf	147,2,c	;volatile
  3373                           
  3374                           ;SSD1306oLED.c: 372:     TRISBbits.TRISB3 = 0;
  3375  006690  9693               	bcf	147,3,c	;volatile
  3376                           
  3377                           ;SSD1306oLED.c: 373:     TRISBbits.TRISB4 = 0;
  3378  006692  9893               	bcf	147,4,c	;volatile
  3379                           
  3380                           ;SSD1306oLED.c: 374:     TRISCbits.TRISC0 = 0;
  3381  006694  9094               	bcf	148,0,c	;volatile
  3382                           
  3383                           ;SSD1306oLED.c: 375:     TRISCbits.TRISC1 = 0;
  3384  006696  9294               	bcf	148,1,c	;volatile
  3385                           
  3386                           ;SSD1306oLED.c: 377:     LATBbits.LATB3 = 1;
  3387  006698  868A               	bsf	138,3,c	;volatile
  3388                           
  3389                           ;SSD1306oLED.c: 379:     LATBbits.LATB4 = 0;
  3390  00669A  988A               	bcf	138,4,c	;volatile
  3391  00669C                     
  3392                           ;SSD1306oLED.c: 381:     oled_devInit();
  3393  00669C  EC5B  F034         	call	_oled_devInit	;wreg free
  3394  0066A0                     
  3395                           ;SSD1306oLED.c: 383:     oled_setDisplay(Inverse);
  3396  0066A0  0E01               	movlw	1
  3397  0066A2  EC5C  F033         	call	_oled_setDisplay
  3398  0066A6                     
  3399                           ;SSD1306oLED.c: 384:     oled_setFont(OledFont0);
  3400  0066A6  0EEB               	movlw	low _OledFont0
  3401  0066A8  6E01               	movwf	oled_setFont@font^0,c
  3402  0066AA  0E79               	movlw	high _OledFont0
  3403  0066AC  6E02               	movwf	(oled_setFont@font+1)^0,c
  3404  0066AE  ECFE  F032         	call	_oled_setFont	;wreg free
  3405  0066B2                     
  3406                           ;SSD1306oLED.c: 385:     oled_clear();
  3407  0066B2  ECF1  F032         	call	_oled_clear	;wreg free
  3408  0066B6  0012               	return		;funcret
  3409  0066B8                     __end_of_oled_init:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _oled_setFont *****************
  3413 ;; Defined at:
  3414 ;;		line 256 in file "SSD1306oLED.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  font            2    0[COMRAM] PTR const unsigned char 
  3417 ;;		 -> OledFont0(768), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         2       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_oled_init
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text5
  3443  0065FC                     __ptext5:
  3444                           	callstack 0
  3445  0065FC                     _oled_setFont:
  3446                           	callstack 29
  3447  0065FC                     
  3448                           ;SSD1306oLED.c: 256: void oled_setFont(const uint8_t *font);SSD1306oLED.c: 257: {;SSD130
      +                          6oLED.c: 258:     if(font!=0)
  3449  0065FC  5001               	movf	oled_setFont@font^0,w,c
  3450  0065FE  1002               	iorwf	(oled_setFont@font+1)^0,w,c
  3451  006600  B4D8               	btfsc	status,2,c
  3452  006602  EF05  F033         	goto	u791
  3453  006606  EF07  F033         	goto	u790
  3454  00660A                     u791:
  3455  00660A  EF0B  F033         	goto	l301
  3456  00660E                     u790:
  3457  00660E                     
  3458                           ;SSD1306oLED.c: 259:     {;SSD1306oLED.c: 260:         selectedFont=font;
  3459  00660E  C001  F091         	movff	oled_setFont@font,_selectedFont
  3460  006612  C002  F092         	movff	oled_setFont@font+1,_selectedFont+1
  3461  006616                     l301:
  3462  006616  0012               	return		;funcret
  3463  006618                     __end_of_oled_setFont:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _oled_setDisplay *****************
  3467 ;; Defined at:
  3468 ;;		line 411 in file "SSD1306oLED.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  displayType     1    wreg     enum E4838
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  displayType     1    1[COMRAM] enum E4838
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0
  3483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3486 ;;Total ram usage:        1 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 1
  3489 ;; This function calls:
  3490 ;;		_oled_writeCommand
  3491 ;; This function is called by:
  3492 ;;		_oled_init
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text6
  3497  0066B8                     __ptext6:
  3498                           	callstack 0
  3499  0066B8                     _oled_setDisplay:
  3500                           	callstack 28
  3501                           
  3502                           ;incstack = 0
  3503                           ;oled_setDisplay@displayType stored from wreg
  3504  0066B8  6E02               	movwf	oled_setDisplay@displayType^0,c
  3505  0066BA                     
  3506                           ;SSD1306oLED.c: 411: void oled_setDisplay (oLED_DisplayMode_t displayType);SSD1306oLED.c
      +                          : 412: {;SSD1306oLED.c: 413:     if (displayType == Normal)
  3507  0066BA  5002               	movf	oled_setDisplay@displayType^0,w,c
  3508  0066BC  A4D8               	btfss	status,2,c
  3509  0066BE  EF63  F033         	goto	u801
  3510  0066C2  EF65  F033         	goto	u800
  3511  0066C6                     u801:
  3512  0066C6  EF6D  F033         	goto	l2296
  3513  0066CA                     u800:
  3514  0066CA                     
  3515                           ;SSD1306oLED.c: 414:     {;SSD1306oLED.c: 415:         oled_writeCommand(0xa0);
  3516  0066CA  0EA0               	movlw	160
  3517  0066CC  ECC7  F032         	call	_oled_writeCommand
  3518                           
  3519                           ;SSD1306oLED.c: 416:         oled_writeCommand(0xc8);
  3520  0066D0  0EC8               	movlw	200
  3521  0066D2  ECC7  F032         	call	_oled_writeCommand
  3522                           
  3523                           ;SSD1306oLED.c: 417:     }
  3524  0066D6  EF73  F033         	goto	l343
  3525  0066DA                     l2296:
  3526                           
  3527                           ;SSD1306oLED.c: 419:     {;SSD1306oLED.c: 420:         oled_writeCommand(0xa1);
  3528  0066DA  0EA1               	movlw	161
  3529  0066DC  ECC7  F032         	call	_oled_writeCommand
  3530                           
  3531                           ;SSD1306oLED.c: 421:         oled_writeCommand(0xc0);
  3532  0066E0  0EC0               	movlw	192
  3533  0066E2  ECC7  F032         	call	_oled_writeCommand
  3534  0066E6                     l343:
  3535  0066E6  0012               	return		;funcret
  3536  0066E8                     __end_of_oled_setDisplay:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _oled_devInit *****************
  3540 ;; Defined at:
  3541 ;;		line 388 in file "SSD1306oLED.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        1 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 2
  3562 ;; This function calls:
  3563 ;;		_oled_initialDispayLine
  3564 ;;		_oled_powerControl
  3565 ;;		_oled_regulorResistorSelect
  3566 ;;		_oled_setContrastControlRegister
  3567 ;;		_oled_writeCommand
  3568 ;; This function is called by:
  3569 ;;		_oled_init
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text7
  3574  0068B6                     __ptext7:
  3575                           	callstack 0
  3576  0068B6                     _oled_devInit:
  3577                           	callstack 27
  3578  0068B6                     
  3579                           ;SSD1306oLED.c: 390:     oled_writeCommand(0xe2);
  3580  0068B6  0EE2               	movlw	226
  3581  0068B8  ECC7  F032         	call	_oled_writeCommand
  3582  0068BC                     
  3583                           ;SSD1306oLED.c: 391:     LATBbits.LATB2=1;
  3584  0068BC  848A               	bsf	138,2,c	;volatile
  3585  0068BE                     
  3586                           ;SSD1306oLED.c: 392:     _delay((unsigned long)((200)*(48000000/4000000.0)));
  3587  0068BE  0E04               	movlw	4
  3588  0068C0  6E03               	movwf	??_oled_devInit^0,c
  3589  0068C2  0E1C               	movlw	28
  3590  0068C4                     u1137:
  3591  0068C4  2EE8               	decfsz	wreg,f,c
  3592  0068C6  D7FE               	bra	u1137
  3593  0068C8  2E03               	decfsz	??_oled_devInit^0,f,c
  3594  0068CA  D7FC               	bra	u1137
  3595  0068CC  D000               	nop2	
  3596  0068CE                     
  3597                           ;SSD1306oLED.c: 393:     LATBbits.LATB2=0;
  3598  0068CE  948A               	bcf	138,2,c	;volatile
  3599  0068D0                     
  3600                           ;SSD1306oLED.c: 394:     _delay((unsigned long)((2000)*(48000000/4000000.0)));
  3601  0068D0  0E20               	movlw	32
  3602  0068D2  6E03               	movwf	??_oled_devInit^0,c
  3603  0068D4  0E2A               	movlw	42
  3604  0068D6                     u1147:
  3605  0068D6  2EE8               	decfsz	wreg,f,c
  3606  0068D8  D7FE               	bra	u1147
  3607  0068DA  2E03               	decfsz	??_oled_devInit^0,f,c
  3608  0068DC  D7FC               	bra	u1147
  3609  0068DE                     
  3610                           ;SSD1306oLED.c: 395:     LATBbits.LATB2=1;
  3611  0068DE  848A               	bsf	138,2,c	;volatile
  3612  0068E0                     
  3613                           ;SSD1306oLED.c: 396:     _delay((unsigned long)((1000)*(48000000/4000000.0)));
  3614  0068E0  0E10               	movlw	16
  3615  0068E2  6E03               	movwf	??_oled_devInit^0,c
  3616  0068E4  0E94               	movlw	148
  3617  0068E6                     u1157:
  3618  0068E6  2EE8               	decfsz	wreg,f,c
  3619  0068E8  D7FE               	bra	u1157
  3620  0068EA  2E03               	decfsz	??_oled_devInit^0,f,c
  3621  0068EC  D7FC               	bra	u1157
  3622  0068EE  D000               	nop2	
  3623  0068F0                     
  3624                           ;SSD1306oLED.c: 398:     oled_writeCommand(0xa1);
  3625  0068F0  0EA1               	movlw	161
  3626  0068F2  ECC7  F032         	call	_oled_writeCommand
  3627  0068F6                     
  3628                           ;SSD1306oLED.c: 399:     oled_writeCommand(0xc0);
  3629  0068F6  0EC0               	movlw	192
  3630  0068F8  ECC7  F032         	call	_oled_writeCommand
  3631  0068FC                     
  3632                           ;SSD1306oLED.c: 400:     oled_writeCommand(0xa3);
  3633  0068FC  0EA3               	movlw	163
  3634  0068FE  ECC7  F032         	call	_oled_writeCommand
  3635  006902                     
  3636                           ;SSD1306oLED.c: 401:     oled_powerControl(0x07);
  3637  006902  0E07               	movlw	7
  3638  006904  EC9D  F032         	call	_oled_powerControl
  3639  006908                     
  3640                           ;SSD1306oLED.c: 402:     oled_regulorResistorSelect(0x05);
  3641  006908  0E05               	movlw	5
  3642  00690A  ECA3  F032         	call	_oled_regulorResistorSelect
  3643  00690E                     
  3644                           ;SSD1306oLED.c: 403:     oled_setContrastControlRegister(Contrast_level);
  3645  00690E  0E13               	movlw	19
  3646  006910  ECBF  F032         	call	_oled_setContrastControlRegister
  3647  006914                     
  3648                           ;SSD1306oLED.c: 404:     oled_initialDispayLine(0x00);
  3649  006914  0E00               	movlw	0
  3650  006916  EC97  F032         	call	_oled_initialDispayLine
  3651  00691A                     
  3652                           ;SSD1306oLED.c: 405:     oled_writeCommand(0xF8);
  3653  00691A  0EF8               	movlw	248
  3654  00691C  ECC7  F032         	call	_oled_writeCommand
  3655  006920                     
  3656                           ;SSD1306oLED.c: 406:     oled_writeCommand(0x00);
  3657  006920  0E00               	movlw	0
  3658  006922  ECC7  F032         	call	_oled_writeCommand
  3659  006926                     
  3660                           ;SSD1306oLED.c: 407:     oled_writeCommand(0xaf);
  3661  006926  0EAF               	movlw	175
  3662  006928  ECC7  F032         	call	_oled_writeCommand
  3663  00692C  0012               	return		;funcret
  3664  00692E                     __end_of_oled_devInit:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _oled_setContrastControlRegister *****************
  3668 ;; Defined at:
  3669 ;;		line 454 in file "SSD1306oLED.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  mod             1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  mod             1    1[COMRAM] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 1
  3690 ;; This function calls:
  3691 ;;		_oled_writeCommand
  3692 ;; This function is called by:
  3693 ;;		_oled_devInit
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text8
  3698  00657E                     __ptext8:
  3699                           	callstack 0
  3700  00657E                     _oled_setContrastControlRegister:
  3701                           	callstack 27
  3702                           
  3703                           ;incstack = 0
  3704                           ;oled_setContrastControlRegister@mod stored from wreg
  3705  00657E  6E02               	movwf	oled_setContrastControlRegister@mod^0,c
  3706  006580                     
  3707                           ;SSD1306oLED.c: 454: void oled_setContrastControlRegister(uint8_t mod);SSD1306oLED.c: 45
      +                          5: {;SSD1306oLED.c: 456:     oled_writeCommand(0x81);
  3708  006580  0E81               	movlw	129
  3709  006582  ECC7  F032         	call	_oled_writeCommand
  3710  006586                     
  3711                           ;SSD1306oLED.c: 457:     oled_writeCommand(mod);
  3712  006586  5002               	movf	oled_setContrastControlRegister@mod^0,w,c
  3713  006588  ECC7  F032         	call	_oled_writeCommand
  3714  00658C  0012               	return		;funcret
  3715  00658E                     __end_of_oled_setContrastControlRegister:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _oled_regulorResistorSelect *****************
  3719 ;; Defined at:
  3720 ;;		line 482 in file "SSD1306oLED.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  r               1    wreg     unsigned char 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  r               1    1[COMRAM] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0
  3735 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3737 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        1 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 1
  3741 ;; This function calls:
  3742 ;;		_oled_writeCommand
  3743 ;; This function is called by:
  3744 ;;		_oled_devInit
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text9
  3749  006546                     __ptext9:
  3750                           	callstack 0
  3751  006546                     _oled_regulorResistorSelect:
  3752                           	callstack 27
  3753                           
  3754                           ;incstack = 0
  3755                           ;oled_regulorResistorSelect@r stored from wreg
  3756  006546  6E02               	movwf	oled_regulorResistorSelect@r^0,c
  3757  006548                     
  3758                           ;SSD1306oLED.c: 482: void oled_regulorResistorSelect(uint8_t r);SSD1306oLED.c: 483: {;SS
      +                          D1306oLED.c: 484:     oled_writeCommand((0x20|r));
  3759  006548  5002               	movf	oled_regulorResistorSelect@r^0,w,c
  3760  00654A  0920               	iorlw	32
  3761  00654C  ECC7  F032         	call	_oled_writeCommand
  3762  006550  0012               	return		;funcret
  3763  006552                     __end_of_oled_regulorResistorSelect:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _oled_powerControl *****************
  3767 ;; Defined at:
  3768 ;;		line 469 in file "SSD1306oLED.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  vol             1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  vol             1    1[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 1
  3789 ;; This function calls:
  3790 ;;		_oled_writeCommand
  3791 ;; This function is called by:
  3792 ;;		_oled_devInit
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text10
  3797  00653A                     __ptext10:
  3798                           	callstack 0
  3799  00653A                     _oled_powerControl:
  3800                           	callstack 27
  3801                           
  3802                           ;incstack = 0
  3803                           ;oled_powerControl@vol stored from wreg
  3804  00653A  6E02               	movwf	oled_powerControl@vol^0,c
  3805  00653C                     
  3806                           ;SSD1306oLED.c: 469: void oled_powerControl(uint8_t vol);SSD1306oLED.c: 470: {;SSD1306oL
      +                          ED.c: 471:     oled_writeCommand((0x28|vol));
  3807  00653C  5002               	movf	oled_powerControl@vol^0,w,c
  3808  00653E  0928               	iorlw	40
  3809  006540  ECC7  F032         	call	_oled_writeCommand
  3810  006544  0012               	return		;funcret
  3811  006546                     __end_of_oled_powerControl:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _oled_initialDispayLine *****************
  3815 ;; Defined at:
  3816 ;;		line 462 in file "SSD1306oLED.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  line            1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  line            1    1[COMRAM] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 1
  3837 ;; This function calls:
  3838 ;;		_oled_writeCommand
  3839 ;; This function is called by:
  3840 ;;		_oled_devInit
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text11
  3845  00652E                     __ptext11:
  3846                           	callstack 0
  3847  00652E                     _oled_initialDispayLine:
  3848                           	callstack 27
  3849                           
  3850                           ;incstack = 0
  3851                           ;oled_initialDispayLine@line stored from wreg
  3852  00652E  6E02               	movwf	oled_initialDispayLine@line^0,c
  3853  006530                     
  3854                           ;SSD1306oLED.c: 462: void oled_initialDispayLine(uint8_t line);SSD1306oLED.c: 463: {;SSD
      +                          1306oLED.c: 464:     line|=0x40;
  3855  006530  8C02               	bsf	oled_initialDispayLine@line^0,6,c
  3856  006532                     
  3857                           ;SSD1306oLED.c: 465:     oled_writeCommand(line);
  3858  006532  5002               	movf	oled_initialDispayLine@line^0,w,c
  3859  006534  ECC7  F032         	call	_oled_writeCommand
  3860  006538  0012               	return		;funcret
  3861  00653A                     __end_of_oled_initialDispayLine:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _init_port *****************
  3865 ;; Defined at:
  3866 ;;		line 12 in file "main.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text12
  3894  006560                     __ptext12:
  3895                           	callstack 0
  3896  006560                     _init_port:
  3897                           	callstack 30
  3898  006560                     
  3899                           ;main.c: 14:     TRISAbits.TRISA7 = 0;
  3900  006560  9E92               	bcf	146,7,c	;volatile
  3901                           
  3902                           ;main.c: 15:     LATAbits.LATA7 = 0;
  3903  006562  9E89               	bcf	137,7,c	;volatile
  3904                           
  3905                           ;main.c: 17:     TRISAbits.TRISA6 = 0;
  3906  006564  9C92               	bcf	146,6,c	;volatile
  3907                           
  3908                           ;main.c: 18:     LATAbits.LATA6 = 0;
  3909  006566  9C89               	bcf	137,6,c	;volatile
  3910  006568                     
  3911                           ;main.c: 20:     TRISD = 0b00000000;
  3912  006568  0E00               	movlw	0
  3913  00656A  6E95               	movwf	149,c	;volatile
  3914  00656C  0012               	return		;funcret
  3915  00656E                     __end_of_init_port:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _init_mod_LoRa *****************
  3919 ;; Defined at:
  3920 ;;		line 75 in file "main.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  READ           10   50[COMRAM] unsigned char [10]
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0
  3935 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3937 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:       12 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 6
  3941 ;; This function calls:
  3942 ;;		_get_Data
  3943 ;;		_oled_clear
  3944 ;;		_oled_clearRow
  3945 ;;		_oled_putString
  3946 ;;		_sendCommand
  3947 ;;		_sprintf
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text13
  3954  007436                     __ptext13:
  3955                           	callstack 0
  3956  007436                     _init_mod_LoRa:
  3957                           	callstack 24
  3958  007436                     
  3959                           ;main.c: 77:     char READ[10];;main.c: 78:     _delay((unsigned long)((200)*(48000000/4
      +                          000.0)));
  3960  007436  0E0D               	movlw	13
  3961  007438  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  3962  00743A  0E2D               	movlw	45
  3963  00743C  6E31               	movwf	??_init_mod_LoRa^0,c
  3964  00743E  0ED8               	movlw	216
  3965  007440                     u1167:
  3966  007440  2EE8               	decfsz	wreg,f,c
  3967  007442  D7FE               	bra	u1167
  3968  007444  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  3969  007446  D7FC               	bra	u1167
  3970  007448  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  3971  00744A  D7FA               	bra	u1167
  3972  00744C                     
  3973                           ;main.c: 79:     oled_clear();
  3974  00744C  ECF1  F032         	call	_oled_clear	;wreg free
  3975  007450                     
  3976                           ;main.c: 80:     sprintf(READ,"%c",get_Data());
  3977  007450  0E33               	movlw	low init_mod_LoRa@READ
  3978  007452  6E23               	movwf	sprintf@s^0,c
  3979  007454  0E00               	movlw	high init_mod_LoRa@READ
  3980  007456  6E24               	movwf	(sprintf@s+1)^0,c
  3981  007458  0EFB               	movlw	low STR_6
  3982  00745A  6E25               	movwf	sprintf@fmt^0,c
  3983  00745C  0E7F               	movlw	high STR_6
  3984  00745E  6E26               	movwf	(sprintf@fmt+1)^0,c
  3985  007460  EC8E  F033         	call	_get_Data	;wreg free
  3986  007464  C001  F027         	movff	?_get_Data,?_sprintf+4
  3987  007468  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  3988  00746C  EC03  F034         	call	_sprintf	;wreg free
  3989  007470                     
  3990                           ;main.c: 81:     oled_putString(READ,0,3);
  3991  007470  0E33               	movlw	low init_mod_LoRa@READ
  3992  007472  6E0D               	movwf	oled_putString@string^0,c
  3993  007474  0E00               	movlw	high init_mod_LoRa@READ
  3994  007476  6E0E               	movwf	(oled_putString@string+1)^0,c
  3995  007478  0E00               	movlw	0
  3996  00747A  6E0F               	movwf	oled_putString@station_dot^0,c
  3997  00747C  0E03               	movlw	3
  3998  00747E  6E10               	movwf	oled_putString@start_page^0,c
  3999  007480  ECD5  F034         	call	_oled_putString	;wreg free
  4000  007484                     
  4001                           ;main.c: 82:     _delay((unsigned long)((100)*(48000000/4000.0)));
  4002  007484  0E07               	movlw	7
  4003  007486  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4004  007488  0E17               	movlw	23
  4005  00748A  6E31               	movwf	??_init_mod_LoRa^0,c
  4006  00748C  0E6A               	movlw	106
  4007  00748E                     u1177:
  4008  00748E  2EE8               	decfsz	wreg,f,c
  4009  007490  D7FE               	bra	u1177
  4010  007492  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4011  007494  D7FC               	bra	u1177
  4012  007496  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4013  007498  D7FA               	bra	u1177
  4014  00749A  D000               	nop2	
  4015  00749C                     
  4016                           ;main.c: 83:     sprintf(READ,"%c",get_Data());
  4017  00749C  0E33               	movlw	low init_mod_LoRa@READ
  4018  00749E  6E23               	movwf	sprintf@s^0,c
  4019  0074A0  0E00               	movlw	high init_mod_LoRa@READ
  4020  0074A2  6E24               	movwf	(sprintf@s+1)^0,c
  4021  0074A4  0EFB               	movlw	low STR_6
  4022  0074A6  6E25               	movwf	sprintf@fmt^0,c
  4023  0074A8  0E7F               	movlw	high STR_6
  4024  0074AA  6E26               	movwf	(sprintf@fmt+1)^0,c
  4025  0074AC  EC8E  F033         	call	_get_Data	;wreg free
  4026  0074B0  C001  F027         	movff	?_get_Data,?_sprintf+4
  4027  0074B4  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4028  0074B8  EC03  F034         	call	_sprintf	;wreg free
  4029  0074BC                     
  4030                           ;main.c: 84:     oled_putString(READ,0,3);
  4031  0074BC  0E33               	movlw	low init_mod_LoRa@READ
  4032  0074BE  6E0D               	movwf	oled_putString@string^0,c
  4033  0074C0  0E00               	movlw	high init_mod_LoRa@READ
  4034  0074C2  6E0E               	movwf	(oled_putString@string+1)^0,c
  4035  0074C4  0E00               	movlw	0
  4036  0074C6  6E0F               	movwf	oled_putString@station_dot^0,c
  4037  0074C8  0E03               	movlw	3
  4038  0074CA  6E10               	movwf	oled_putString@start_page^0,c
  4039  0074CC  ECD5  F034         	call	_oled_putString	;wreg free
  4040  0074D0                     
  4041                           ;main.c: 85:     _delay((unsigned long)((100)*(48000000/4000.0)));
  4042  0074D0  0E07               	movlw	7
  4043  0074D2  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4044  0074D4  0E17               	movlw	23
  4045  0074D6  6E31               	movwf	??_init_mod_LoRa^0,c
  4046  0074D8  0E6A               	movlw	106
  4047  0074DA                     u1187:
  4048  0074DA  2EE8               	decfsz	wreg,f,c
  4049  0074DC  D7FE               	bra	u1187
  4050  0074DE  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4051  0074E0  D7FC               	bra	u1187
  4052  0074E2  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4053  0074E4  D7FA               	bra	u1187
  4054  0074E6  D000               	nop2	
  4055  0074E8                     
  4056                           ;main.c: 87:     oled_putString("Config modulo RN",0,0);
  4057  0074E8  0E35               	movlw	low STR_8
  4058  0074EA  6E0D               	movwf	oled_putString@string^0,c
  4059  0074EC  0E7E               	movlw	high STR_8
  4060  0074EE  6E0E               	movwf	(oled_putString@string+1)^0,c
  4061  0074F0  0E00               	movlw	0
  4062  0074F2  6E0F               	movwf	oled_putString@station_dot^0,c
  4063  0074F4  0E00               	movlw	0
  4064  0074F6  6E10               	movwf	oled_putString@start_page^0,c
  4065  0074F8  ECD5  F034         	call	_oled_putString	;wreg free
  4066  0074FC                     
  4067                           ;main.c: 88:     oled_clearRow(1);
  4068  0074FC  0E01               	movlw	1
  4069  0074FE  EC1C  F033         	call	_oled_clearRow
  4070  007502                     
  4071                           ;main.c: 89:     oled_clearRow(2);
  4072  007502  0E02               	movlw	2
  4073  007504  EC1C  F033         	call	_oled_clearRow
  4074  007508                     
  4075                           ;main.c: 90:     oled_clearRow(3);
  4076  007508  0E03               	movlw	3
  4077  00750A  EC1C  F033         	call	_oled_clearRow
  4078  00750E                     
  4079                           ;main.c: 91:     oled_putString("potencia",0,1);
  4080  00750E  0EC9               	movlw	low STR_9
  4081  007510  6E0D               	movwf	oled_putString@string^0,c
  4082  007512  0E7F               	movlw	high STR_9
  4083  007514  6E0E               	movwf	(oled_putString@string+1)^0,c
  4084  007516  0E00               	movlw	0
  4085  007518  6E0F               	movwf	oled_putString@station_dot^0,c
  4086  00751A  0E01               	movlw	1
  4087  00751C  6E10               	movwf	oled_putString@start_page^0,c
  4088  00751E  ECD5  F034         	call	_oled_putString	;wreg free
  4089  007522                     
  4090                           ;main.c: 92:     sendCommand("radio set pwr 3\r\n");
  4091  007522  0E23               	movlw	low STR_10
  4092  007524  6E02               	movwf	sendCommand@texto^0,c
  4093  007526  0E7E               	movlw	high STR_10
  4094  007528  6E03               	movwf	(sendCommand@texto+1)^0,c
  4095  00752A  ECA9  F033         	call	_sendCommand	;wreg free
  4096  00752E                     
  4097                           ;main.c: 93:     sprintf(READ,"%c",get_Data());
  4098  00752E  0E33               	movlw	low init_mod_LoRa@READ
  4099  007530  6E23               	movwf	sprintf@s^0,c
  4100  007532  0E00               	movlw	high init_mod_LoRa@READ
  4101  007534  6E24               	movwf	(sprintf@s+1)^0,c
  4102  007536  0EFB               	movlw	low STR_6
  4103  007538  6E25               	movwf	sprintf@fmt^0,c
  4104  00753A  0E7F               	movlw	high STR_6
  4105  00753C  6E26               	movwf	(sprintf@fmt+1)^0,c
  4106  00753E  EC8E  F033         	call	_get_Data	;wreg free
  4107  007542  C001  F027         	movff	?_get_Data,?_sprintf+4
  4108  007546  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4109  00754A  EC03  F034         	call	_sprintf	;wreg free
  4110  00754E                     
  4111                           ;main.c: 94:     oled_putString(READ,0,3);
  4112  00754E  0E33               	movlw	low init_mod_LoRa@READ
  4113  007550  6E0D               	movwf	oled_putString@string^0,c
  4114  007552  0E00               	movlw	high init_mod_LoRa@READ
  4115  007554  6E0E               	movwf	(oled_putString@string+1)^0,c
  4116  007556  0E00               	movlw	0
  4117  007558  6E0F               	movwf	oled_putString@station_dot^0,c
  4118  00755A  0E03               	movlw	3
  4119  00755C  6E10               	movwf	oled_putString@start_page^0,c
  4120  00755E  ECD5  F034         	call	_oled_putString	;wreg free
  4121  007562                     
  4122                           ;main.c: 95:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4123  007562  0E1F               	movlw	31
  4124  007564  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4125  007566  0E71               	movlw	113
  4126  007568  6E31               	movwf	??_init_mod_LoRa^0,c
  4127  00756A  0E1E               	movlw	30
  4128  00756C                     u1197:
  4129  00756C  2EE8               	decfsz	wreg,f,c
  4130  00756E  D7FE               	bra	u1197
  4131  007570  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4132  007572  D7FC               	bra	u1197
  4133  007574  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4134  007576  D7FA               	bra	u1197
  4135  007578  D000               	nop2	
  4136  00757A                     
  4137                           ;main.c: 97:     oled_clearRow(1);
  4138  00757A  0E01               	movlw	1
  4139  00757C  EC1C  F033         	call	_oled_clearRow
  4140  007580                     
  4141                           ;main.c: 98:     oled_clearRow(2);
  4142  007580  0E02               	movlw	2
  4143  007582  EC1C  F033         	call	_oled_clearRow
  4144  007586                     
  4145                           ;main.c: 99:     oled_clearRow(3);
  4146  007586  0E03               	movlw	3
  4147  007588  EC1C  F033         	call	_oled_clearRow
  4148  00758C                     
  4149                           ;main.c: 100:     oled_putString("ancho de banda",0,1);
  4150  00758C  0E66               	movlw	low STR_12
  4151  00758E  6E0D               	movwf	oled_putString@string^0,c
  4152  007590  0E7E               	movlw	high STR_12
  4153  007592  6E0E               	movwf	(oled_putString@string+1)^0,c
  4154  007594  0E00               	movlw	0
  4155  007596  6E0F               	movwf	oled_putString@station_dot^0,c
  4156  007598  0E01               	movlw	1
  4157  00759A  6E10               	movwf	oled_putString@start_page^0,c
  4158  00759C  ECD5  F034         	call	_oled_putString	;wreg free
  4159  0075A0                     
  4160                           ;main.c: 101:     sendCommand("radio set bw 250\r\n");
  4161  0075A0  0EEA               	movlw	low STR_13
  4162  0075A2  6E02               	movwf	sendCommand@texto^0,c
  4163  0075A4  0E7D               	movlw	high STR_13
  4164  0075A6  6E03               	movwf	(sendCommand@texto+1)^0,c
  4165  0075A8  ECA9  F033         	call	_sendCommand	;wreg free
  4166  0075AC                     
  4167                           ;main.c: 102:     sprintf(READ,"%c",get_Data());
  4168  0075AC  0E33               	movlw	low init_mod_LoRa@READ
  4169  0075AE  6E23               	movwf	sprintf@s^0,c
  4170  0075B0  0E00               	movlw	high init_mod_LoRa@READ
  4171  0075B2  6E24               	movwf	(sprintf@s+1)^0,c
  4172  0075B4  0EFB               	movlw	low STR_6
  4173  0075B6  6E25               	movwf	sprintf@fmt^0,c
  4174  0075B8  0E7F               	movlw	high STR_6
  4175  0075BA  6E26               	movwf	(sprintf@fmt+1)^0,c
  4176  0075BC  EC8E  F033         	call	_get_Data	;wreg free
  4177  0075C0  C001  F027         	movff	?_get_Data,?_sprintf+4
  4178  0075C4  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4179  0075C8  EC03  F034         	call	_sprintf	;wreg free
  4180  0075CC                     
  4181                           ;main.c: 103:     oled_putString(READ,0,3);
  4182  0075CC  0E33               	movlw	low init_mod_LoRa@READ
  4183  0075CE  6E0D               	movwf	oled_putString@string^0,c
  4184  0075D0  0E00               	movlw	high init_mod_LoRa@READ
  4185  0075D2  6E0E               	movwf	(oled_putString@string+1)^0,c
  4186  0075D4  0E00               	movlw	0
  4187  0075D6  6E0F               	movwf	oled_putString@station_dot^0,c
  4188  0075D8  0E03               	movlw	3
  4189  0075DA  6E10               	movwf	oled_putString@start_page^0,c
  4190  0075DC  ECD5  F034         	call	_oled_putString	;wreg free
  4191  0075E0                     
  4192                           ;main.c: 104:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4193  0075E0  0E1F               	movlw	31
  4194  0075E2  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4195  0075E4  0E71               	movlw	113
  4196  0075E6  6E31               	movwf	??_init_mod_LoRa^0,c
  4197  0075E8  0E1E               	movlw	30
  4198  0075EA                     u1207:
  4199  0075EA  2EE8               	decfsz	wreg,f,c
  4200  0075EC  D7FE               	bra	u1207
  4201  0075EE  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4202  0075F0  D7FC               	bra	u1207
  4203  0075F2  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4204  0075F4  D7FA               	bra	u1207
  4205  0075F6  D000               	nop2	
  4206  0075F8                     
  4207                           ;main.c: 106:     oled_clearRow(1);
  4208  0075F8  0E01               	movlw	1
  4209  0075FA  EC1C  F033         	call	_oled_clearRow
  4210  0075FE                     
  4211                           ;main.c: 107:     oled_clearRow(2);
  4212  0075FE  0E02               	movlw	2
  4213  007600  EC1C  F033         	call	_oled_clearRow
  4214  007604                     
  4215                           ;main.c: 108:     oled_clearRow(3);
  4216  007604  0E03               	movlw	3
  4217  007606  EC1C  F033         	call	_oled_clearRow
  4218  00760A                     
  4219                           ;main.c: 109:     oled_putString("frecuencia",0,1);
  4220  00760A  0E96               	movlw	low STR_15
  4221  00760C  6E0D               	movwf	oled_putString@string^0,c
  4222  00760E  0E7F               	movlw	high STR_15
  4223  007610  6E0E               	movwf	(oled_putString@string+1)^0,c
  4224  007612  0E00               	movlw	0
  4225  007614  6E0F               	movwf	oled_putString@station_dot^0,c
  4226  007616  0E01               	movlw	1
  4227  007618  6E10               	movwf	oled_putString@start_page^0,c
  4228  00761A  ECD5  F034         	call	_oled_putString	;wreg free
  4229  00761E                     
  4230                           ;main.c: 110:     sendCommand("radio set freq 923300000\r\n");
  4231  00761E  0EEB               	movlw	low STR_16
  4232  007620  6E02               	movwf	sendCommand@texto^0,c
  4233  007622  0E7C               	movlw	high STR_16
  4234  007624  6E03               	movwf	(sendCommand@texto+1)^0,c
  4235  007626  ECA9  F033         	call	_sendCommand	;wreg free
  4236  00762A                     
  4237                           ;main.c: 111:     sprintf(READ,"%c",get_Data());
  4238  00762A  0E33               	movlw	low init_mod_LoRa@READ
  4239  00762C  6E23               	movwf	sprintf@s^0,c
  4240  00762E  0E00               	movlw	high init_mod_LoRa@READ
  4241  007630  6E24               	movwf	(sprintf@s+1)^0,c
  4242  007632  0EFB               	movlw	low STR_6
  4243  007634  6E25               	movwf	sprintf@fmt^0,c
  4244  007636  0E7F               	movlw	high STR_6
  4245  007638  6E26               	movwf	(sprintf@fmt+1)^0,c
  4246  00763A  EC8E  F033         	call	_get_Data	;wreg free
  4247  00763E  C001  F027         	movff	?_get_Data,?_sprintf+4
  4248  007642  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4249  007646  EC03  F034         	call	_sprintf	;wreg free
  4250  00764A                     
  4251                           ;main.c: 112:     oled_putString(READ,0,3);
  4252  00764A  0E33               	movlw	low init_mod_LoRa@READ
  4253  00764C  6E0D               	movwf	oled_putString@string^0,c
  4254  00764E  0E00               	movlw	high init_mod_LoRa@READ
  4255  007650  6E0E               	movwf	(oled_putString@string+1)^0,c
  4256  007652  0E00               	movlw	0
  4257  007654  6E0F               	movwf	oled_putString@station_dot^0,c
  4258  007656  0E03               	movlw	3
  4259  007658  6E10               	movwf	oled_putString@start_page^0,c
  4260  00765A  ECD5  F034         	call	_oled_putString	;wreg free
  4261  00765E                     
  4262                           ;main.c: 113:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4263  00765E  0E1F               	movlw	31
  4264  007660  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4265  007662  0E71               	movlw	113
  4266  007664  6E31               	movwf	??_init_mod_LoRa^0,c
  4267  007666  0E1E               	movlw	30
  4268  007668                     u1217:
  4269  007668  2EE8               	decfsz	wreg,f,c
  4270  00766A  D7FE               	bra	u1217
  4271  00766C  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4272  00766E  D7FC               	bra	u1217
  4273  007670  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4274  007672  D7FA               	bra	u1217
  4275  007674  D000               	nop2	
  4276  007676                     
  4277                           ;main.c: 115:     oled_clearRow(1);
  4278  007676  0E01               	movlw	1
  4279  007678  EC1C  F033         	call	_oled_clearRow
  4280  00767C                     
  4281                           ;main.c: 116:     oled_clearRow(2);
  4282  00767C  0E02               	movlw	2
  4283  00767E  EC1C  F033         	call	_oled_clearRow
  4284  007682                     
  4285                           ;main.c: 117:     oled_clearRow(3);
  4286  007682  0E03               	movlw	3
  4287  007684  EC1C  F033         	call	_oled_clearRow
  4288  007688                     
  4289                           ;main.c: 118:     oled_putString("cod Dec Errores",0,1);
  4290  007688  0E56               	movlw	low STR_18
  4291  00768A  6E0D               	movwf	oled_putString@string^0,c
  4292  00768C  0E7E               	movlw	high STR_18
  4293  00768E  6E0E               	movwf	(oled_putString@string+1)^0,c
  4294  007690  0E00               	movlw	0
  4295  007692  6E0F               	movwf	oled_putString@station_dot^0,c
  4296  007694  0E01               	movlw	1
  4297  007696  6E10               	movwf	oled_putString@start_page^0,c
  4298  007698  ECD5  F034         	call	_oled_putString	;wreg free
  4299  00769C                     
  4300                           ;main.c: 119:     sendCommand("radio set crc on\r\n");
  4301  00769C  0E10               	movlw	low STR_19
  4302  00769E  6E02               	movwf	sendCommand@texto^0,c
  4303  0076A0  0E7E               	movlw	high STR_19
  4304  0076A2  6E03               	movwf	(sendCommand@texto+1)^0,c
  4305  0076A4  ECA9  F033         	call	_sendCommand	;wreg free
  4306  0076A8                     
  4307                           ;main.c: 120:     sprintf(READ,"%c",get_Data());
  4308  0076A8  0E33               	movlw	low init_mod_LoRa@READ
  4309  0076AA  6E23               	movwf	sprintf@s^0,c
  4310  0076AC  0E00               	movlw	high init_mod_LoRa@READ
  4311  0076AE  6E24               	movwf	(sprintf@s+1)^0,c
  4312  0076B0  0EFB               	movlw	low STR_6
  4313  0076B2  6E25               	movwf	sprintf@fmt^0,c
  4314  0076B4  0E7F               	movlw	high STR_6
  4315  0076B6  6E26               	movwf	(sprintf@fmt+1)^0,c
  4316  0076B8  EC8E  F033         	call	_get_Data	;wreg free
  4317  0076BC  C001  F027         	movff	?_get_Data,?_sprintf+4
  4318  0076C0  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4319  0076C4  EC03  F034         	call	_sprintf	;wreg free
  4320  0076C8                     
  4321                           ;main.c: 121:     oled_putString(READ,0,3);
  4322  0076C8  0E33               	movlw	low init_mod_LoRa@READ
  4323  0076CA  6E0D               	movwf	oled_putString@string^0,c
  4324  0076CC  0E00               	movlw	high init_mod_LoRa@READ
  4325  0076CE  6E0E               	movwf	(oled_putString@string+1)^0,c
  4326  0076D0  0E00               	movlw	0
  4327  0076D2  6E0F               	movwf	oled_putString@station_dot^0,c
  4328  0076D4  0E03               	movlw	3
  4329  0076D6  6E10               	movwf	oled_putString@start_page^0,c
  4330  0076D8  ECD5  F034         	call	_oled_putString	;wreg free
  4331  0076DC                     
  4332                           ;main.c: 122:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4333  0076DC  0E1F               	movlw	31
  4334  0076DE  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4335  0076E0  0E71               	movlw	113
  4336  0076E2  6E31               	movwf	??_init_mod_LoRa^0,c
  4337  0076E4  0E1E               	movlw	30
  4338  0076E6                     u1227:
  4339  0076E6  2EE8               	decfsz	wreg,f,c
  4340  0076E8  D7FE               	bra	u1227
  4341  0076EA  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4342  0076EC  D7FC               	bra	u1227
  4343  0076EE  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4344  0076F0  D7FA               	bra	u1227
  4345  0076F2  D000               	nop2	
  4346  0076F4                     
  4347                           ;main.c: 124:     oled_clearRow(1);
  4348  0076F4  0E01               	movlw	1
  4349  0076F6  EC1C  F033         	call	_oled_clearRow
  4350  0076FA                     
  4351                           ;main.c: 125:     oled_clearRow(2);
  4352  0076FA  0E02               	movlw	2
  4353  0076FC  EC1C  F033         	call	_oled_clearRow
  4354  007700                     
  4355                           ;main.c: 126:     oled_clearRow(3);
  4356  007700  0E03               	movlw	3
  4357  007702  EC1C  F033         	call	_oled_clearRow
  4358  007706                     
  4359                           ;main.c: 127:     oled_putString("tasa de cod",0,1);
  4360  007706  0E8A               	movlw	low STR_21
  4361  007708  6E0D               	movwf	oled_putString@string^0,c
  4362  00770A  0E7F               	movlw	high STR_21
  4363  00770C  6E0E               	movwf	(oled_putString@string+1)^0,c
  4364  00770E  0E00               	movlw	0
  4365  007710  6E0F               	movwf	oled_putString@station_dot^0,c
  4366  007712  0E01               	movlw	1
  4367  007714  6E10               	movwf	oled_putString@start_page^0,c
  4368  007716  ECD5  F034         	call	_oled_putString	;wreg free
  4369  00771A                     
  4370                           ;main.c: 128:     sendCommand("radio set cr 4/5\r\n");
  4371  00771A  0EFD               	movlw	low STR_22
  4372  00771C  6E02               	movwf	sendCommand@texto^0,c
  4373  00771E  0E7D               	movlw	high STR_22
  4374  007720  6E03               	movwf	(sendCommand@texto+1)^0,c
  4375  007722  ECA9  F033         	call	_sendCommand	;wreg free
  4376  007726                     
  4377                           ;main.c: 129:     sprintf(READ,"%c",get_Data());
  4378  007726  0E33               	movlw	low init_mod_LoRa@READ
  4379  007728  6E23               	movwf	sprintf@s^0,c
  4380  00772A  0E00               	movlw	high init_mod_LoRa@READ
  4381  00772C  6E24               	movwf	(sprintf@s+1)^0,c
  4382  00772E  0EFB               	movlw	low STR_6
  4383  007730  6E25               	movwf	sprintf@fmt^0,c
  4384  007732  0E7F               	movlw	high STR_6
  4385  007734  6E26               	movwf	(sprintf@fmt+1)^0,c
  4386  007736  EC8E  F033         	call	_get_Data	;wreg free
  4387  00773A  C001  F027         	movff	?_get_Data,?_sprintf+4
  4388  00773E  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4389  007742  EC03  F034         	call	_sprintf	;wreg free
  4390  007746                     
  4391                           ;main.c: 130:     oled_putString(READ,0,3);
  4392  007746  0E33               	movlw	low init_mod_LoRa@READ
  4393  007748  6E0D               	movwf	oled_putString@string^0,c
  4394  00774A  0E00               	movlw	high init_mod_LoRa@READ
  4395  00774C  6E0E               	movwf	(oled_putString@string+1)^0,c
  4396  00774E  0E00               	movlw	0
  4397  007750  6E0F               	movwf	oled_putString@station_dot^0,c
  4398  007752  0E03               	movlw	3
  4399  007754  6E10               	movwf	oled_putString@start_page^0,c
  4400  007756  ECD5  F034         	call	_oled_putString	;wreg free
  4401  00775A                     
  4402                           ;main.c: 131:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4403  00775A  0E1F               	movlw	31
  4404  00775C  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4405  00775E  0E71               	movlw	113
  4406  007760  6E31               	movwf	??_init_mod_LoRa^0,c
  4407  007762  0E1E               	movlw	30
  4408  007764                     u1237:
  4409  007764  2EE8               	decfsz	wreg,f,c
  4410  007766  D7FE               	bra	u1237
  4411  007768  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4412  00776A  D7FC               	bra	u1237
  4413  00776C  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4414  00776E  D7FA               	bra	u1237
  4415  007770  D000               	nop2	
  4416  007772                     
  4417                           ;main.c: 133:     oled_clearRow(1);
  4418  007772  0E01               	movlw	1
  4419  007774  EC1C  F033         	call	_oled_clearRow
  4420  007778                     
  4421                           ;main.c: 134:     oled_clearRow(2);
  4422  007778  0E02               	movlw	2
  4423  00777A  EC1C  F033         	call	_oled_clearRow
  4424  00777E                     
  4425                           ;main.c: 135:     oled_clearRow(3);
  4426  00777E  0E03               	movlw	3
  4427  007780  EC1C  F033         	call	_oled_clearRow
  4428  007784                     
  4429                           ;main.c: 136:     oled_putString("mod lora",0,1);
  4430  007784  0ED2               	movlw	low STR_24
  4431  007786  6E0D               	movwf	oled_putString@string^0,c
  4432  007788  0E7F               	movlw	high STR_24
  4433  00778A  6E0E               	movwf	(oled_putString@string+1)^0,c
  4434  00778C  0E00               	movlw	0
  4435  00778E  6E0F               	movwf	oled_putString@station_dot^0,c
  4436  007790  0E01               	movlw	1
  4437  007792  6E10               	movwf	oled_putString@start_page^0,c
  4438  007794  ECD5  F034         	call	_oled_putString	;wreg free
  4439  007798                     
  4440                           ;main.c: 137:     sendCommand("radio set mod lora\r\n");
  4441  007798  0E84               	movlw	low STR_25
  4442  00779A  6E02               	movwf	sendCommand@texto^0,c
  4443  00779C  0E7D               	movlw	high STR_25
  4444  00779E  6E03               	movwf	(sendCommand@texto+1)^0,c
  4445  0077A0  ECA9  F033         	call	_sendCommand	;wreg free
  4446  0077A4                     
  4447                           ;main.c: 138:     sprintf(READ,"%c",get_Data());
  4448  0077A4  0E33               	movlw	low init_mod_LoRa@READ
  4449  0077A6  6E23               	movwf	sprintf@s^0,c
  4450  0077A8  0E00               	movlw	high init_mod_LoRa@READ
  4451  0077AA  6E24               	movwf	(sprintf@s+1)^0,c
  4452  0077AC  0EFB               	movlw	low STR_6
  4453  0077AE  6E25               	movwf	sprintf@fmt^0,c
  4454  0077B0  0E7F               	movlw	high STR_6
  4455  0077B2  6E26               	movwf	(sprintf@fmt+1)^0,c
  4456  0077B4  EC8E  F033         	call	_get_Data	;wreg free
  4457  0077B8  C001  F027         	movff	?_get_Data,?_sprintf+4
  4458  0077BC  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4459  0077C0  EC03  F034         	call	_sprintf	;wreg free
  4460  0077C4                     
  4461                           ;main.c: 139:     oled_putString(READ,0,3);
  4462  0077C4  0E33               	movlw	low init_mod_LoRa@READ
  4463  0077C6  6E0D               	movwf	oled_putString@string^0,c
  4464  0077C8  0E00               	movlw	high init_mod_LoRa@READ
  4465  0077CA  6E0E               	movwf	(oled_putString@string+1)^0,c
  4466  0077CC  0E00               	movlw	0
  4467  0077CE  6E0F               	movwf	oled_putString@station_dot^0,c
  4468  0077D0  0E03               	movlw	3
  4469  0077D2  6E10               	movwf	oled_putString@start_page^0,c
  4470  0077D4  ECD5  F034         	call	_oled_putString	;wreg free
  4471  0077D8                     
  4472                           ;main.c: 140:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4473  0077D8  0E1F               	movlw	31
  4474  0077DA  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4475  0077DC  0E71               	movlw	113
  4476  0077DE  6E31               	movwf	??_init_mod_LoRa^0,c
  4477  0077E0  0E1E               	movlw	30
  4478  0077E2                     u1247:
  4479  0077E2  2EE8               	decfsz	wreg,f,c
  4480  0077E4  D7FE               	bra	u1247
  4481  0077E6  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4482  0077E8  D7FC               	bra	u1247
  4483  0077EA  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4484  0077EC  D7FA               	bra	u1247
  4485  0077EE  D000               	nop2	
  4486  0077F0                     
  4487                           ;main.c: 142:     oled_clearRow(1);
  4488  0077F0  0E01               	movlw	1
  4489  0077F2  EC1C  F033         	call	_oled_clearRow
  4490  0077F6                     
  4491                           ;main.c: 143:     oled_clearRow(2);
  4492  0077F6  0E02               	movlw	2
  4493  0077F8  EC1C  F033         	call	_oled_clearRow
  4494  0077FC                     
  4495                           ;main.c: 144:     oled_clearRow(3);
  4496  0077FC  0E03               	movlw	3
  4497  0077FE  EC1C  F033         	call	_oled_clearRow
  4498  007802                     
  4499                           ;main.c: 145:     oled_putString("inversion",0,1);
  4500  007802  0EB5               	movlw	low STR_27
  4501  007804  6E0D               	movwf	oled_putString@string^0,c
  4502  007806  0E7F               	movlw	high STR_27
  4503  007808  6E0E               	movwf	(oled_putString@string+1)^0,c
  4504  00780A  0E00               	movlw	0
  4505  00780C  6E0F               	movwf	oled_putString@station_dot^0,c
  4506  00780E  0E01               	movlw	1
  4507  007810  6E10               	movwf	oled_putString@start_page^0,c
  4508  007812  ECD5  F034         	call	_oled_putString	;wreg free
  4509  007816                     
  4510                           ;main.c: 146:     sendCommand("radio set iqi off\r\n");
  4511  007816  0ED6               	movlw	low STR_28
  4512  007818  6E02               	movwf	sendCommand@texto^0,c
  4513  00781A  0E7D               	movlw	high STR_28
  4514  00781C  6E03               	movwf	(sendCommand@texto+1)^0,c
  4515  00781E  ECA9  F033         	call	_sendCommand	;wreg free
  4516  007822                     
  4517                           ;main.c: 147:     sprintf(READ,"%c",get_Data());
  4518  007822  0E33               	movlw	low init_mod_LoRa@READ
  4519  007824  6E23               	movwf	sprintf@s^0,c
  4520  007826  0E00               	movlw	high init_mod_LoRa@READ
  4521  007828  6E24               	movwf	(sprintf@s+1)^0,c
  4522  00782A  0EFB               	movlw	low STR_6
  4523  00782C  6E25               	movwf	sprintf@fmt^0,c
  4524  00782E  0E7F               	movlw	high STR_6
  4525  007830  6E26               	movwf	(sprintf@fmt+1)^0,c
  4526  007832  EC8E  F033         	call	_get_Data	;wreg free
  4527  007836  C001  F027         	movff	?_get_Data,?_sprintf+4
  4528  00783A  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4529  00783E  EC03  F034         	call	_sprintf	;wreg free
  4530  007842                     
  4531                           ;main.c: 148:     oled_putString(READ,0,3);
  4532  007842  0E33               	movlw	low init_mod_LoRa@READ
  4533  007844  6E0D               	movwf	oled_putString@string^0,c
  4534  007846  0E00               	movlw	high init_mod_LoRa@READ
  4535  007848  6E0E               	movwf	(oled_putString@string+1)^0,c
  4536  00784A  0E00               	movlw	0
  4537  00784C  6E0F               	movwf	oled_putString@station_dot^0,c
  4538  00784E  0E03               	movlw	3
  4539  007850  6E10               	movwf	oled_putString@start_page^0,c
  4540  007852  ECD5  F034         	call	_oled_putString	;wreg free
  4541  007856                     
  4542                           ;main.c: 149:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4543  007856  0E1F               	movlw	31
  4544  007858  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4545  00785A  0E71               	movlw	113
  4546  00785C  6E31               	movwf	??_init_mod_LoRa^0,c
  4547  00785E  0E1E               	movlw	30
  4548  007860                     u1257:
  4549  007860  2EE8               	decfsz	wreg,f,c
  4550  007862  D7FE               	bra	u1257
  4551  007864  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4552  007866  D7FC               	bra	u1257
  4553  007868  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4554  00786A  D7FA               	bra	u1257
  4555  00786C  D000               	nop2	
  4556  00786E                     
  4557                           ;main.c: 151:     oled_clearRow(1);
  4558  00786E  0E01               	movlw	1
  4559  007870  EC1C  F033         	call	_oled_clearRow
  4560  007874                     
  4561                           ;main.c: 152:     oled_clearRow(2);
  4562  007874  0E02               	movlw	2
  4563  007876  EC1C  F033         	call	_oled_clearRow
  4564  00787A                     
  4565                           ;main.c: 153:     oled_clearRow(3);
  4566  00787A  0E03               	movlw	3
  4567  00787C  EC1C  F033         	call	_oled_clearRow
  4568  007880                     
  4569                           ;main.c: 154:     oled_putString("wdt",0,1);
  4570  007880  0EF7               	movlw	low STR_30
  4571  007882  6E0D               	movwf	oled_putString@string^0,c
  4572  007884  0E7F               	movlw	high STR_30
  4573  007886  6E0E               	movwf	(oled_putString@string+1)^0,c
  4574  007888  0E00               	movlw	0
  4575  00788A  6E0F               	movwf	oled_putString@station_dot^0,c
  4576  00788C  0E01               	movlw	1
  4577  00788E  6E10               	movwf	oled_putString@start_page^0,c
  4578  007890  ECD5  F034         	call	_oled_putString	;wreg free
  4579  007894                     
  4580                           ;main.c: 155:     sendCommand("radio set wdt 15000\r\n");
  4581  007894  0E6E               	movlw	low STR_31
  4582  007896  6E02               	movwf	sendCommand@texto^0,c
  4583  007898  0E7D               	movlw	high STR_31
  4584  00789A  6E03               	movwf	(sendCommand@texto+1)^0,c
  4585  00789C  ECA9  F033         	call	_sendCommand	;wreg free
  4586  0078A0                     
  4587                           ;main.c: 156:     sprintf(READ,"%c",get_Data());
  4588  0078A0  0E33               	movlw	low init_mod_LoRa@READ
  4589  0078A2  6E23               	movwf	sprintf@s^0,c
  4590  0078A4  0E00               	movlw	high init_mod_LoRa@READ
  4591  0078A6  6E24               	movwf	(sprintf@s+1)^0,c
  4592  0078A8  0EFB               	movlw	low STR_6
  4593  0078AA  6E25               	movwf	sprintf@fmt^0,c
  4594  0078AC  0E7F               	movlw	high STR_6
  4595  0078AE  6E26               	movwf	(sprintf@fmt+1)^0,c
  4596  0078B0  EC8E  F033         	call	_get_Data	;wreg free
  4597  0078B4  C001  F027         	movff	?_get_Data,?_sprintf+4
  4598  0078B8  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4599  0078BC  EC03  F034         	call	_sprintf	;wreg free
  4600  0078C0                     
  4601                           ;main.c: 157:     oled_putString(READ,0,3);
  4602  0078C0  0E33               	movlw	low init_mod_LoRa@READ
  4603  0078C2  6E0D               	movwf	oled_putString@string^0,c
  4604  0078C4  0E00               	movlw	high init_mod_LoRa@READ
  4605  0078C6  6E0E               	movwf	(oled_putString@string+1)^0,c
  4606  0078C8  0E00               	movlw	0
  4607  0078CA  6E0F               	movwf	oled_putString@station_dot^0,c
  4608  0078CC  0E03               	movlw	3
  4609  0078CE  6E10               	movwf	oled_putString@start_page^0,c
  4610  0078D0  ECD5  F034         	call	_oled_putString	;wreg free
  4611  0078D4                     
  4612                           ;main.c: 158:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4613  0078D4  0E1F               	movlw	31
  4614  0078D6  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4615  0078D8  0E71               	movlw	113
  4616  0078DA  6E31               	movwf	??_init_mod_LoRa^0,c
  4617  0078DC  0E1E               	movlw	30
  4618  0078DE                     u1267:
  4619  0078DE  2EE8               	decfsz	wreg,f,c
  4620  0078E0  D7FE               	bra	u1267
  4621  0078E2  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4622  0078E4  D7FC               	bra	u1267
  4623  0078E6  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4624  0078E8  D7FA               	bra	u1267
  4625  0078EA  D000               	nop2	
  4626  0078EC                     
  4627                           ;main.c: 160:     oled_clearRow(1);
  4628  0078EC  0E01               	movlw	1
  4629  0078EE  EC1C  F033         	call	_oled_clearRow
  4630  0078F2                     
  4631                           ;main.c: 161:     oled_clearRow(2);
  4632  0078F2  0E02               	movlw	2
  4633  0078F4  EC1C  F033         	call	_oled_clearRow
  4634  0078F8                     
  4635                           ;main.c: 162:     oled_clearRow(3);
  4636  0078F8  0E03               	movlw	3
  4637  0078FA  EC1C  F033         	call	_oled_clearRow
  4638  0078FE                     
  4639                           ;main.c: 163:     oled_putString("factor de dispersion",0,1);
  4640  0078FE  0E99               	movlw	low STR_33
  4641  007900  6E0D               	movwf	oled_putString@string^0,c
  4642  007902  0E7D               	movlw	high STR_33
  4643  007904  6E0E               	movwf	(oled_putString@string+1)^0,c
  4644  007906  0E00               	movlw	0
  4645  007908  6E0F               	movwf	oled_putString@station_dot^0,c
  4646  00790A  0E01               	movlw	1
  4647  00790C  6E10               	movwf	oled_putString@start_page^0,c
  4648  00790E  ECD5  F034         	call	_oled_putString	;wreg free
  4649  007912                     
  4650                           ;main.c: 164:     sendCommand("radio set sf SF12\r\n");
  4651  007912  0EAE               	movlw	low STR_34
  4652  007914  6E02               	movwf	sendCommand@texto^0,c
  4653  007916  0E7D               	movlw	high STR_34
  4654  007918  6E03               	movwf	(sendCommand@texto+1)^0,c
  4655  00791A  ECA9  F033         	call	_sendCommand	;wreg free
  4656  00791E                     
  4657                           ;main.c: 165:     sprintf(READ,"%c",get_Data());
  4658  00791E  0E33               	movlw	low init_mod_LoRa@READ
  4659  007920  6E23               	movwf	sprintf@s^0,c
  4660  007922  0E00               	movlw	high init_mod_LoRa@READ
  4661  007924  6E24               	movwf	(sprintf@s+1)^0,c
  4662  007926  0EFB               	movlw	low STR_6
  4663  007928  6E25               	movwf	sprintf@fmt^0,c
  4664  00792A  0E7F               	movlw	high STR_6
  4665  00792C  6E26               	movwf	(sprintf@fmt+1)^0,c
  4666  00792E  EC8E  F033         	call	_get_Data	;wreg free
  4667  007932  C001  F027         	movff	?_get_Data,?_sprintf+4
  4668  007936  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4669  00793A  EC03  F034         	call	_sprintf	;wreg free
  4670  00793E                     
  4671                           ;main.c: 166:     oled_putString(READ,0,3);
  4672  00793E  0E33               	movlw	low init_mod_LoRa@READ
  4673  007940  6E0D               	movwf	oled_putString@string^0,c
  4674  007942  0E00               	movlw	high init_mod_LoRa@READ
  4675  007944  6E0E               	movwf	(oled_putString@string+1)^0,c
  4676  007946  0E00               	movlw	0
  4677  007948  6E0F               	movwf	oled_putString@station_dot^0,c
  4678  00794A  0E03               	movlw	3
  4679  00794C  6E10               	movwf	oled_putString@start_page^0,c
  4680  00794E  ECD5  F034         	call	_oled_putString	;wreg free
  4681  007952                     
  4682                           ;main.c: 167:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4683  007952  0E1F               	movlw	31
  4684  007954  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4685  007956  0E71               	movlw	113
  4686  007958  6E31               	movwf	??_init_mod_LoRa^0,c
  4687  00795A  0E1E               	movlw	30
  4688  00795C                     u1277:
  4689  00795C  2EE8               	decfsz	wreg,f,c
  4690  00795E  D7FE               	bra	u1277
  4691  007960  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4692  007962  D7FC               	bra	u1277
  4693  007964  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4694  007966  D7FA               	bra	u1277
  4695  007968  D000               	nop2	
  4696  00796A                     
  4697                           ;main.c: 169:     oled_clearRow(1);
  4698  00796A  0E01               	movlw	1
  4699  00796C  EC1C  F033         	call	_oled_clearRow
  4700  007970                     
  4701                           ;main.c: 170:     oled_clearRow(2);
  4702  007970  0E02               	movlw	2
  4703  007972  EC1C  F033         	call	_oled_clearRow
  4704  007976                     
  4705                           ;main.c: 171:     oled_clearRow(3);
  4706  007976  0E03               	movlw	3
  4707  007978  EC1C  F033         	call	_oled_clearRow
  4708  00797C                     
  4709                           ;main.c: 172:     oled_putString("sync",0,1);
  4710  00797C  0EF2               	movlw	low STR_36
  4711  00797E  6E0D               	movwf	oled_putString@string^0,c
  4712  007980  0E7F               	movlw	high STR_36
  4713  007982  6E0E               	movwf	(oled_putString@string+1)^0,c
  4714  007984  0E00               	movlw	0
  4715  007986  6E0F               	movwf	oled_putString@station_dot^0,c
  4716  007988  0E01               	movlw	1
  4717  00798A  6E10               	movwf	oled_putString@start_page^0,c
  4718  00798C  ECD5  F034         	call	_oled_putString	;wreg free
  4719  007990                     
  4720                           ;main.c: 173:     sendCommand("radio set sync 34\r\n");
  4721  007990  0EC2               	movlw	low STR_37
  4722  007992  6E02               	movwf	sendCommand@texto^0,c
  4723  007994  0E7D               	movlw	high STR_37
  4724  007996  6E03               	movwf	(sendCommand@texto+1)^0,c
  4725  007998  ECA9  F033         	call	_sendCommand	;wreg free
  4726  00799C                     
  4727                           ;main.c: 174:     sprintf(READ,"%c",get_Data());
  4728  00799C  0E33               	movlw	low init_mod_LoRa@READ
  4729  00799E  6E23               	movwf	sprintf@s^0,c
  4730  0079A0  0E00               	movlw	high init_mod_LoRa@READ
  4731  0079A2  6E24               	movwf	(sprintf@s+1)^0,c
  4732  0079A4  0EFB               	movlw	low STR_6
  4733  0079A6  6E25               	movwf	sprintf@fmt^0,c
  4734  0079A8  0E7F               	movlw	high STR_6
  4735  0079AA  6E26               	movwf	(sprintf@fmt+1)^0,c
  4736  0079AC  EC8E  F033         	call	_get_Data	;wreg free
  4737  0079B0  C001  F027         	movff	?_get_Data,?_sprintf+4
  4738  0079B4  C002  F028         	movff	?_get_Data+1,?_sprintf+5
  4739  0079B8  EC03  F034         	call	_sprintf	;wreg free
  4740  0079BC                     
  4741                           ;main.c: 175:     oled_putString(READ,0,3);
  4742  0079BC  0E33               	movlw	low init_mod_LoRa@READ
  4743  0079BE  6E0D               	movwf	oled_putString@string^0,c
  4744  0079C0  0E00               	movlw	high init_mod_LoRa@READ
  4745  0079C2  6E0E               	movwf	(oled_putString@string+1)^0,c
  4746  0079C4  0E00               	movlw	0
  4747  0079C6  6E0F               	movwf	oled_putString@station_dot^0,c
  4748  0079C8  0E03               	movlw	3
  4749  0079CA  6E10               	movwf	oled_putString@start_page^0,c
  4750  0079CC  ECD5  F034         	call	_oled_putString	;wreg free
  4751  0079D0                     
  4752                           ;main.c: 176:     _delay((unsigned long)((500)*(48000000/4000.0)));
  4753  0079D0  0E1F               	movlw	31
  4754  0079D2  6E32               	movwf	(??_init_mod_LoRa+1)^0,c
  4755  0079D4  0E71               	movlw	113
  4756  0079D6  6E31               	movwf	??_init_mod_LoRa^0,c
  4757  0079D8  0E1E               	movlw	30
  4758  0079DA                     u1287:
  4759  0079DA  2EE8               	decfsz	wreg,f,c
  4760  0079DC  D7FE               	bra	u1287
  4761  0079DE  2E31               	decfsz	??_init_mod_LoRa^0,f,c
  4762  0079E0  D7FC               	bra	u1287
  4763  0079E2  2E32               	decfsz	(??_init_mod_LoRa+1)^0,f,c
  4764  0079E4  D7FA               	bra	u1287
  4765  0079E6  D000               	nop2	
  4766  0079E8  0012               	return		;funcret
  4767  0079EA                     __end_of_init_mod_LoRa:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _sprintf *****************
  4771 ;; Defined at:
  4772 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  s               2   34[COMRAM] PTR unsigned char 
  4775 ;;		 -> main@read(32), test_leds_LoRa@READ(10), init_mod_LoRa@READ(10), 
  4776 ;;  fmt             2   36[COMRAM] PTR const unsigned char 
  4777 ;;		 -> STR_81(3), STR_77(3), STR_74(3), STR_71(3), 
  4778 ;;		 -> STR_68(3), STR_65(3), STR_62(3), STR_59(3), 
  4779 ;;		 -> STR_56(3), STR_53(3), STR_50(3), STR_47(3), 
  4780 ;;		 -> STR_44(3), STR_41(3), STR_38(3), STR_35(3), 
  4781 ;;		 -> STR_32(3), STR_29(3), STR_26(3), STR_23(3), 
  4782 ;;		 -> STR_20(3), STR_17(3), STR_14(3), STR_11(3), 
  4783 ;;		 -> STR_7(3), STR_6(3), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  f               6   42[COMRAM] struct _IO_FILE
  4786 ;;  ap              2   40[COMRAM] PTR void [1]
  4787 ;;		 -> ?_sprintf(2), 
  4788 ;;  ret             2    0        int 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2   34[COMRAM] int 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         6       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4802 ;;Total ram usage:       14 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 5
  4805 ;; This function calls:
  4806 ;;		_vfprintf
  4807 ;; This function is called by:
  4808 ;;		_init_mod_LoRa
  4809 ;;		_main
  4810 ;;		_test_leds_LoRa
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text14
  4815  006806                     __ptext14:
  4816                           	callstack 0
  4817  006806                     _sprintf:
  4818                           	callstack 25
  4819  006806  0E27               	movlw	low (?_sprintf+4)
  4820  006808  6E29               	movwf	sprintf@ap^0,c
  4821  00680A  0E00               	movlw	high (?_sprintf+4)
  4822  00680C  6E2A               	movwf	(sprintf@ap+1)^0,c
  4823  00680E  C023  F02B         	movff	sprintf@s,sprintf@f
  4824  006812  C024  F02C         	movff	sprintf@s+1,sprintf@f+1
  4825  006816  0E00               	movlw	0
  4826  006818  6E2E               	movwf	(sprintf@f+3)^0,c
  4827  00681A  0E00               	movlw	0
  4828  00681C  6E2D               	movwf	(sprintf@f+2)^0,c
  4829  00681E  0E00               	movlw	0
  4830  006820  6E30               	movwf	(sprintf@f+5)^0,c
  4831  006822  0E00               	movlw	0
  4832  006824  6E2F               	movwf	(sprintf@f+4)^0,c
  4833  006826  0E2B               	movlw	low sprintf@f
  4834  006828  6E1B               	movwf	vfprintf@fp^0,c
  4835  00682A  0E00               	movlw	high sprintf@f
  4836  00682C  6E1C               	movwf	(vfprintf@fp+1)^0,c
  4837  00682E  C025  F01D         	movff	sprintf@fmt,vfprintf@fmt
  4838  006832  C026  F01E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4839  006836  0E29               	movlw	low sprintf@ap
  4840  006838  6E1F               	movwf	vfprintf@ap^0,c
  4841  00683A  0E00               	movlw	high sprintf@ap
  4842  00683C  6E20               	movwf	(vfprintf@ap+1)^0,c
  4843  00683E  EC2A  F034         	call	_vfprintf	;wreg free
  4844  006842  502D               	movf	(sprintf@f+2)^0,w,c
  4845  006844  2423               	addwf	sprintf@s^0,w,c
  4846  006846  6ED9               	movwf	fsr2l,c
  4847  006848  502E               	movf	(sprintf@f+3)^0,w,c
  4848  00684A  2024               	addwfc	(sprintf@s+1)^0,w,c
  4849  00684C  6EDA               	movwf	fsr2h,c
  4850  00684E  0E00               	movlw	0
  4851  006850  6EDF               	movwf	indf2,c
  4852  006852  0012               	return		;funcret
  4853  006854                     __end_of_sprintf:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _vfprintf *****************
  4857 ;; Defined at:
  4858 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  4861 ;;		 -> sprintf@f(6), 
  4862 ;;  fmt             2   28[COMRAM] PTR const unsigned char 
  4863 ;;		 -> STR_81(3), STR_77(3), STR_74(3), STR_71(3), 
  4864 ;;		 -> STR_68(3), STR_65(3), STR_62(3), STR_59(3), 
  4865 ;;		 -> STR_56(3), STR_53(3), STR_50(3), STR_47(3), 
  4866 ;;		 -> STR_44(3), STR_41(3), STR_38(3), STR_35(3), 
  4867 ;;		 -> STR_32(3), STR_29(3), STR_26(3), STR_23(3), 
  4868 ;;		 -> STR_20(3), STR_17(3), STR_14(3), STR_11(3), 
  4869 ;;		 -> STR_7(3), STR_6(3), 
  4870 ;;  ap              2   30[COMRAM] PTR PTR void 
  4871 ;;		 -> sprintf@ap(2), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  4874 ;;		 -> STR_81(3), STR_77(3), STR_74(3), STR_71(3), 
  4875 ;;		 -> STR_68(3), STR_65(3), STR_62(3), STR_59(3), 
  4876 ;;		 -> STR_56(3), STR_53(3), STR_50(3), STR_47(3), 
  4877 ;;		 -> STR_44(3), STR_41(3), STR_38(3), STR_35(3), 
  4878 ;;		 -> STR_32(3), STR_29(3), STR_26(3), STR_23(3), 
  4879 ;;		 -> STR_20(3), STR_17(3), STR_14(3), STR_11(3), 
  4880 ;;		 -> STR_7(3), STR_6(3), 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  2   26[COMRAM] int 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4890 ;;      Params:         6       0       0       0       0       0       0       0       0
  4891 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4893 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4894 ;;Total ram usage:        8 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 4
  4897 ;; This function calls:
  4898 ;;		_vfpfcnvrt
  4899 ;; This function is called by:
  4900 ;;		_sprintf
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text15
  4905  006854                     __ptext15:
  4906                           	callstack 0
  4907  006854                     _vfprintf:
  4908                           	callstack 25
  4909  006854                     
  4910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4911  006854  C01D  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  4912  006858  C01E  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4913  00685C                     
  4914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4915  00685C  0E00               	movlw	0
  4916  00685E  0100               	movlb	0	; () banked
  4917  006860  6F81               	movwf	(_nout+1)& (0+255),b
  4918  006862  0E00               	movlw	0
  4919  006864  6F80               	movwf	_nout& (0+255),b
  4920                           
  4921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4922  006866  EF48  F034         	goto	l2192
  4923  00686A                     l2190:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4927  00686A  C01B  F012         	movff	vfprintf@fp,vfpfcnvrt@fp
  4928  00686E  C01C  F013         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4929  006872  0E21               	movlw	low vfprintf@cfmt
  4930  006874  6E14               	movwf	vfpfcnvrt@fmt^0,c
  4931  006876  0E00               	movlw	high vfprintf@cfmt
  4932  006878  6E15               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4933  00687A  C01F  F016         	movff	vfprintf@ap,vfpfcnvrt@ap
  4934  00687E  C020  F017         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4935  006882  ECE8  F036         	call	_vfpfcnvrt	;wreg free
  4936  006886  5012               	movf	?_vfpfcnvrt^0,w,c
  4937  006888  0100               	movlb	0	; () banked
  4938  00688A  2780               	addwf	_nout& (0+255),f,b
  4939  00688C  5013               	movf	(?_vfpfcnvrt+1)^0,w,c
  4940  00688E  2381               	addwfc	(_nout+1)& (0+255),f,b
  4941  006890                     l2192:
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4945  006890  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  4946  006894  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4947  006898                     	if	0	;tblptru may be non-zero
  4948  006898                     	endif
  4949  006898                     	if	0	;tblptru may be non-zero
  4950  006898                     	endif
  4951  006898  0008               	tblrd		*
  4952  00689A  50F5               	movf	tablat,w,c
  4953  00689C  0900               	iorlw	0
  4954  00689E  A4D8               	btfss	status,2,c
  4955  0068A0  EF54  F034         	goto	u711
  4956  0068A4  EF56  F034         	goto	u710
  4957  0068A8                     u711:
  4958  0068A8  EF35  F034         	goto	l2190
  4959  0068AC                     u710:
  4960  0068AC                     
  4961                           ; BSR set to: 0
  4962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4963  0068AC  C080  F01B         	movff	_nout,?_vfprintf
  4964  0068B0  C081  F01C         	movff	_nout+1,?_vfprintf+1
  4965  0068B4                     
  4966                           ; BSR set to: 0
  4967  0068B4  0012               	return		;funcret
  4968  0068B6                     __end_of_vfprintf:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _vfpfcnvrt *****************
  4972 ;; Defined at:
  4973 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4976 ;;		 -> sprintf@f(6), 
  4977 ;;  fmt             2   19[COMRAM] PTR PTR unsigned char 
  4978 ;;		 -> vfprintf@cfmt(2), 
  4979 ;;  ap              2   21[COMRAM] PTR PTR void 
  4980 ;;		 -> sprintf@ap(2), 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  llu             8    0        unsigned long long 
  4983 ;;  ll              8    0        long long 
  4984 ;;  f               4    0        long long 
  4985 ;;  vp              3    0        PTR void 
  4986 ;;  ct              3    0        unsigned char [3]
  4987 ;;  cp              3    0        PTR unsigned char 
  4988 ;;  i               2    0        int 
  4989 ;;  done            2    0        int 
  4990 ;;  c               1   25[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   17[COMRAM] int 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5000 ;;      Params:         6       0       0       0       0       0       0       0       0
  5001 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5002 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5003 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        9 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 3
  5007 ;; This function calls:
  5008 ;;		_ctoa
  5009 ;;		_fputc
  5010 ;; This function is called by:
  5011 ;;		_vfprintf
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text16
  5016  006DD0                     __ptext16:
  5017                           	callstack 0
  5018  006DD0                     _vfpfcnvrt:
  5019                           	callstack 25
  5020  006DD0                     
  5021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5022  006DD0  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5023  006DD4  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5024  006DD8  CFDE FFF6          	movff	postinc2,tblptrl
  5025  006DDC  CFDD FFF7          	movff	postdec2,tblptrh
  5026  006DE0                     	if	0	;tblptru may be non-zero
  5027  006DE0                     	endif
  5028  006DE0                     	if	0	;tblptru may be non-zero
  5029  006DE0                     	endif
  5030  006DE0  0008               	tblrd		*
  5031  006DE2  50F5               	movf	tablat,w,c
  5032  006DE4  0A25               	xorlw	37
  5033  006DE6  A4D8               	btfss	status,2,c
  5034  006DE8  EFF8  F036         	goto	u671
  5035  006DEC  EFFA  F036         	goto	u670
  5036  006DF0                     u671:
  5037  006DF0  EF7B  F037         	goto	l2140
  5038  006DF4                     u670:
  5039  006DF4                     
  5040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5041  006DF4  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5042  006DF8  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5043  006DFC  2ADE               	incf	postinc2,f,c
  5044  006DFE  0E00               	movlw	0
  5045  006E00  22DD               	addwfc	postdec2,f,c
  5046  006E02                     
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5048  006E02  0E00               	movlw	0
  5049  006E04  0100               	movlb	0	; () banked
  5050  006E06  6F83               	movwf	(_width+1)& (0+255),b
  5051  006E08  0E00               	movlw	0
  5052  006E0A  6F82               	movwf	_width& (0+255),b
  5053  006E0C  C082  F086         	movff	_width,_flags
  5054  006E10  C083  F087         	movff	_width+1,_flags+1
  5055  006E14                     
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5058  006E14  6984               	setf	_prec& (0+255),b
  5059  006E16  6985               	setf	(_prec+1)& (0+255),b
  5060  006E18                     
  5061                           ; BSR set to: 0
  5062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  5063  006E18  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5064  006E1C  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5065  006E20  CFDE FFF6          	movff	postinc2,tblptrl
  5066  006E24  CFDD FFF7          	movff	postdec2,tblptrh
  5067  006E28                     	if	0	;tblptru may be non-zero
  5068  006E28                     	endif
  5069  006E28                     	if	0	;tblptru may be non-zero
  5070  006E28                     	endif
  5071  006E28  0008               	tblrd		*
  5072  006E2A  50F5               	movf	tablat,w,c
  5073  006E2C  0A63               	xorlw	99
  5074  006E2E  A4D8               	btfss	status,2,c
  5075  006E30  EF1C  F037         	goto	u681
  5076  006E34  EF1E  F037         	goto	u680
  5077  006E38                     u681:
  5078  006E38  EF45  F037         	goto	l2124
  5079  006E3C                     u680:
  5080  006E3C                     
  5081                           ; BSR set to: 0
  5082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  5083  006E3C  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5084  006E40  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5085  006E44  2ADE               	incf	postinc2,f,c
  5086  006E46  0E00               	movlw	0
  5087  006E48  22DD               	addwfc	postdec2,f,c
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5090  006E4A  C016  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5091  006E4E  C017  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5092  006E52  CFDF F018          	movff	indf2,??_vfpfcnvrt
  5093  006E56  0E02               	movlw	2
  5094  006E58  26DE               	addwf	postinc2,f,c
  5095  006E5A  CFDF F019          	movff	indf2,??_vfpfcnvrt+1
  5096  006E5E  0E00               	movlw	0
  5097  006E60  22DD               	addwfc	postdec2,f,c
  5098  006E62  C018  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5099  006E66  C019  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5100  006E6A  50DF               	movf	indf2,w,c
  5101  006E6C  6E1A               	movwf	vfpfcnvrt@c^0,c
  5102  006E6E                     
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  5105  006E6E  C012  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  5106  006E72  C013  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5107  006E76  C01A  F00C         	movff	vfpfcnvrt@c,ctoa@c
  5108  006E7A  EC7C  F036         	call	_ctoa	;wreg free
  5109  006E7E  C00A  F012         	movff	?_ctoa,?_vfpfcnvrt
  5110  006E82  C00B  F013         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5111  006E86  EF96  F037         	goto	l1096
  5112  006E8A                     l2124:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5116  006E8A  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5117  006E8E  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5118  006E92  CFDE FFF6          	movff	postinc2,tblptrl
  5119  006E96  CFDD FFF7          	movff	postdec2,tblptrh
  5120  006E9A                     	if	0	;tblptru may be non-zero
  5121  006E9A                     	endif
  5122  006E9A                     	if	0	;tblptru may be non-zero
  5123  006E9A                     	endif
  5124  006E9A  0008               	tblrd		*
  5125  006E9C  50F5               	movf	tablat,w,c
  5126  006E9E  0A25               	xorlw	37
  5127  006EA0  A4D8               	btfss	status,2,c
  5128  006EA2  EF55  F037         	goto	u691
  5129  006EA6  EF57  F037         	goto	u690
  5130  006EAA                     u691:
  5131  006EAA  EF6E  F037         	goto	l2134
  5132  006EAE                     u690:
  5133  006EAE                     
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5136  006EAE  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5137  006EB2  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5138  006EB6  2ADE               	incf	postinc2,f,c
  5139  006EB8  0E00               	movlw	0
  5140  006EBA  22DD               	addwfc	postdec2,f,c
  5141  006EBC                     
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5144  006EBC  0E00               	movlw	0
  5145  006EBE  6E02               	movwf	(fputc@c+1)^0,c
  5146  006EC0  0E25               	movlw	37
  5147  006EC2  6E01               	movwf	fputc@c^0,c
  5148  006EC4  C012  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5149  006EC8  C013  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5150  006ECC  EC17  F036         	call	_fputc	;wreg free
  5151  006ED0                     l2130:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5154  006ED0  0E00               	movlw	0
  5155  006ED2  6E13               	movwf	(?_vfpfcnvrt+1)^0,c
  5156  006ED4  0E01               	movlw	1
  5157  006ED6  6E12               	movwf	?_vfpfcnvrt^0,c
  5158  006ED8  EF96  F037         	goto	l1096
  5159  006EDC                     l2134:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5163  006EDC  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5164  006EE0  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5165  006EE4  2ADE               	incf	postinc2,f,c
  5166  006EE6  0E00               	movlw	0
  5167  006EE8  22DD               	addwfc	postdec2,f,c
  5168  006EEA                     
  5169                           ; BSR set to: 0
  5170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5171  006EEA  0E00               	movlw	0
  5172  006EEC  6E13               	movwf	(?_vfpfcnvrt+1)^0,c
  5173  006EEE  0E00               	movlw	0
  5174  006EF0  6E12               	movwf	?_vfpfcnvrt^0,c
  5175  006EF2  EF96  F037         	goto	l1096
  5176  006EF6                     l2140:
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5179  006EF6  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5180  006EFA  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5181  006EFE  CFDE FFF6          	movff	postinc2,tblptrl
  5182  006F02  CFDD FFF7          	movff	postdec2,tblptrh
  5183  006F06                     	if	0	;tblptru may be non-zero
  5184  006F06                     	endif
  5185  006F06                     	if	0	;tblptru may be non-zero
  5186  006F06                     	endif
  5187  006F06  0008               	tblrd		*
  5188  006F08  50F5               	movf	tablat,w,c
  5189  006F0A  6E01               	movwf	fputc@c^0,c
  5190  006F0C  6A02               	clrf	(fputc@c+1)^0,c
  5191  006F0E  C012  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5192  006F12  C013  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5193  006F16  EC17  F036         	call	_fputc	;wreg free
  5194  006F1A                     
  5195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5196  006F1A  C014  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5197  006F1E  C015  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5198  006F22  2ADE               	incf	postinc2,f,c
  5199  006F24  0E00               	movlw	0
  5200  006F26  22DD               	addwfc	postdec2,f,c
  5201  006F28  EF68  F037         	goto	l2130
  5202  006F2C                     l1096:
  5203  006F2C  0012               	return		;funcret
  5204  006F2E                     __end_of_vfpfcnvrt:
  5205                           	callstack 0
  5206                           
  5207 ;; *************** function _ctoa *****************
  5208 ;; Defined at:
  5209 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5212 ;;		 -> sprintf@f(6), 
  5213 ;;  c               1   11[COMRAM] unsigned char 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  w               2   15[COMRAM] int 
  5216 ;;  l               2   13[COMRAM] int 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    9[COMRAM] int 
  5219 ;; Registers used:
  5220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5226 ;;      Params:         3       0       0       0       0       0       0       0       0
  5227 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5229 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5230 ;;Total ram usage:        8 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 2
  5233 ;; This function calls:
  5234 ;;		_fputc
  5235 ;; This function is called by:
  5236 ;;		_vfpfcnvrt
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text17
  5241  006CF8                     __ptext17:
  5242                           	callstack 0
  5243  006CF8                     _ctoa:
  5244                           	callstack 25
  5245  006CF8                     
  5246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  5247  006CF8  0100               	movlb	0	; () banked
  5248  006CFA  5182               	movf	_width& (0+255),w,b
  5249  006CFC  1183               	iorwf	(_width+1)& (0+255),w,b
  5250  006CFE  A4D8               	btfss	status,2,c
  5251  006D00  EF84  F036         	goto	u611
  5252  006D04  EF86  F036         	goto	u610
  5253  006D08                     u611:
  5254  006D08  EF8C  F036         	goto	l2068
  5255  006D0C                     u610:
  5256  006D0C                     
  5257                           ; BSR set to: 0
  5258  006D0C  C082  F010         	movff	_width,ctoa@w
  5259  006D10  C083  F011         	movff	_width+1,ctoa@w+1
  5260  006D14  EF92  F036         	goto	l2070
  5261  006D18                     l2068:
  5262                           
  5263                           ; BSR set to: 0
  5264  006D18  0EFF               	movlw	255
  5265  006D1A  2582               	addwf	_width& (0+255),w,b
  5266  006D1C  6E10               	movwf	ctoa@w^0,c
  5267  006D1E  0EFF               	movlw	255
  5268  006D20  2183               	addwfc	(_width+1)& (0+255),w,b
  5269  006D22  6E11               	movwf	(ctoa@w+1)^0,c
  5270  006D24                     l2070:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  5274  006D24  A186               	btfss	_flags& (0+255),0,b
  5275  006D26  EF97  F036         	goto	u621
  5276  006D2A  EF99  F036         	goto	u620
  5277  006D2E                     u621:
  5278  006D2E  EFA2  F036         	goto	l2074
  5279  006D32                     u620:
  5280  006D32                     
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  5283  006D32  C00C  F001         	movff	ctoa@c,fputc@c
  5284  006D36  6A02               	clrf	(fputc@c+1)^0,c
  5285  006D38  C00A  F003         	movff	ctoa@fp,fputc@fp
  5286  006D3C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  5287  006D40  EC17  F036         	call	_fputc	;wreg free
  5288  006D44                     l2074:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  5291  006D44  BE11               	btfsc	(ctoa@w+1)^0,7,c
  5292  006D46  EFA7  F036         	goto	u631
  5293  006D4A  EFA9  F036         	goto	u630
  5294  006D4E                     u631:
  5295  006D4E  EFAB  F036         	goto	l2078
  5296  006D52                     u630:
  5297  006D52  EFAF  F036         	goto	l1086
  5298  006D56                     l2078:
  5299  006D56  0E00               	movlw	0
  5300  006D58  6E11               	movwf	(ctoa@w+1)^0,c
  5301  006D5A  0E00               	movlw	0
  5302  006D5C  6E10               	movwf	ctoa@w^0,c
  5303  006D5E                     l1086:
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  5306  006D5E  0E00               	movlw	0
  5307  006D60  6E0F               	movwf	(ctoa@l+1)^0,c
  5308  006D62  0E00               	movlw	0
  5309  006D64  6E0E               	movwf	ctoa@l^0,c
  5310                           
  5311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5312  006D66  EFC1  F036         	goto	l2084
  5313  006D6A                     l2080:
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  5316  006D6A  0E00               	movlw	0
  5317  006D6C  6E02               	movwf	(fputc@c+1)^0,c
  5318  006D6E  0E20               	movlw	32
  5319  006D70  6E01               	movwf	fputc@c^0,c
  5320  006D72  C00A  F003         	movff	ctoa@fp,fputc@fp
  5321  006D76  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  5322  006D7A  EC17  F036         	call	_fputc	;wreg free
  5323  006D7E                     
  5324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  5325  006D7E  4A0E               	infsnz	ctoa@l^0,f,c
  5326  006D80  2A0F               	incf	(ctoa@l+1)^0,f,c
  5327  006D82                     l2084:
  5328                           
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5330  006D82  5010               	movf	ctoa@w^0,w,c
  5331  006D84  5C0E               	subwf	ctoa@l^0,w,c
  5332  006D86  500F               	movf	(ctoa@l+1)^0,w,c
  5333  006D88  0A80               	xorlw	128
  5334  006D8A  6E0D               	movwf	??_ctoa^0,c
  5335  006D8C  5011               	movf	(ctoa@w+1)^0,w,c
  5336  006D8E  0A80               	xorlw	128
  5337  006D90  580D               	subwfb	??_ctoa^0,w,c
  5338  006D92  A0D8               	btfss	status,0,c
  5339  006D94  EFCE  F036         	goto	u641
  5340  006D98  EFD0  F036         	goto	u640
  5341  006D9C                     u641:
  5342  006D9C  EFB5  F036         	goto	l2080
  5343  006DA0                     u640:
  5344  006DA0                     
  5345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  5346  006DA0  0100               	movlb	0	; () banked
  5347  006DA2  B186               	btfsc	_flags& (0+255),0,b
  5348  006DA4  EFD6  F036         	goto	u651
  5349  006DA8  EFD8  F036         	goto	u650
  5350  006DAC                     u651:
  5351  006DAC  EFE1  F036         	goto	l2088
  5352  006DB0                     u650:
  5353  006DB0                     
  5354                           ; BSR set to: 0
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  5356  006DB0  C00C  F001         	movff	ctoa@c,fputc@c
  5357  006DB4  6A02               	clrf	(fputc@c+1)^0,c
  5358  006DB6  C00A  F003         	movff	ctoa@fp,fputc@fp
  5359  006DBA  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  5360  006DBE  EC17  F036         	call	_fputc	;wreg free
  5361  006DC2                     l2088:
  5362                           
  5363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  5364  006DC2  0E01               	movlw	1
  5365  006DC4  240E               	addwf	ctoa@l^0,w,c
  5366  006DC6  6E0A               	movwf	?_ctoa^0,c
  5367  006DC8  0E00               	movlw	0
  5368  006DCA  200F               	addwfc	(ctoa@l+1)^0,w,c
  5369  006DCC  6E0B               	movwf	(?_ctoa+1)^0,c
  5370  006DCE  0012               	return		;funcret
  5371  006DD0                     __end_of_ctoa:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _fputc *****************
  5375 ;; Defined at:
  5376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  c               2    0[COMRAM] int 
  5379 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5380 ;;		 -> sprintf@f(6), 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  2    0[COMRAM] int 
  5385 ;; Registers used:
  5386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5392 ;;      Params:         4       0       0       0       0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5394 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5395 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5396 ;;Total ram usage:        9 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 1
  5399 ;; This function calls:
  5400 ;;		_putch
  5401 ;; This function is called by:
  5402 ;;		_ctoa
  5403 ;;		_vfpfcnvrt
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text18
  5408  006C2E                     __ptext18:
  5409                           	callstack 0
  5410  006C2E                     _fputc:
  5411                           	callstack 26
  5412  006C2E  5003               	movf	fputc@fp^0,w,c
  5413  006C30  1004               	iorwf	(fputc@fp+1)^0,w,c
  5414  006C32  B4D8               	btfsc	status,2,c
  5415  006C34  EF1E  F036         	goto	u571
  5416  006C38  EF20  F036         	goto	u570
  5417  006C3C                     u571:
  5418  006C3C  EF29  F036         	goto	l2030
  5419  006C40                     u570:
  5420  006C40  5003               	movf	fputc@fp^0,w,c
  5421  006C42  1004               	iorwf	(fputc@fp+1)^0,w,c
  5422  006C44  A4D8               	btfss	status,2,c
  5423  006C46  EF27  F036         	goto	u581
  5424  006C4A  EF29  F036         	goto	u580
  5425  006C4E                     u581:
  5426  006C4E  EF2E  F036         	goto	l2032
  5427  006C52                     u580:
  5428  006C52                     l2030:
  5429  006C52  5001               	movf	fputc@c^0,w,c
  5430  006C54  EC85  F032         	call	_putch
  5431  006C58  EF7B  F036         	goto	l1115
  5432  006C5C                     l2032:
  5433  006C5C  EE20 F004          	lfsr	2,4
  5434  006C60  5003               	movf	fputc@fp^0,w,c
  5435  006C62  26D9               	addwf	fsr2l,f,c
  5436  006C64  5004               	movf	(fputc@fp+1)^0,w,c
  5437  006C66  22DA               	addwfc	fsr2h,f,c
  5438  006C68  50DE               	movf	postinc2,w,c
  5439  006C6A  10DE               	iorwf	postinc2,w,c
  5440  006C6C  B4D8               	btfsc	status,2,c
  5441  006C6E  EF3B  F036         	goto	u591
  5442  006C72  EF3D  F036         	goto	u590
  5443  006C76                     u591:
  5444  006C76  EF58  F036         	goto	l2036
  5445  006C7A                     u590:
  5446  006C7A  EE20 F004          	lfsr	2,4
  5447  006C7E  5003               	movf	fputc@fp^0,w,c
  5448  006C80  26D9               	addwf	fsr2l,f,c
  5449  006C82  5004               	movf	(fputc@fp+1)^0,w,c
  5450  006C84  22DA               	addwfc	fsr2h,f,c
  5451  006C86  EE10 F002          	lfsr	1,2
  5452  006C8A  5003               	movf	fputc@fp^0,w,c
  5453  006C8C  26E1               	addwf	fsr1l,f,c
  5454  006C8E  5004               	movf	(fputc@fp+1)^0,w,c
  5455  006C90  22E2               	addwfc	fsr1h,f,c
  5456  006C92  50DE               	movf	postinc2,w,c
  5457  006C94  5CE6               	subwf	postinc1,w,c
  5458  006C96  50E6               	movf	postinc1,w,c
  5459  006C98  0A80               	xorlw	128
  5460  006C9A  6E09               	movwf	(??_fputc+4)^0,c
  5461  006C9C  50DE               	movf	postinc2,w,c
  5462  006C9E  0A80               	xorlw	128
  5463  006CA0  5809               	subwfb	(??_fputc+4)^0,w,c
  5464  006CA2  B0D8               	btfsc	status,0,c
  5465  006CA4  EF56  F036         	goto	u601
  5466  006CA8  EF58  F036         	goto	u600
  5467  006CAC                     u601:
  5468  006CAC  EF7B  F036         	goto	l1115
  5469  006CB0                     u600:
  5470  006CB0                     l2036:
  5471  006CB0  EE20 F002          	lfsr	2,2
  5472  006CB4  5003               	movf	fputc@fp^0,w,c
  5473  006CB6  26D9               	addwf	fsr2l,f,c
  5474  006CB8  5004               	movf	(fputc@fp+1)^0,w,c
  5475  006CBA  22DA               	addwfc	fsr2h,f,c
  5476  006CBC  CFDE F005          	movff	postinc2,??_fputc
  5477  006CC0  CFDD F006          	movff	postdec2,??_fputc+1
  5478  006CC4  C003  FFD9         	movff	fputc@fp,fsr2l
  5479  006CC8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5480  006CCC  CFDE F007          	movff	postinc2,??_fputc+2
  5481  006CD0  CFDD F008          	movff	postdec2,??_fputc+3
  5482  006CD4  5005               	movf	??_fputc^0,w,c
  5483  006CD6  2407               	addwf	(??_fputc+2)^0,w,c
  5484  006CD8  6ED9               	movwf	fsr2l,c
  5485  006CDA  5006               	movf	(??_fputc+1)^0,w,c
  5486  006CDC  2008               	addwfc	(??_fputc+3)^0,w,c
  5487  006CDE  6EDA               	movwf	fsr2h,c
  5488  006CE0  C001  FFDF         	movff	fputc@c,indf2
  5489  006CE4  EE20 F002          	lfsr	2,2
  5490  006CE8  5003               	movf	fputc@fp^0,w,c
  5491  006CEA  26D9               	addwf	fsr2l,f,c
  5492  006CEC  5004               	movf	(fputc@fp+1)^0,w,c
  5493  006CEE  22DA               	addwfc	fsr2h,f,c
  5494  006CF0  2ADE               	incf	postinc2,f,c
  5495  006CF2  0E00               	movlw	0
  5496  006CF4  22DD               	addwfc	postdec2,f,c
  5497  006CF6                     l1115:
  5498  006CF6  0012               	return		;funcret
  5499  006CF8                     __end_of_fputc:
  5500                           	callstack 0
  5501                           
  5502 ;; *************** function _putch *****************
  5503 ;; Defined at:
  5504 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  c               1    wreg     unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  c               1    0[COMRAM] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used: 1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_fputc
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text19
  5532  00650A                     __ptext19:
  5533                           	callstack 0
  5534  00650A                     _putch:
  5535                           	callstack 26
  5536  00650A  0012               	return		;funcret
  5537  00650C                     __end_of_putch:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _sendCommand *****************
  5541 ;; Defined at:
  5542 ;;		line 29 in file "main.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  texto           2    1[COMRAM] PTR unsigned char 
  5545 ;;		 -> STR_80(12), STR_76(13), STR_73(14), STR_70(14), 
  5546 ;;		 -> STR_67(14), STR_64(14), STR_61(14), STR_58(14), 
  5547 ;;		 -> STR_55(14), STR_52(14), STR_49(14), STR_46(12), 
  5548 ;;		 -> STR_37(20), STR_34(20), STR_31(22), STR_28(20), 
  5549 ;;		 -> STR_25(21), STR_22(19), STR_19(19), STR_16(27), 
  5550 ;;		 -> STR_13(19), STR_10(18), STR_5(26), STR_4(26), 
  5551 ;;		 -> STR_3(26), STR_2(26), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5563 ;;      Params:         2       0       0       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5566 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 1
  5570 ;; This function calls:
  5571 ;;		_EUSART1_Write
  5572 ;; This function is called by:
  5573 ;;		_init_mod_LoRa
  5574 ;;		_main
  5575 ;;		_RN_Leds
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text20
  5580  006752                     __ptext20:
  5581                           	callstack 0
  5582  006752                     _sendCommand:
  5583                           	callstack 29
  5584  006752                     
  5585                           ;main.c: 29: void sendCommand(char * texto);main.c: 30: {;main.c: 31:     while(* texto)
  5586  006752  EFB5  F033         	goto	l2222
  5587  006756                     l2218:
  5588                           
  5589                           ;main.c: 32:     {;main.c: 33:         EUSART1_Write(* texto);
  5590  006756  C002  FFF6         	movff	sendCommand@texto,tblptrl
  5591  00675A  C003  FFF7         	movff	sendCommand@texto+1,tblptrh
  5592  00675E                     	if	0	;tblptru may be non-zero
  5593  00675E                     	endif
  5594  00675E                     	if	0	;tblptru may be non-zero
  5595  00675E                     	endif
  5596  00675E  0008               	tblrd		*
  5597  006760  50F5               	movf	tablat,w,c
  5598  006762  ECE6  F032         	call	_EUSART1_Write
  5599  006766                     
  5600                           ;main.c: 34:         texto++;
  5601  006766  4A02               	infsnz	sendCommand@texto^0,f,c
  5602  006768  2A03               	incf	(sendCommand@texto+1)^0,f,c
  5603  00676A                     l2222:
  5604                           
  5605                           ;main.c: 31:     while(* texto)
  5606  00676A  C002  FFF6         	movff	sendCommand@texto,tblptrl
  5607  00676E  C003  FFF7         	movff	sendCommand@texto+1,tblptrh
  5608  006772                     	if	0	;tblptru may be non-zero
  5609  006772                     	endif
  5610  006772                     	if	0	;tblptru may be non-zero
  5611  006772                     	endif
  5612  006772  0008               	tblrd		*
  5613  006774  50F5               	movf	tablat,w,c
  5614  006776  0900               	iorlw	0
  5615  006778  A4D8               	btfss	status,2,c
  5616  00677A  EFC1  F033         	goto	u741
  5617  00677E  EFC3  F033         	goto	u740
  5618  006782                     u741:
  5619  006782  EFAB  F033         	goto	l2218
  5620  006786                     u740:
  5621  006786  0012               	return		;funcret
  5622  006788                     __end_of_sendCommand:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _EUSART1_Write *****************
  5626 ;; Defined at:
  5627 ;;		line 156 in file "mcc_generated_files/eusart1.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  txData          1    wreg     unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  txData          1    0[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0
  5642 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5644 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5645 ;;Total ram usage:        1 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_sendCommand
  5651 ;;		_Endline
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text21
  5656  0065CC                     __ptext21:
  5657                           	callstack 0
  5658  0065CC                     _EUSART1_Write:
  5659                           	callstack 29
  5660                           
  5661                           ;incstack = 0
  5662                           ;EUSART1_Write@txData stored from wreg
  5663  0065CC  6E01               	movwf	EUSART1_Write@txData^0,c
  5664  0065CE                     l74:
  5665                           
  5666                           ;mcc_generated_files/eusart1.c: 158:     while(0 == PIR1bits.TX1IF)
  5667  0065CE  A89E               	btfss	158,4,c	;volatile
  5668  0065D0  EFEC  F032         	goto	u141
  5669  0065D4  EFEE  F032         	goto	u140
  5670  0065D8                     u141:
  5671  0065D8  EFE7  F032         	goto	l74
  5672  0065DC                     u140:
  5673  0065DC                     
  5674                           ;mcc_generated_files/eusart1.c: 162:     TXREG1 = txData;
  5675  0065DC  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5676  0065E0  0012               	return		;funcret
  5677  0065E2                     __end_of_EUSART1_Write:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function _oled_putString *****************
  5681 ;; Defined at:
  5682 ;;		line 331 in file "SSD1306oLED.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  string          2   12[COMRAM] PTR const unsigned char 
  5685 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_82(7), 
  5686 ;;		 -> STR_79(10), STR_78(7), STR_75(8), STR_72(14), 
  5687 ;;		 -> STR_69(14), STR_66(14), STR_63(14), STR_60(14), 
  5688 ;;		 -> STR_57(14), STR_54(14), STR_51(14), STR_48(14), 
  5689 ;;		 -> main@read(32), STR_45(10), STR_43(8), STR_42(16), 
  5690 ;;		 -> test_leds_LoRa@READ(10), STR_40(10), STR_39(16), STR_36(5), 
  5691 ;;		 -> STR_33(21), STR_30(4), STR_27(10), STR_24(9), 
  5692 ;;		 -> STR_21(12), STR_18(16), STR_15(11), STR_12(15), 
  5693 ;;		 -> STR_9(9), STR_8(17), init_mod_LoRa@READ(10), STR_1(10), 
  5694 ;;  station_dot     1   14[COMRAM] unsigned char 
  5695 ;;  start_page      1   15[COMRAM] unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  index           1   16[COMRAM] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5707 ;;      Params:         4       0       0       0       0       0       0       0       0
  5708 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5710 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5711 ;;Total ram usage:        5 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 3
  5714 ;; This function calls:
  5715 ;;		_oled_putChar
  5716 ;; This function is called by:
  5717 ;;		_init_mod_LoRa
  5718 ;;		_main
  5719 ;;		_oled_putUint8
  5720 ;;		_test_leds
  5721 ;;		_test_leds_LoRa
  5722 ;;		_oled_putint8
  5723 ;;		_oled_putUint16
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text22
  5728  0069AA                     __ptext22:
  5729                           	callstack 0
  5730  0069AA                     _oled_putString:
  5731                           	callstack 26
  5732  0069AA                     
  5733                           ;SSD1306oLED.c: 331: void oled_putString(const char *string, uint8_t station_dot, uint8_
      +                          t start_page);SSD1306oLED.c: 332: {;SSD1306oLED.c: 333:     uint8_t index;;SSD1306oLED.c
      +                          : 334:     for(index = station_dot; index < 16; index++)
  5734  0069AA  C00F  F011         	movff	oled_putString@station_dot,oled_putString@index
  5735  0069AE                     l2226:
  5736  0069AE  0E0F               	movlw	15
  5737  0069B0  6411               	cpfsgt	oled_putString@index^0,c
  5738  0069B2  EFDD  F034         	goto	u751
  5739  0069B6  EFDF  F034         	goto	u750
  5740  0069BA                     u751:
  5741  0069BA  EFE1  F034         	goto	l2230
  5742  0069BE                     u750:
  5743  0069BE  EF14  F035         	goto	l324
  5744  0069C2                     l2230:
  5745                           
  5746                           ;SSD1306oLED.c: 335:     {;SSD1306oLED.c: 336:         if (*string != 0)
  5747  0069C2  C00D  FFF6         	movff	oled_putString@string,tblptrl
  5748  0069C6  C00E  FFF7         	movff	oled_putString@string+1,tblptrh
  5749  0069CA  6AF8               	clrf	tblptru,c
  5750  0069CC  0E07               	movlw	(high __ramtop+-1)
  5751  0069CE  64F7               	cpfsgt	tblptrh,c
  5752  0069D0  D003               	bra	u767
  5753  0069D2  0008               	tblrd		*
  5754  0069D4  50F5               	movf	tablat,w,c
  5755  0069D6  D005               	bra	u760
  5756  0069D8                     u767:
  5757  0069D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5758  0069DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5759  0069E0  50EF               	movf	indf0,w,c
  5760  0069E2                     u760:
  5761  0069E2  0900               	iorlw	0
  5762  0069E4  B4D8               	btfsc	status,2,c
  5763  0069E6  EFF7  F034         	goto	u771
  5764  0069EA  EFF9  F034         	goto	u770
  5765  0069EE                     u771:
  5766  0069EE  EF14  F035         	goto	l324
  5767  0069F2                     u770:
  5768  0069F2                     
  5769                           ;SSD1306oLED.c: 337:         {;SSD1306oLED.c: 338:             oled_putChar(*string, ind
      +                          ex, start_page);
  5770  0069F2  C011  F003         	movff	oled_putString@index,oled_putChar@station_dot
  5771  0069F6  C010  F004         	movff	oled_putString@start_page,oled_putChar@start_page
  5772  0069FA  C00D  FFF6         	movff	oled_putString@string,tblptrl
  5773  0069FE  C00E  FFF7         	movff	oled_putString@string+1,tblptrh
  5774  006A02  6AF8               	clrf	tblptru,c
  5775  006A04  0E07               	movlw	(high __ramtop+-1)
  5776  006A06  64F7               	cpfsgt	tblptrh,c
  5777  006A08  D003               	bra	u787
  5778  006A0A  0008               	tblrd		*
  5779  006A0C  50F5               	movf	tablat,w,c
  5780  006A0E  D005               	bra	u780
  5781  006A10                     u787:
  5782  006A10  CFF6 FFE9          	movff	tblptrl,fsr0l
  5783  006A14  CFF7 FFEA          	movff	tblptrh,fsr0h
  5784  006A18  50EF               	movf	indf0,w,c
  5785  006A1A                     u780:
  5786  006A1A  EC97  F034         	call	_oled_putChar
  5787  006A1E                     
  5788                           ;SSD1306oLED.c: 339:             *string++;
  5789  006A1E  4A0D               	infsnz	oled_putString@string^0,f,c
  5790  006A20  2A0E               	incf	(oled_putString@string+1)^0,f,c
  5791  006A22                     
  5792                           ;SSD1306oLED.c: 345:     }
  5793  006A22  2A11               	incf	oled_putString@index^0,f,c
  5794  006A24  EFD7  F034         	goto	l2226
  5795  006A28                     l324:
  5796  006A28  0012               	return		;funcret
  5797  006A2A                     __end_of_oled_putString:
  5798                           	callstack 0
  5799                           
  5800 ;; *************** function _oled_clear *****************
  5801 ;; Defined at:
  5802 ;;		line 348 in file "SSD1306oLED.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      void 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5816 ;;      Params:         0       0       0       0       0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5819 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5820 ;;Total ram usage:        0 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; Hardware stack levels required when called: 4
  5823 ;; This function calls:
  5824 ;;		_oled_clearRow
  5825 ;; This function is called by:
  5826 ;;		_init_mod_LoRa
  5827 ;;		_main
  5828 ;;		_oled_init
  5829 ;;		_test_leds_LoRa
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text23
  5834  0065E2                     __ptext23:
  5835                           	callstack 0
  5836  0065E2                     _oled_clear:
  5837                           	callstack 25
  5838  0065E2                     
  5839                           ;SSD1306oLED.c: 350:     oled_clearRow(0);
  5840  0065E2  0E00               	movlw	0
  5841  0065E4  EC1C  F033         	call	_oled_clearRow
  5842                           
  5843                           ;SSD1306oLED.c: 351:     oled_clearRow(1);
  5844  0065E8  0E01               	movlw	1
  5845  0065EA  EC1C  F033         	call	_oled_clearRow
  5846                           
  5847                           ;SSD1306oLED.c: 352:     oled_clearRow(2);
  5848  0065EE  0E02               	movlw	2
  5849  0065F0  EC1C  F033         	call	_oled_clearRow
  5850                           
  5851                           ;SSD1306oLED.c: 353:     oled_clearRow(3);
  5852  0065F4  0E03               	movlw	3
  5853  0065F6  EC1C  F033         	call	_oled_clearRow
  5854  0065FA  0012               	return		;funcret
  5855  0065FC                     __end_of_oled_clear:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _oled_clearRow *****************
  5859 ;; Defined at:
  5860 ;;		line 356 in file "SSD1306oLED.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  page            1    wreg     unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  page            1   12[COMRAM] unsigned char 
  5865 ;;  index           1   13[COMRAM] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0
  5876 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5878 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5879 ;;Total ram usage:        2 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 3
  5882 ;; This function calls:
  5883 ;;		_oled_putChar
  5884 ;; This function is called by:
  5885 ;;		_init_mod_LoRa
  5886 ;;		_oled_clear
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text24
  5891  006638                     __ptext24:
  5892                           	callstack 0
  5893  006638                     _oled_clearRow:
  5894                           	callstack 25
  5895                           
  5896                           ;incstack = 0
  5897                           ;oled_clearRow@page stored from wreg
  5898  006638  6E0D               	movwf	oled_clearRow@page^0,c
  5899  00663A                     
  5900                           ;SSD1306oLED.c: 356: void oled_clearRow(uint8_t page);SSD1306oLED.c: 357: {;SSD1306oLED.
      +                          c: 358:     uint8_t index;;SSD1306oLED.c: 360:     for(index = 0; index < 16; index++)
  5901  00663A  0E00               	movlw	0
  5902  00663C  6E0E               	movwf	oled_clearRow@index^0,c
  5903  00663E                     l2160:
  5904                           
  5905                           ;SSD1306oLED.c: 361:     {;SSD1306oLED.c: 362:       oled_putChar( ' ', index, page);
  5906  00663E  C00E  F003         	movff	oled_clearRow@index,oled_putChar@station_dot
  5907  006642  C00D  F004         	movff	oled_clearRow@page,oled_putChar@start_page
  5908  006646  0E20               	movlw	32
  5909  006648  EC97  F034         	call	_oled_putChar
  5910  00664C                     
  5911                           ;SSD1306oLED.c: 363:     }
  5912  00664C  2A0E               	incf	oled_clearRow@index^0,f,c
  5913  00664E  0E0F               	movlw	15
  5914  006650  640E               	cpfsgt	oled_clearRow@index^0,c
  5915  006652  EF2D  F033         	goto	u701
  5916  006656  EF2F  F033         	goto	u700
  5917  00665A                     u701:
  5918  00665A  EF1F  F033         	goto	l2160
  5919  00665E                     u700:
  5920  00665E  0012               	return		;funcret
  5921  006660                     __end_of_oled_clearRow:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function _oled_putChar *****************
  5925 ;; Defined at:
  5926 ;;		line 318 in file "SSD1306oLED.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  k               1    wreg     unsigned char 
  5929 ;;  station_dot     1    2[COMRAM] unsigned char 
  5930 ;;  start_page      1    3[COMRAM] unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  k               1   10[COMRAM] unsigned char 
  5933 ;;  index           1   11[COMRAM] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      void 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5943 ;;      Params:         2       0       0       0       0       0       0       0       0
  5944 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5945 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5946 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5947 ;;Total ram usage:       10 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; Hardware stack levels required when called: 2
  5950 ;; This function calls:
  5951 ;;		_Set_Column_Address
  5952 ;;		_Set_Page_Address
  5953 ;;		_oled_writeData
  5954 ;; This function is called by:
  5955 ;;		_oled_putString
  5956 ;;		_oled_clearRow
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text25
  5961  00692E                     __ptext25:
  5962                           	callstack 0
  5963  00692E                     _oled_putChar:
  5964                           	callstack 26
  5965                           
  5966                           ;incstack = 0
  5967                           ;oled_putChar@k stored from wreg
  5968  00692E  6E0B               	movwf	oled_putChar@k^0,c
  5969  006930                     
  5970                           ;SSD1306oLED.c: 318: void oled_putChar(char k,uint8_t station_dot, uint8_t start_page);S
      +                          SD1306oLED.c: 319: {;SSD1306oLED.c: 320:     uint8_t index;;SSD1306oLED.c: 322:     Set_
      +                          Page_Address(start_page);
  5971  006930  5004               	movf	oled_putChar@start_page^0,w,c
  5972  006932  ECB7  F032         	call	_Set_Page_Address
  5973  006936                     
  5974                           ;SSD1306oLED.c: 323:     Set_Column_Address(0x00 + station_dot * 8 + 4);
  5975  006936  5003               	movf	oled_putChar@station_dot^0,w,c
  5976  006938  0D08               	mullw	8
  5977  00693A  50F3               	movf	243,w,c
  5978  00693C  0F04               	addlw	4
  5979  00693E  ECDB  F032         	call	_Set_Column_Address
  5980  006942                     
  5981                           ;SSD1306oLED.c: 325:     for(index = 0; index < 8; index++)
  5982  006942  0E00               	movlw	0
  5983  006944  6E0C               	movwf	oled_putChar@index^0,c
  5984  006946                     l2102:
  5985                           
  5986                           ;SSD1306oLED.c: 326:     {;SSD1306oLED.c: 327:         oled_writeData(*(selectedFont + 8
      +                           * (k - 0x20) + index));
  5987  006946  0E00               	movlw	0
  5988  006948  6E05               	movwf	??_oled_putChar^0,c
  5989  00694A  0EFF               	movlw	255
  5990  00694C  6E06               	movwf	(??_oled_putChar+1)^0,c
  5991  00694E  500B               	movf	oled_putChar@k^0,w,c
  5992  006950  6E07               	movwf	(??_oled_putChar+2)^0,c
  5993  006952  6A08               	clrf	(??_oled_putChar+3)^0,c
  5994  006954  90D8               	bcf	status,0,c
  5995  006956  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  5996  006958  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  5997  00695A  90D8               	bcf	status,0,c
  5998  00695C  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  5999  00695E  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  6000  006960  90D8               	bcf	status,0,c
  6001  006962  3607               	rlcf	(??_oled_putChar+2)^0,f,c
  6002  006964  3608               	rlcf	(??_oled_putChar+3)^0,f,c
  6003  006966  C091  F009         	movff	_selectedFont,??_oled_putChar+4
  6004  00696A  C092  F00A         	movff	_selectedFont+1,??_oled_putChar+5
  6005  00696E  5007               	movf	(??_oled_putChar+2)^0,w,c
  6006  006970  2609               	addwf	(??_oled_putChar+4)^0,f,c
  6007  006972  5008               	movf	(??_oled_putChar+3)^0,w,c
  6008  006974  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  6009  006976  500C               	movf	oled_putChar@index^0,w,c
  6010  006978  2609               	addwf	(??_oled_putChar+4)^0,f,c
  6011  00697A  0E00               	movlw	0
  6012  00697C  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  6013  00697E  5005               	movf	??_oled_putChar^0,w,c
  6014  006980  2609               	addwf	(??_oled_putChar+4)^0,f,c
  6015  006982  5006               	movf	(??_oled_putChar+1)^0,w,c
  6016  006984  220A               	addwfc	(??_oled_putChar+5)^0,f,c
  6017  006986  C009  FFF6         	movff	??_oled_putChar+4,tblptrl
  6018  00698A  C00A  FFF7         	movff	??_oled_putChar+5,tblptrh
  6019  00698E                     	if	0	;tblptru may be non-zero
  6020  00698E                     	endif
  6021  00698E                     	if	0	;tblptru may be non-zero
  6022  00698E                     	endif
  6023  00698E  0008               	tblrd		*
  6024  006990  50F5               	movf	tablat,w,c
  6025  006992  ECD1  F032         	call	_oled_writeData
  6026  006996                     
  6027                           ;SSD1306oLED.c: 328:     }
  6028  006996  2A0C               	incf	oled_putChar@index^0,f,c
  6029  006998  0E07               	movlw	7
  6030  00699A  640C               	cpfsgt	oled_putChar@index^0,c
  6031  00699C  EFD2  F034         	goto	u661
  6032  0069A0  EFD4  F034         	goto	u660
  6033  0069A4                     u661:
  6034  0069A4  EFA3  F034         	goto	l2102
  6035  0069A8                     u660:
  6036  0069A8  0012               	return		;funcret
  6037  0069AA                     __end_of_oled_putChar:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _oled_writeData *****************
  6041 ;; Defined at:
  6042 ;;		line 442 in file "SSD1306oLED.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  data            1    wreg     unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  data            1    0[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0
  6057 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6059 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6060 ;;Total ram usage:        1 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_oled_putChar
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text26
  6070  0065A2                     __ptext26:
  6071                           	callstack 0
  6072  0065A2                     _oled_writeData:
  6073                           	callstack 27
  6074                           
  6075                           ;incstack = 0
  6076                           ;oled_writeData@data stored from wreg
  6077  0065A2  6E01               	movwf	oled_writeData@data^0,c
  6078  0065A4                     
  6079                           ;SSD1306oLED.c: 442: void oled_writeData(uint8_t data);SSD1306oLED.c: 443: {;SSD1306oLED
      +                          .c: 444:     LATBbits.LATB4=0;
  6080  0065A4  988A               	bcf	138,4,c	;volatile
  6081                           
  6082                           ;SSD1306oLED.c: 445:     LATCbits.LATC0=1;
  6083  0065A6  808B               	bsf	139,0,c	;volatile
  6084  0065A8                     
  6085                           ;SSD1306oLED.c: 446:     LATD=data;
  6086  0065A8  C001  FF8C         	movff	oled_writeData@data,3980	;volatile
  6087  0065AC                     
  6088                           ;SSD1306oLED.c: 447:     LATCbits.LATC1=0;
  6089  0065AC  928B               	bcf	139,1,c	;volatile
  6090  0065AE                     
  6091                           ;SSD1306oLED.c: 448:     __nop();
  6092  0065AE  F000               	nop	
  6093  0065B0                     
  6094                           ;SSD1306oLED.c: 449:     LATCbits.LATC1=1;
  6095  0065B0  828B               	bsf	139,1,c	;volatile
  6096  0065B2                     
  6097                           ;SSD1306oLED.c: 450:     LATBbits.LATB4=1;
  6098  0065B2  888A               	bsf	138,4,c	;volatile
  6099  0065B4  0012               	return		;funcret
  6100  0065B6                     __end_of_oled_writeData:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function _Set_Page_Address *****************
  6104 ;; Defined at:
  6105 ;;		line 241 in file "SSD1306oLED.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  address         1    wreg     unsigned char 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  address         1    1[COMRAM] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6119 ;;      Params:         0       0       0       0       0       0       0       0       0
  6120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6122 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6123 ;;Total ram usage:        1 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 1
  6126 ;; This function calls:
  6127 ;;		_oled_writeCommand
  6128 ;; This function is called by:
  6129 ;;		_oled_putChar
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text27
  6134  00656E                     __ptext27:
  6135                           	callstack 0
  6136  00656E                     _Set_Page_Address:
  6137                           	callstack 26
  6138                           
  6139                           ;incstack = 0
  6140                           ;Set_Page_Address@address stored from wreg
  6141  00656E  6E02               	movwf	Set_Page_Address@address^0,c
  6142  006570                     
  6143                           ;SSD1306oLED.c: 241: void Set_Page_Address(uint8_t address);SSD1306oLED.c: 242: {;SSD130
      +                          6oLED.c: 243:     address = 0xb0 | address;
  6144  006570  5002               	movf	Set_Page_Address@address^0,w,c
  6145  006572  09B0               	iorlw	176
  6146  006574  6E02               	movwf	Set_Page_Address@address^0,c
  6147  006576                     
  6148                           ;SSD1306oLED.c: 244:     oled_writeCommand(address);
  6149  006576  5002               	movf	Set_Page_Address@address^0,w,c
  6150  006578  ECC7  F032         	call	_oled_writeCommand
  6151  00657C  0012               	return		;funcret
  6152  00657E                     __end_of_Set_Page_Address:
  6153                           	callstack 0
  6154                           
  6155 ;; *************** function _Set_Column_Address *****************
  6156 ;; Defined at:
  6157 ;;		line 249 in file "SSD1306oLED.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  address         1    wreg     unsigned char 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  address         1    1[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6171 ;;      Params:         0       0       0       0       0       0       0       0       0
  6172 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6174 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6175 ;;Total ram usage:        1 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; Hardware stack levels required when called: 1
  6178 ;; This function calls:
  6179 ;;		_oled_writeCommand
  6180 ;; This function is called by:
  6181 ;;		_oled_putChar
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text28
  6186  0065B6                     __ptext28:
  6187                           	callstack 0
  6188  0065B6                     _Set_Column_Address:
  6189                           	callstack 26
  6190                           
  6191                           ;incstack = 0
  6192                           ;Set_Column_Address@address stored from wreg
  6193  0065B6  6E02               	movwf	Set_Column_Address@address^0,c
  6194  0065B8                     
  6195                           ;SSD1306oLED.c: 249: void Set_Column_Address(uint8_t address);SSD1306oLED.c: 250: {;SSD1
      +                          306oLED.c: 251:     oled_writeCommand((0x10|(address>>4)));
  6196  0065B8  3802               	swapf	Set_Column_Address@address^0,w,c
  6197  0065BA  0B0F               	andlw	15
  6198  0065BC  0910               	iorlw	16
  6199  0065BE  ECC7  F032         	call	_oled_writeCommand
  6200                           
  6201                           ;SSD1306oLED.c: 252:     oled_writeCommand((0x0f&address));
  6202  0065C2  5002               	movf	Set_Column_Address@address^0,w,c
  6203  0065C4  0B0F               	andlw	15
  6204  0065C6  ECC7  F032         	call	_oled_writeCommand
  6205  0065CA  0012               	return		;funcret
  6206  0065CC                     __end_of_Set_Column_Address:
  6207                           	callstack 0
  6208                           
  6209 ;; *************** function _oled_writeCommand *****************
  6210 ;; Defined at:
  6211 ;;		line 430 in file "SSD1306oLED.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  command         1    wreg     unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  command         1    0[COMRAM] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0
  6226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6228 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6229 ;;Total ram usage:        1 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_Set_Page_Address
  6235 ;;		_Set_Column_Address
  6236 ;;		_oled_devInit
  6237 ;;		_oled_setDisplay
  6238 ;;		_oled_setContrastControlRegister
  6239 ;;		_oled_initialDispayLine
  6240 ;;		_oled_powerControl
  6241 ;;		_oled_regulorResistorSelect
  6242 ;;		_oled_displayOff
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text29
  6247  00658E                     __ptext29:
  6248                           	callstack 0
  6249  00658E                     _oled_writeCommand:
  6250                           	callstack 26
  6251                           
  6252                           ;incstack = 0
  6253                           ;oled_writeCommand@command stored from wreg
  6254  00658E  6E01               	movwf	oled_writeCommand@command^0,c
  6255  006590                     
  6256                           ;SSD1306oLED.c: 430: void oled_writeCommand(uint8_t command);SSD1306oLED.c: 431: {;SSD13
      +                          06oLED.c: 432:     LATBbits.LATB4=0;
  6257  006590  988A               	bcf	138,4,c	;volatile
  6258                           
  6259                           ;SSD1306oLED.c: 433:     LATCbits.LATC0=0;
  6260  006592  908B               	bcf	139,0,c	;volatile
  6261  006594                     
  6262                           ;SSD1306oLED.c: 434:     LATD=command;
  6263  006594  C001  FF8C         	movff	oled_writeCommand@command,3980	;volatile
  6264  006598                     
  6265                           ;SSD1306oLED.c: 435:     LATCbits.LATC1=0;
  6266  006598  928B               	bcf	139,1,c	;volatile
  6267  00659A                     
  6268                           ;SSD1306oLED.c: 436:     __nop();
  6269  00659A  F000               	nop	
  6270  00659C                     
  6271                           ;SSD1306oLED.c: 437:     LATCbits.LATC1=1;
  6272  00659C  828B               	bsf	139,1,c	;volatile
  6273  00659E                     
  6274                           ;SSD1306oLED.c: 438:     LATBbits.LATB4=1;
  6275  00659E  888A               	bsf	138,4,c	;volatile
  6276  0065A0  0012               	return		;funcret
  6277  0065A2                     __end_of_oled_writeCommand:
  6278                           	callstack 0
  6279                           
  6280 ;; *************** function _get_Data *****************
  6281 ;; Defined at:
  6282 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  2    0[COMRAM] PTR unsigned char 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6296 ;;      Params:         2       0       0       0       0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6298 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6299 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6300 ;;Total ram usage:        4 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_init_mod_LoRa
  6306 ;;		_test_leds_LoRa
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text30
  6311  00671C                     __ptext30:
  6312                           	callstack 0
  6313  00671C                     _get_Data:
  6314                           	callstack 29
  6315  00671C                     l67:
  6316                           
  6317                           ;mcc_generated_files/eusart1.c: 136:     while(!PIR1bits.RC1IF)
  6318  00671C  AA9E               	btfss	158,5,c	;volatile
  6319  00671E  EF93  F033         	goto	u721
  6320  006722  EF95  F033         	goto	u720
  6321  006726                     u721:
  6322  006726  EF8E  F033         	goto	l67
  6323  00672A                     u720:
  6324  00672A                     
  6325                           ;mcc_generated_files/eusart1.c: 140:     eusart1RxLastError.status = 0;
  6326  00672A  0E00               	movlw	0
  6327  00672C  0100               	movlb	0	; () banked
  6328  00672E  6F90               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6329  006730                     
  6330                           ; BSR set to: 0
  6331                           ;mcc_generated_files/eusart1.c: 142:     if(1 == RCSTA1bits.OERR)
  6332  006730  A2AB               	btfss	171,1,c	;volatile
  6333  006732  EF9D  F033         	goto	u731
  6334  006736  EF9F  F033         	goto	u730
  6335  00673A                     u731:
  6336  00673A  EFA1  F033         	goto	l2212
  6337  00673E                     u730:
  6338  00673E                     
  6339                           ; BSR set to: 0
  6340                           ;mcc_generated_files/eusart1.c: 143:     {;mcc_generated_files/eusart1.c: 146:         R
      +                          CSTA1bits.CREN = 0;
  6341  00673E  98AB               	bcf	171,4,c	;volatile
  6342                           
  6343                           ;mcc_generated_files/eusart1.c: 147:         RCSTA1bits.CREN = 1;
  6344  006740  88AB               	bsf	171,4,c	;volatile
  6345  006742                     l2212:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;mcc_generated_files/eusart1.c: 154:     return RCREG1;
  6349  006742  50AE               	movf	174,w,c	;volatile
  6350  006744  6E03               	movwf	??_get_Data^0,c
  6351  006746  6A04               	clrf	(??_get_Data+1)^0,c
  6352  006748  C003  F001         	movff	??_get_Data,?_get_Data
  6353  00674C  C004  F002         	movff	??_get_Data+1,?_get_Data+1
  6354  006750                     
  6355                           ; BSR set to: 0
  6356  006750  0012               	return		;funcret
  6357  006752                     __end_of_get_Data:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function _SYSTEM_Initialize *****************
  6361 ;; Defined at:
  6362 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6379 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used: 1
  6382 ;; Hardware stack levels required when called: 2
  6383 ;; This function calls:
  6384 ;;		_EUSART1_Initialize
  6385 ;;		_OSCILLATOR_Initialize
  6386 ;;		_PIN_MANAGER_Initialize
  6387 ;; This function is called by:
  6388 ;;		_main
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text31
  6393  006552                     __ptext31:
  6394                           	callstack 0
  6395  006552                     _SYSTEM_Initialize:
  6396                           	callstack 28
  6397  006552                     
  6398                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6399  006552  ECC4  F033         	call	_PIN_MANAGER_Initialize	;wreg free
  6400                           
  6401                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6402  006556  EC0C  F033         	call	_OSCILLATOR_Initialize	;wreg free
  6403  00655A                     
  6404                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
  6405  00655A  ECE3  F033         	call	_EUSART1_Initialize	;wreg free
  6406  00655E  0012               	return		;funcret
  6407  006560                     __end_of_SYSTEM_Initialize:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function _PIN_MANAGER_Initialize *****************
  6411 ;; Defined at:
  6412 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_SYSTEM_Initialize
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text32
  6440  006788                     __ptext32:
  6441                           	callstack 0
  6442  006788                     _PIN_MANAGER_Initialize:
  6443                           	callstack 29
  6444  006788                     
  6445                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6446  006788  0E00               	movlw	0
  6447  00678A  6E8D               	movwf	141,c	;volatile
  6448                           
  6449                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6450  00678C  0E00               	movlw	0
  6451  00678E  6E8C               	movwf	140,c	;volatile
  6452                           
  6453                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6454  006790  0E00               	movlw	0
  6455  006792  6E89               	movwf	137,c	;volatile
  6456                           
  6457                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6458  006794  0E00               	movlw	0
  6459  006796  6E8A               	movwf	138,c	;volatile
  6460                           
  6461                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6462  006798  0E00               	movlw	0
  6463  00679A  6E8B               	movwf	139,c	;volatile
  6464                           
  6465                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6466  00679C  0E07               	movlw	7
  6467  00679E  6E96               	movwf	150,c	;volatile
  6468  0067A0                     
  6469                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6470  0067A0  6892               	setf	146,c	;volatile
  6471  0067A2                     
  6472                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6473  0067A2  6893               	setf	147,c	;volatile
  6474                           
  6475                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x87;
  6476  0067A4  0E87               	movlw	135
  6477  0067A6  6E94               	movwf	148,c	;volatile
  6478  0067A8                     
  6479                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6480  0067A8  6895               	setf	149,c	;volatile
  6481  0067AA                     
  6482                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  6483  0067AA  010F               	movlb	15	; () banked
  6484  0067AC  695E               	setf	94,b	;volatile
  6485                           
  6486                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x04;
  6487  0067AE  0E04               	movlw	4
  6488  0067B0  6F5D               	movwf	93,b	;volatile
  6489                           
  6490                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  6491  0067B2  0E3F               	movlw	63
  6492  0067B4  6F5C               	movwf	92,b	;volatile
  6493                           
  6494                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  6495  0067B6  0E07               	movlw	7
  6496  0067B8  6F5F               	movwf	95,b	;volatile
  6497                           
  6498                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  6499  0067BA  0E2F               	movlw	47
  6500  0067BC  6F5B               	movwf	91,b	;volatile
  6501                           
  6502                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  6503  0067BE  0E00               	movlw	0
  6504  0067C0  6E85               	movwf	133,c	;volatile
  6505  0067C2                     
  6506                           ; BSR set to: 15
  6507                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  6508  0067C2  8EF1               	bsf	241,7,c	;volatile
  6509  0067C4                     
  6510                           ; BSR set to: 15
  6511  0067C4  0012               	return		;funcret
  6512  0067C6                     __end_of_PIN_MANAGER_Initialize:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _OSCILLATOR_Initialize *****************
  6516 ;; Defined at:
  6517 ;;		line 58 in file "mcc_generated_files/mcc.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_SYSTEM_Initialize
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text33
  6545  006618                     __ptext33:
  6546                           	callstack 0
  6547  006618                     _OSCILLATOR_Initialize:
  6548                           	callstack 29
  6549  006618                     
  6550                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x70;
  6551  006618  0E70               	movlw	112
  6552  00661A  6ED3               	movwf	211,c	;volatile
  6553                           
  6554                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x00;
  6555  00661C  0E00               	movlw	0
  6556  00661E  6ED2               	movwf	210,c	;volatile
  6557                           
  6558                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x80;
  6559  006620  0E80               	movlw	128
  6560  006622  6E9B               	movwf	155,c	;volatile
  6561                           
  6562                           ;mcc_generated_files/mcc.c: 67:     ACTCON = 0x00;
  6563  006624  0E00               	movlw	0
  6564  006626  6EB5               	movwf	181,c	;volatile
  6565  006628                     l159:
  6566                           
  6567                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  6568  006628  AED2               	btfss	4050,7,c	;volatile
  6569  00662A  EF19  F033         	goto	u191
  6570  00662E  EF1B  F033         	goto	u190
  6571  006632                     u191:
  6572  006632  EF14  F033         	goto	l159
  6573  006636                     u190:
  6574  006636  0012               	return		;funcret
  6575  006638                     __end_of_OSCILLATOR_Initialize:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _EUSART1_Initialize *****************
  6579 ;; Defined at:
  6580 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; Hardware stack levels required when called: 1
  6601 ;; This function calls:
  6602 ;;		_EUSART1_SetErrorHandler
  6603 ;;		_EUSART1_SetFramingErrorHandler
  6604 ;;		_EUSART1_SetOverrunErrorHandler
  6605 ;; This function is called by:
  6606 ;;		_SYSTEM_Initialize
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text34
  6611  0067C6                     __ptext34:
  6612                           	callstack 0
  6613  0067C6                     _EUSART1_Initialize:
  6614                           	callstack 28
  6615  0067C6                     
  6616                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6617  0067C6  0E08               	movlw	8
  6618  0067C8  6EB8               	movwf	184,c	;volatile
  6619                           
  6620                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6621  0067CA  0E90               	movlw	144
  6622  0067CC  6EAB               	movwf	171,c	;volatile
  6623                           
  6624                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6625  0067CE  0E24               	movlw	36
  6626  0067D0  6EAC               	movwf	172,c	;volatile
  6627                           
  6628                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  6629  0067D2  0ECF               	movlw	207
  6630  0067D4  6EAF               	movwf	175,c	;volatile
  6631                           
  6632                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  6633  0067D6  0E00               	movlw	0
  6634  0067D8  6EB0               	movwf	176,c	;volatile
  6635  0067DA                     
  6636                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6637  0067DA  0E00               	movlw	0
  6638  0067DC  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6639  0067DE  0E00               	movlw	0
  6640  0067E0  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6641  0067E2  EC8D  F032         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6642  0067E6                     
  6643                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6644  0067E6  0E00               	movlw	0
  6645  0067E8  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6646  0067EA  0E00               	movlw	0
  6647  0067EC  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6648  0067EE  EC92  F032         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6649  0067F2                     
  6650                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6651  0067F2  0E00               	movlw	0
  6652  0067F4  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6653  0067F6  0E00               	movlw	0
  6654  0067F8  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6655  0067FA  EC88  F032         	call	_EUSART1_SetErrorHandler	;wreg free
  6656  0067FE                     
  6657                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6658  0067FE  0E00               	movlw	0
  6659  006800  0100               	movlb	0	; () banked
  6660  006802  6F90               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6661  006804                     
  6662                           ; BSR set to: 0
  6663  006804  0012               	return		;funcret
  6664  006806                     __end_of_EUSART1_Initialize:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6668 ;; Defined at:
  6669 ;;		line 185 in file "mcc_generated_files/eusart1.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6672 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6684 ;;      Params:         2       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        2 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_EUSART1_Initialize
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text35
  6698  006524                     __ptext35:
  6699                           	callstack 0
  6700  006524                     _EUSART1_SetOverrunErrorHandler:
  6701                           	callstack 28
  6702  006524                     
  6703                           ;mcc_generated_files/eusart1.c: 186:     EUSART1_OverrunErrorHandler = interruptHandler;
  6704  006524  C001  F08C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6705  006528  C002  F08D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6706  00652C  0012               	return		;funcret
  6707  00652E                     __end_of_EUSART1_SetOverrunErrorHandler:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6711 ;; Defined at:
  6712 ;;		line 181 in file "mcc_generated_files/eusart1.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6715 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      void 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6730 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        2 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_EUSART1_Initialize
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text36
  6741  00651A                     __ptext36:
  6742                           	callstack 0
  6743  00651A                     _EUSART1_SetFramingErrorHandler:
  6744                           	callstack 28
  6745  00651A                     
  6746                           ;mcc_generated_files/eusart1.c: 182:     EUSART1_FramingErrorHandler = interruptHandler;
  6747  00651A  C001  F08E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6748  00651E  C002  F08F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6749  006522  0012               	return		;funcret
  6750  006524                     __end_of_EUSART1_SetFramingErrorHandler:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _EUSART1_SetErrorHandler *****************
  6754 ;; Defined at:
  6755 ;;		line 189 in file "mcc_generated_files/eusart1.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6758 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg, status,2, status,0
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6770 ;;      Params:         2       0       0       0       0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6773 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6774 ;;Total ram usage:        2 bytes
  6775 ;; Hardware stack levels used: 1
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_EUSART1_Initialize
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text37
  6784  006510                     __ptext37:
  6785                           	callstack 0
  6786  006510                     _EUSART1_SetErrorHandler:
  6787                           	callstack 28
  6788  006510                     
  6789                           ;mcc_generated_files/eusart1.c: 190:     EUSART1_ErrorHandler = interruptHandler;
  6790  006510  C001  F08A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6791  006514  C002  F08B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6792  006518  0012               	return		;funcret
  6793  00651A                     __end_of_EUSART1_SetErrorHandler:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function _EUSART1_Read *****************
  6797 ;; Defined at:
  6798 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      unsigned char 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text38
  6826  006660                     __ptext38:
  6827                           	callstack 0
  6828  006660                     _EUSART1_Read:
  6829                           	callstack 30
  6830  006660                     l60:
  6831                           
  6832                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  6833  006660  AA9E               	btfss	158,5,c	;volatile
  6834  006662  EF35  F033         	goto	u931
  6835  006666  EF37  F033         	goto	u930
  6836  00666A                     u931:
  6837  00666A  EF30  F033         	goto	l60
  6838  00666E                     u930:
  6839  00666E                     
  6840                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  6841  00666E  0E00               	movlw	0
  6842  006670  0100               	movlb	0	; () banked
  6843  006672  6F90               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6844  006674                     
  6845                           ; BSR set to: 0
  6846                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  6847  006674  A2AB               	btfss	171,1,c	;volatile
  6848  006676  EF3F  F033         	goto	u941
  6849  00667A  EF41  F033         	goto	u940
  6850  00667E                     u941:
  6851  00667E  EF43  F033         	goto	l2386
  6852  006682                     u940:
  6853  006682                     
  6854                           ; BSR set to: 0
  6855                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  6856  006682  98AB               	bcf	171,4,c	;volatile
  6857                           
  6858                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  6859  006684  88AB               	bsf	171,4,c	;volatile
  6860  006686                     l2386:
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  6864  006686  50AE               	movf	174,w,c	;volatile
  6865  006688                     
  6866                           ; BSR set to: 0
  6867  006688  0012               	return		;funcret
  6868  00668A                     __end_of_EUSART1_Read:
  6869                           	callstack 0
  6870                           
  6871                           	psect	rparam
  6872  0000                     
  6873                           	psect	idloc
  6874                           
  6875                           ;Config register IDLOC0 @ 0x200000
  6876                           ;	unspecified, using default values
  6877  200000                     	org	2097152
  6878  200000  FF                 	db	255
  6879                           
  6880                           ;Config register IDLOC1 @ 0x200001
  6881                           ;	unspecified, using default values
  6882  200001                     	org	2097153
  6883  200001  FF                 	db	255
  6884                           
  6885                           ;Config register IDLOC2 @ 0x200002
  6886                           ;	unspecified, using default values
  6887  200002                     	org	2097154
  6888  200002  FF                 	db	255
  6889                           
  6890                           ;Config register IDLOC3 @ 0x200003
  6891                           ;	unspecified, using default values
  6892  200003                     	org	2097155
  6893  200003  FF                 	db	255
  6894                           
  6895                           ;Config register IDLOC4 @ 0x200004
  6896                           ;	unspecified, using default values
  6897  200004                     	org	2097156
  6898  200004  FF                 	db	255
  6899                           
  6900                           ;Config register IDLOC5 @ 0x200005
  6901                           ;	unspecified, using default values
  6902  200005                     	org	2097157
  6903  200005  FF                 	db	255
  6904                           
  6905                           ;Config register IDLOC6 @ 0x200006
  6906                           ;	unspecified, using default values
  6907  200006                     	org	2097158
  6908  200006  FF                 	db	255
  6909                           
  6910                           ;Config register IDLOC7 @ 0x200007
  6911                           ;	unspecified, using default values
  6912  200007                     	org	2097159
  6913  200007  FF                 	db	255
  6914                           
  6915                           	psect	config
  6916                           
  6917                           ;Config register CONFIG1L @ 0x300000
  6918                           ;	PLL Selection
  6919                           ;	PLLSEL = PLL3X, 3x clock multiplier
  6920                           ;	PLL Enable Configuration bit
  6921                           ;	CFGPLLEN = ON, PLL Enabled
  6922                           ;	CPU System Clock Postscaler
  6923                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  6924                           ;	Low Speed USB mode with 48 MHz system clock
  6925                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  6926  300000                     	org	3145728
  6927  300000  23                 	db	35
  6928                           
  6929                           ;Config register CONFIG1H @ 0x300001
  6930                           ;	Oscillator Selection
  6931                           ;	FOSC = INTOSCIO, Internal oscillator
  6932                           ;	Primary Oscillator Shutdown
  6933                           ;	PCLKEN = ON, Primary oscillator enabled
  6934                           ;	Fail-Safe Clock Monitor
  6935                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6936                           ;	Internal/External Oscillator Switchover
  6937                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6938  300001                     	org	3145729
  6939  300001  28                 	db	40
  6940                           
  6941                           ;Config register CONFIG2L @ 0x300002
  6942                           ;	Power-up Timer Enable
  6943                           ;	nPWRTEN = OFF, Power up timer disabled
  6944                           ;	Brown-out Reset Enable
  6945                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  6946                           ;	Brown-out Reset Voltage
  6947                           ;	BORV = 190, BOR set to 1.9V nominal
  6948                           ;	Low-Power Brown-out Reset
  6949                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  6950  300002                     	org	3145730
  6951  300002  5F                 	db	95
  6952                           
  6953                           ;Config register CONFIG2H @ 0x300003
  6954                           ;	Watchdog Timer Enable bits
  6955                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  6956                           ;	Watchdog Timer Postscaler
  6957                           ;	WDTPS = 32768, 1:32768
  6958  300003                     	org	3145731
  6959  300003  3C                 	db	60
  6960                           
  6961                           ; Padding undefined space
  6962  300004                     	org	3145732
  6963  300004  FF                 	db	255
  6964                           
  6965                           ;Config register CONFIG3H @ 0x300005
  6966                           ;	CCP2 MUX bit
  6967                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  6968                           ;	PORTB A/D Enable bit
  6969                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6970                           ;	Timer3 Clock Input MUX bit
  6971                           ;	T3CMX = RC0, T3CKI function is on RC0
  6972                           ;	SDO Output MUX bit
  6973                           ;	SDOMX = RB3, SDO function is on RB3
  6974                           ;	Master Clear Reset Pin Enable
  6975                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  6976  300005                     	org	3145733
  6977  300005  D3                 	db	211
  6978                           
  6979                           ;Config register CONFIG4L @ 0x300006
  6980                           ;	Stack Full/Underflow Reset
  6981                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6982                           ;	Single-Supply ICSP Enable bit
  6983                           ;	LVP = OFF, Single-Supply ICSP disabled
  6984                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  6985                           ;	ICPRT = OFF, ICPORT disabled
  6986                           ;	Extended Instruction Set Enable bit
  6987                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  6988                           ;	Background Debugger Enable bit
  6989                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6990  300006                     	org	3145734
  6991  300006  81                 	db	129
  6992                           
  6993                           ; Padding undefined space
  6994  300007                     	org	3145735
  6995  300007  FF                 	db	255
  6996                           
  6997                           ;Config register CONFIG5L @ 0x300008
  6998                           ;	Block 0 Code Protect
  6999                           ;	CP0 = OFF, Block 0 is not code-protected
  7000                           ;	Block 1 Code Protect
  7001                           ;	CP1 = OFF, Block 1 is not code-protected
  7002                           ;	Block 2 Code Protect
  7003                           ;	CP2 = OFF, Block 2 is not code-protected
  7004                           ;	Block 3 Code Protect
  7005                           ;	CP3 = OFF, Block 3 is not code-protected
  7006  300008                     	org	3145736
  7007  300008  0F                 	db	15
  7008                           
  7009                           ;Config register CONFIG5H @ 0x300009
  7010                           ;	Boot Block Code Protect
  7011                           ;	CPB = OFF, Boot block is not code-protected
  7012                           ;	Data EEPROM Code Protect
  7013                           ;	CPD = OFF, Data EEPROM is not code-protected
  7014  300009                     	org	3145737
  7015  300009  C0                 	db	192
  7016                           
  7017                           ;Config register CONFIG6L @ 0x30000A
  7018                           ;	Block 0 Write Protect
  7019                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7020                           ;	Block 1 Write Protect
  7021                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7022                           ;	Block 2 Write Protect
  7023                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7024                           ;	Block 3 Write Protect
  7025                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7026  30000A                     	org	3145738
  7027  30000A  0F                 	db	15
  7028                           
  7029                           ;Config register CONFIG6H @ 0x30000B
  7030                           ;	Configuration Registers Write Protect
  7031                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7032                           ;	Boot Block Write Protect
  7033                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7034                           ;	Data EEPROM Write Protect
  7035                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7036  30000B                     	org	3145739
  7037  30000B  E0                 	db	224
  7038                           
  7039                           ;Config register CONFIG7L @ 0x30000C
  7040                           ;	Block 0 Table Read Protect
  7041                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7042                           ;	Block 1 Table Read Protect
  7043                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7044                           ;	Block 2 Table Read Protect
  7045                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7046                           ;	Block 3 Table Read Protect
  7047                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7048  30000C                     	org	3145740
  7049  30000C  0F                 	db	15
  7050                           
  7051                           ;Config register CONFIG7H @ 0x30000D
  7052                           ;	Boot Block Table Read Protect
  7053                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7054  30000D                     	org	3145741
  7055  30000D  40                 	db	64
  7056                           tosu	equ	0xFFF
  7057                           tosh	equ	0xFFE
  7058                           tosl	equ	0xFFD
  7059                           stkptr	equ	0xFFC
  7060                           pclatu	equ	0xFFB
  7061                           pclath	equ	0xFFA
  7062                           pcl	equ	0xFF9
  7063                           tblptru	equ	0xFF8
  7064                           tblptrh	equ	0xFF7
  7065                           tblptrl	equ	0xFF6
  7066                           tablat	equ	0xFF5
  7067                           prodh	equ	0xFF4
  7068                           prodl	equ	0xFF3
  7069                           indf0	equ	0xFEF
  7070                           postinc0	equ	0xFEE
  7071                           postdec0	equ	0xFED
  7072                           preinc0	equ	0xFEC
  7073                           plusw0	equ	0xFEB
  7074                           fsr0h	equ	0xFEA
  7075                           fsr0l	equ	0xFE9
  7076                           wreg	equ	0xFE8
  7077                           indf1	equ	0xFE7
  7078                           postinc1	equ	0xFE6
  7079                           postdec1	equ	0xFE5
  7080                           preinc1	equ	0xFE4
  7081                           plusw1	equ	0xFE3
  7082                           fsr1h	equ	0xFE2
  7083                           fsr1l	equ	0xFE1
  7084                           bsr	equ	0xFE0
  7085                           indf2	equ	0xFDF
  7086                           postinc2	equ	0xFDE
  7087                           postdec2	equ	0xFDD
  7088                           preinc2	equ	0xFDC
  7089                           plusw2	equ	0xFDB
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8

Data Sizes:
    Strings     787
    Constant    768
    Data        3
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      0      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@read(COMRAM[32]), test_leds_LoRa@READ(COMRAM[10]), init_mod_LoRa@READ(COMRAM[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_74(CODE[3]), STR_71(CODE[3]), 
		 -> STR_68(CODE[3]), STR_65(CODE[3]), STR_62(CODE[3]), STR_59(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[3]), STR_50(CODE[3]), STR_47(CODE[3]), 
		 -> STR_44(CODE[3]), STR_41(CODE[3]), STR_38(CODE[3]), STR_35(CODE[3]), 
		 -> STR_32(CODE[3]), STR_29(CODE[3]), STR_26(CODE[3]), STR_23(CODE[3]), 
		 -> STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), STR_11(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_74(CODE[3]), STR_71(CODE[3]), 
		 -> STR_68(CODE[3]), STR_65(CODE[3]), STR_62(CODE[3]), STR_59(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[3]), STR_50(CODE[3]), STR_47(CODE[3]), 
		 -> STR_44(CODE[3]), STR_41(CODE[3]), STR_38(CODE[3]), STR_35(CODE[3]), 
		 -> STR_32(CODE[3]), STR_29(CODE[3]), STR_26(CODE[3]), STR_23(CODE[3]), 
		 -> STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), STR_11(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_74(CODE[3]), STR_71(CODE[3]), 
		 -> STR_68(CODE[3]), STR_65(CODE[3]), STR_62(CODE[3]), STR_59(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[3]), STR_50(CODE[3]), STR_47(CODE[3]), 
		 -> STR_44(CODE[3]), STR_41(CODE[3]), STR_38(CODE[3]), STR_35(CODE[3]), 
		 -> STR_32(CODE[3]), STR_29(CODE[3]), STR_26(CODE[3]), STR_23(CODE[3]), 
		 -> STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), STR_11(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@read(COMRAM[32]), test_leds_LoRa@READ(COMRAM[10]), init_mod_LoRa@READ(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1538_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@read(COMRAM[32]), test_leds_LoRa@READ(COMRAM[10]), init_mod_LoRa@READ(COMRAM[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@read(COMRAM[32]), test_leds_LoRa@READ(COMRAM[10]), init_mod_LoRa@READ(COMRAM[10]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 32
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(COMRAM[6]), oled_putUint8@numData(COMRAM[6]), STR_82(CODE[7]), 
		 -> STR_79(CODE[10]), STR_78(CODE[7]), STR_75(CODE[8]), STR_72(CODE[14]), 
		 -> STR_69(CODE[14]), STR_66(CODE[14]), STR_63(CODE[14]), STR_60(CODE[14]), 
		 -> STR_57(CODE[14]), STR_54(CODE[14]), STR_51(CODE[14]), STR_48(CODE[14]), 
		 -> main@read(COMRAM[32]), STR_45(CODE[10]), STR_43(CODE[8]), STR_42(CODE[16]), 
		 -> test_leds_LoRa@READ(COMRAM[10]), STR_40(CODE[10]), STR_39(CODE[16]), STR_36(CODE[5]), 
		 -> STR_33(CODE[21]), STR_30(CODE[4]), STR_27(CODE[10]), STR_24(CODE[9]), 
		 -> STR_21(CODE[12]), STR_18(CODE[16]), STR_15(CODE[11]), STR_12(CODE[15]), 
		 -> STR_9(CODE[9]), STR_8(CODE[17]), init_mod_LoRa@READ(COMRAM[10]), STR_1(CODE[10]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendCommand@texto	PTR unsigned char  size(2) Largest target is 27
		 -> STR_80(CODE[12]), STR_76(CODE[13]), STR_73(CODE[14]), STR_70(CODE[14]), 
		 -> STR_67(CODE[14]), STR_64(CODE[14]), STR_61(CODE[14]), STR_58(CODE[14]), 
		 -> STR_55(CODE[14]), STR_52(CODE[14]), STR_49(CODE[14]), STR_46(CODE[12]), 
		 -> STR_37(CODE[20]), STR_34(CODE[20]), STR_31(CODE[22]), STR_28(CODE[20]), 
		 -> STR_25(CODE[21]), STR_22(CODE[19]), STR_19(CODE[19]), STR_16(CODE[27]), 
		 -> STR_13(CODE[19]), STR_10(CODE[18]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__get_Data	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _main->_init_mod_LoRa
    _oled_putUint8->_oled_putString
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _init_mod_LoRa->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_fputc
    _sendCommand->_EUSART1_Write
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   69841
                                             60 COMRAM    35    35      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                      _init_mod_LoRa
                          _init_port
                         _oled_clear
                          _oled_init
                     _oled_putString
                      _oled_putUint8
                        _sendCommand
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _oled_putUint8                                        9     7      2   16875
                                             17 COMRAM     9     7      2
                            ___awdiv
                            ___awmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1046
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     199
                                              2 COMRAM     1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      44
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      45
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (1) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_mod_LoRa                                       12    12      0   26010
                                             48 COMRAM    12    12      0
                           _get_Data
                         _oled_clear
                      _oled_clearRow
                     _oled_putString
                        _sendCommand
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7872
                                             34 COMRAM    14     8      6
                       _EUSART1_Read (ARG)
                           _get_Data (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    3721
                                             26 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    3368
                                             17 COMRAM     9     3      6
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1593
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1238
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          2     0      2    2036
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _oled_putString                                       5     1      4   14202
                                             12 COMRAM     5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (2) _oled_clear                                           0     0      0     683
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (3) _oled_clearRow                                        2     2      0     683
                                             12 COMRAM     2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_putChar                                        10     8      2     593
                                              2 COMRAM    10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (4) _oled_writeData                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Set_Page_Address                                     1     1      0      67
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _Set_Column_Address                                   1     1      0      66
                                              1 COMRAM     1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _oled_writeCommand                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_Data                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _init_mod_LoRa
     _get_Data
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_clearRow
     _oled_putString
       _oled_putChar
     _sendCommand
       _EUSART1_Write
     _sprintf
       _EUSART1_Read (ARG)
       _get_Data (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _fputc
   _init_port
   _oled_clear
   _oled_init
     _oled_clear
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
   _oled_putUint8
     ___awdiv
     ___awmod
     _oled_putString
   _sendCommand
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      34       5       32.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93       6        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 06 22:34:46 2021

                                            l43 6804                                              l60 6660  
                                            l71 6750                                              l64 6688  
                                            l74 65CE                                              l67 671C  
                                            l92 652C                                              l77 65E0  
                                            l95 6518                                              l89 6522  
                                  ___awdiv@sign 0006                          __end_of_oled_writeData 65B6  
                                           l202 6786                                             l213 79E8  
                                           l301 6616                                             l134 67C4  
                                           l304 6AB8                                             l162 6636  
                                           l156 655E                                             l332 665E  
                                           l324 6A28                                             l317 69A8  
                                           l237 73F4                                             l159 6628  
                                           l327 65FA                                             l343 66E6  
                                           l335 66B6                                             l352 65B4  
                                           l193 656C                                             l361 6544  
                                           l338 692C                                             l355 658C  
                                           l611 6B68                                             l364 6550  
                                           l349 65A0                                             l294 657C  
                                           l358 6538                                             l297 65CA  
                                           l598 6C2C                         ?_oled_initialDispayLine 0001  
                                           u140 65DC                                             u141 65D8  
                                           u190 6636                                             u191 6632  
                                           u600 6CB0                                             u601 6CAC  
                                           u610 6D0C                                             u611 6D08  
                                           u700 665E                                             u620 6D32  
                                           u701 665A                                             u621 6D2E  
                                           u630 6D52                                             u710 68AC  
                                           u631 6D4E                                             u711 68A8  
                                           u720 672A                                             u640 6DA0  
                                           u800 66CA                                             u721 6726  
                                           u641 6D9C                                             u801 66C6  
                                           u730 673E                                             u570 6C40  
                                           u650 6DB0                                             u810 6B7C  
                                           u731 673A                                             u571 6C3C  
                                           u651 6DAC                                             u811 6B78  
                                           u660 69A8                                             u740 6786  
                                           u580 6C52                                             u820 6B96  
                                           u900 6B1E                                             u661 69A4  
                                           u741 6782                                             u581 6C4E  
                                           u821 6B92                                             u901 6B1A  
                                           u750 69BE                                             u590 6C7A  
                                           u670 6DF4                                             u830 6BBC  
                                           u910 6B34                                             u751 69BA  
                                           u591 6C76                                             u671 6DF0  
                                           u831 6BB8                                             u911 6B30  
                                           u760 69E2                                             u680 6E3C  
                                           u840 6BDA                                             u920 6B58  
                                           u681 6E38                                             u841 6BD6  
                                           u921 6B54                                             u930 666E  
                                           u770 69F2                                             u690 6EAE  
                                           u850 6BF6                                             u931 666A  
                                           u771 69EE                                             u691 6EAA  
                                           u851 6BF2                                             u940 6682  
                                           u780 6A1A                                             u860 6C1C  
                                           u941 667E                                             u861 6C18  
                                           u790 660E                                             u870 6ACC  
                                           u767 69D8                                             u791 660A  
                                           u871 6AC8                                             u880 6AE6  
                                           u960 6F6C                                             u881 6AE2  
                                           u961 6F68                                             u890 6B00  
                                           u970 6FD4                                             u787 6A10  
                                           u891 6AFC                                             u971 6FD0  
                                           u980 703E                                             u981 703A  
                                           u990 7094                                             u991 7090  
                                           _log 0088                                    ___awmod@sign 0006  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1102 68AC                                            l1103 68B4  
                                          l1115 6CF6                                            l2020 659C  
                                          l2012 6590                                            l1045 6852  
                                          l2022 659E                                            l2014 6594  
                                          l2102 6946                                            l1126 650A  
                                          l2030 6C52                                            l2110 6DF4  
                                          l2200 67F2                                            l2016 6598  
                                          l2040 6570                                            l2104 6996  
                                          l2032 6C5C                                            l2120 6E6E  
                                          l2112 6E02                                            l2202 67FE  
                                          l2210 673E                                            l2018 659A  
                                          l2042 6576                                            l2050 65A4  
                                          l2106 6998                                            l2034 6C7A  
                                          l2026 6C2E                                            l2130 6ED0  
                                          l2114 6E14                                            l1091 6DCE  
                                          l2212 6742                                            l2204 671C  
                                          l2060 65B2                                            l2052 65A8  
                                          l2220 6766                                            l2036 6CB0  
                                          l2028 6C40                                            l2124 6E8A  
                                          l2116 6E18                                            l2140 6EF6  
                                          l2108 6DD0                                            l2300 6B6E  
                                          l2150 6524                                            l1350 67AA  
                                          l1342 6788                                            l2206 672A  
                                          l2046 65B8                                            l2054 65AC  
                                          l2230 69C2                                            l2222 676A  
                                          l1086 6D5E                                            l2070 6D24  
                                          l2142 6F1A                                            l2126 6EAE  
                                          l2134 6EDC                                            l2118 6E3C  
                                          l2310 6B9E                                            l2302 6B7C  
                                          l2152 6510                                            l1352 67C2  
                                          l1344 67A0                                            l2208 6730  
                                          l2056 65AE                                            l2160 663E  
                                          l2240 65E2                                            l2232 69F2  
                                          l2224 69AA                                            l2216 6752  
                                          l2080 6D6A                                            l2072 6D32  
                                          l2064 6CF8                                            l2136 6EEA  
                                          l2128 6EBC                                            l1096 6F2C  
                                          l2320 6BCC                                            l2312 6BA2  
                                          l2304 6B84                                            l1089 6DA0  
                                          l1354 6618                                            l1346 67A2  
                                          l2058 65B0                                            l2162 664C  
                                          l2154 663A                                            l2234 6A1E  
                                          l2226 69AE                                            l2218 6756  
                                          l2082 6D7E                                            l2074 6D44  
                                          l2066 6D0C                                            l2250 6842  
                                          l2242 6806                                            l2410 7436  
                                          l2170 6548                                            l2330 6C00  
                                          l2322 6BDA                                            l2314 6BAA  
                                          l2306 6B88                                            l2148 651A  
                                          l1348 67A8                                            l2092 6930  
                                          l2164 664E                                            l2236 6A22  
                                          l1276 65CE                                            l2084 6D82  
                                          l2068 6D18                                            l2244 6816  
                                          l2500 771A                                            l2420 749C  
                                          l2412 744C                                            l2180 6530  
                                          l2260 68BC                                            l2332 6C06  
                                          l2324 6BE0                                            l2316 6BBC  
                                          l2308 6B96                                            l2094 6936  
                                          l1278 65DC                                            l2086 6DB0  
                                          l2078 6D56                                            l2190 686A  
                                          l2246 681E                                            l2510 7778  
                                          l2502 7726                                            l2430 7502  
                                          l2422 74BC                                            l2414 7450  
                                          l1534 6560                                            l2182 6532  
                                          l2166 653C                                            l2174 6580  
                                          l2270 68E0                                            l2262 68BE  
                                          l2254 65FC                                            l2326 6BF6  
                                          l2318 6BC4                                            l2334 6C0C  
                                          l2350 6AD8                                            l2342 6ABA  
                                          l2096 6942                                            l2088 6DC2  
                                          l2192 6890                                            l2248 6826  
                                          l2520 77C4                                            l2512 777E  
                                          l2504 7746                                            l2440 754E  
                                          l2432 7508                                            l2424 74D0  
                                          l2416 7470                                            l1536 6568  
                                          l2176 6586                                            l2280 6908  
                                          l2272 68F0                                            l2264 68CE  
                                          l2256 660E                                            l2336 6C1C  
                                          l2328 6BFE                                            l2360 6B10  
                                          l2352 6AE6                                            l2344 6ABE  
                                          l2600 6AA0                                            l2194 67C6  
                                          l2186 6854                                            l2530 7802  
                                          l2522 77D8                                            l2514 7784  
                                          l2506 775A                                            l2450 758C  
                                          l2442 7562                                            l2434 750E  
                                          l2426 74E8                                            l2418 7484  
                                          l2290 6926                                            l2282 690E  
                                          l2274 68F6                                            l2266 68D0  
                                          l2258 68B6                                            l2338 6C24  
                                          l2362 6B1E                                            l2370 6B48  
                                          l2354 6AEE                                            l2346 6ACC  
                                          l2602 6AA4                                            l2380 666E  
                                          l2196 67DA                                            l2188 685C  
                                          l2540 786E                                            l2532 7816  
                                          l2524 77F0                                            l2516 7798  
                                          l2508 7772                                            l2460 75F8  
                                          l2452 75A0                                            l2444 757A  
                                          l2436 7522                                            l2428 74FC  
                                          l2284 6914                                            l2276 68FC  
                                          l2268 68DE                                            l2292 66BA  
                                          l2372 6B58                                            l2364 6B34  
                                          l2356 6B00                                            l2348 6AD4  
                                          l2700 705E                                            l2382 6674  
                                          l2198 67E6                                            l2390 6552  
                                          l2550 78A0                                            l2542 7874  
                                          l2534 7822                                            l2526 77F6  
                                          l2518 77A4                                            l2470 762A  
                                          l2462 75FE                                            l2454 75AC  
                                          l2446 7580                                            l2438 752E  
                                          l2286 691A                                            l2278 6902  
                                          l2294 66CA                                            l2374 6B60  
                                          l2366 6B3C                                            l2358 6B08  
                                          l2710 70B4                                            l2384 6682  
                                          l2392 655A                                            l2560 78F8  
                                          l2552 78C0                                            l2544 787A  
                                          l2536 7842                                            l2528 77FC  
                                          l2480 7682                                            l2472 764A  
                                          l2464 7604                                            l2456 75CC  
                                          l2448 7586                                            l2288 6920  
                                          l2296 66DA                                            l2368 6B42  
                                          l2800 73A6                                            l2720 710A  
                                          l2704 7082                                            l2386 6686  
                                          l2378 6660                                            l2570 7952  
                                          l2562 78FE                                            l2554 78D4  
                                          l2546 7880                                            l2538 7856  
                                          l2490 76DC                                            l2482 7688  
                                          l2474 765E                                            l2466 760A  
                                          l2458 75E0                                            l2298 6B6A  
                                          l2810 7416                                            l2802 73C6  
                                          l2730 7160                                            l2706 7094  
                                          l2714 70D8                                            l2580 7990  
                                          l2572 796A                                            l2564 7912  
                                          l2556 78EC                                            l2548 7894  
                                          l2492 76F4                                            l2484 769C  
                                          l2476 7676                                            l2468 761E  
                                          l2812 7418                                            l2804 73DA  
                                          l2740 71B6                                            l2716 70EA  
                                          l2724 712E                                            l2708 70A8  
                                          l2660 6F2E                                            l2582 799C  
                                          l2574 7970                                            l2566 791E  
                                          l2558 78F2                                            l2494 76FA  
                                          l2486 76A8                                            l2478 767C  
                                          l2590 669C                                            l2750 720C  
                                          l2726 7140                                            l2734 7184  
                                          l2718 70FE                                            l2806 73F4  
                                          l2670 6F54                                            l2662 6F32  
                                          l2584 79BC                                            l2576 7976  
                                          l2568 793E                                            l2496 7700  
                                          l2488 76C8                                            l2592 66A0  
                                          l2808 7402                                            l2760 7262  
                                          l2736 7196                                            l2744 71DA  
                                          l2728 7154                                            l2680 6F8C  
                                          l2672 6F58                                            l2664 6F36  
                                          l2586 79D0                                            l2578 797C  
                                          l2498 7706                                            l2594 66A6  
                                          l2770 72B8                                            l2746 71EC  
                                          l2754 7230                                            l2738 71AA  
                                          l2690 6FF4                                            l2682 6FAC  
                                          l2674 6F5C                                            l2666 6F4C  
                                          l2596 66B2                                            l2588 668A  
                                          l2780 7306                                            l2756 7242  
                                          l2764 7286                                            l2748 7200  
                                          l2692 7014                                            l2676 6F6C  
                                          l2684 6FC4                                            l2668 6F50  
                                          l2598 6A2C                                            l2790 7368  
                                          l2782 7312                                            l2766 7298  
                                          l2774 72DC                                            l2758 7256  
                                          l2686 6FD4                                            l2694 702C  
                                          l2678 6F80                                            l2792 736C  
                                          l2784 7332                                            l2776 72EE  
                                          l2768 72AC                                            l2696 703E  
                                          l2688 6FE8                                            l2794 7382  
                                          l2786 7346                                            l2778 72F2  
                                          l2698 7052                                            l2796 7386  
                                          l2788 7354                                            l2798 739A  
                                          STR_1 7FA1                                            STR_2 7D3A  
                                          STR_3 7D54                                            STR_4 7D06  
                                          STR_5 7D20                                            STR_6 7FFB  
                                          STR_7 7FFB                                            STR_8 7E35  
                                          STR_9 7FC9                                            u1000 70EA  
                                          u1001 70E6                                            u1010 7140  
                                          u1011 713C                                            u1020 7196  
                                          u1021 7192                                            u1030 71EC  
                                          u1031 71E8                                            u1040 7242  
                                          u1041 723E                                            u1050 7298  
                                          u1107 7376                                            u1051 7294  
                                          u1060 72EE                                            u1117 73E4  
                                          u1061 72EA                                            u1207 75EA  
                                          u1127 7422                                            u1217 7668  
                                          u1137 68C4                                            u1227 76E6  
                                          u1147 68D6                                            u1237 7764  
                                          u1157 68E6                                            _LATA 000F89  
                                          _LATB 000F8A                                            u1247 77E2  
                                          u1167 7440                                            _LATC 000F8B  
                                          _LATD 000F8C                                            u1257 7860  
                                          u1177 748E                                            u1097 6F40  
                                          _LATE 000F8D                                            u1267 78DE  
                                          u1187 74DA                                            u1277 795C  
                                          u1197 756C                                            u1287 79DA  
                                          _WPUB 000F85                                   _EUSART1_Write 65CC  
                                          _dbuf 0060                                            _ctoa 6CF8  
                                          _main 6F2E                                   ?_EUSART1_Read 0001  
                                          _prec 0084                                            _nout 0080  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          prodl 000FF3                                            start 0000  
                               ?_oled_putString 000D                                ?_oled_setDisplay 0001  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 0020  
                __end_of_oled_initialDispayLine 653A                                 ?_oled_writeData 0001  
                 __end_of_OSCILLATOR_Initialize 6638                                           ?_ctoa 000A  
                                         ?_main 0001                                 __end_of___awdiv 6C2E  
                                         STR_10 7E23                                           STR_11 7FFB  
                                         STR_20 7FFB                                           STR_12 7E66  
                                         STR_21 7F8A                                           STR_13 7DEA  
                                         STR_14 7FFB                                           STR_30 7FF7  
                                         STR_22 7DFD                                           STR_23 7FFB  
                                         STR_15 7F96                                           STR_31 7D6E  
                                         STR_32 7FFB                                           STR_24 7FD2  
                                         STR_40 7FBF                                           STR_16 7CEB  
                                         STR_17 7FFB                                           STR_33 7D99  
                                         STR_25 7D84                                           STR_50 7FFB  
                                         STR_26 7FFB                                           STR_18 7E56  
                                         STR_34 7DAE                                           STR_35 7FFB  
                                         STR_43 7FDB                                           STR_27 7FB5  
                                         STR_51 7F01                                           STR_19 7E10  
                                         STR_36 7FF2                                           STR_60 7F2B  
                                         STR_52 7E83                                           STR_28 7DD6  
                               __end_of___awmod 6B6A                                           STR_53 7FFB  
                                         STR_29 7FFB                                           STR_45 7FAB  
                                         STR_61 7EAD                                           STR_37 7DC2  
                                         STR_62 7FFB                                           STR_38 7FFB  
                                         STR_46 7F7E                                           STR_54 7F0F  
                                         STR_70 7ED7                                           STR_71 7FFB  
                                         STR_47 7FFB                                           STR_63 7F39  
                                         STR_55 7E91                                           STR_39 7E46  
                                         STR_80 7F7E                                           STR_56 7FFB  
                                         STR_72 7F63                                           STR_48 7EF3  
                                         STR_64 7EBB                                           STR_81 7FFB  
                                         STR_65 7FFB                                           STR_57 7F1D  
                                         STR_73 7EE5                                           STR_49 7E75  
                                         STR_82 7FEB                                           STR_74 7FFB  
                                         STR_66 7F47                                           STR_58 7E9F  
                                         STR_59 7FFB                                           STR_75 7FE3  
                                         STR_67 7EC9                                           STR_68 7FFB  
                                         STR_76 7F71                                           STR_77 7FFB  
                                         STR_69 7F55                                           STR_78 7FEB  
                                         STR_79 7FAB                                 ___awdiv@divisor 0003  
                           oled_putUint8@number 0014                                 ___awdiv@counter 0005  
                                  vfpfcnvrt@fmt 0014                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                             oled_putChar@index 000C                                           _flags 0086  
                                         _fputc 6C2E                                           _width 0082  
                                         ctoa@c 000C                                           _putch 650A  
                                         ctoa@l 000E                                           ctoa@w 0010  
                                ?_EUSART1_Write 0001                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                      oled_setDisplay@displayType 0002  
                                         status 000FD8                                 __end_of_sprintf 6854  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 66E8  
                                  __end_of_ctoa 6DD0                      __end_of_EUSART1_Initialize 6806  
                                  __end_of_main 7436                                    ?_sendCommand 0002  
                                        ??_ctoa 000D                                          ??_main 003D  
                                 __activetblptr 000002                                          ?_fputc 0001  
                                        _ACTCON 000FB5                                ___awdiv@dividend 0001  
                                        _ANSELA 000F5B                                          ?_putch 0001  
                                        _ANSELB 000F5C                                          _ANSELC 000F5D  
                                        _ANSELD 000F5E                                          _ANSELE 000F5F  
                          oled_putUint8@numData 0015                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                 oled_putChar@k 000B                                __end_of_get_Data 6752  
                                  vfprintf@cfmt 0021                      __end_of_Set_Column_Address 65CC  
                             init_mod_LoRa@READ 0033                       __size_of_Set_Page_Address 0010  
                                     ??___awdiv 0005                                       ??___awmod 0005  
                        __size_of_init_mod_LoRa 05B4                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 670C                                ___awdiv@quotient 0007  
                               ___awmod@divisor 0003                                          isa$std 000001  
                               ___awmod@counter 0005                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          ctoa@fp 000A  
                                        fputc@c 0001                                    __mediumconst 79EA  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          putch@c 0001  
                              __end_of_vfprintf 68B6                                 ??_EUSART1_Write 0001  
                                     ??_sprintf 0029                                   ?_oled_devInit 0001  
                             _SYSTEM_Initialize 6552                                      __accesstop 0060  
                       __end_of__initialization 6712                              ?_SYSTEM_Initialize 0001  
                            oled_writeData@data 0001                                   ___rparam_used 000001  
                                 ?_oled_setFont 0001                                   ?_oled_putChar 0003  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 650D  
                           ??_SYSTEM_Initialize 0003                                   __end_of_fputc 6CF8  
       __end_of_oled_setContrastControlRegister 658E        __size_of_oled_setContrastControlRegister 0010  
             ??_oled_setContrastControlRegister 0002                ?_oled_setContrastControlRegister 0001  
               _oled_setContrastControlRegister 657E                                   __end_of_putch 650C  
                          __end_of_EUSART1_Read 668A                               __end_of_OledFont0 7CEB  
                                ??_oled_devInit 0003                                         ??_fputc 0005  
                     __end_of_SYSTEM_Initialize 6560                                   _init_mod_LoRa 7436  
                                       ??_putch 0001                                      __pbssBANK0 0060  
                              ??_oled_putString 0011                     oled_regulorResistorSelect@r 0002  
                                ??_oled_setFont 0003                             oled_putString@index 0011  
                                ??_oled_putChar 0005                              __size_of_init_port 000E  
                        __size_of_oled_clearRow 0028                          oled_putChar@start_page 0004  
               __end_of_EUSART1_SetErrorHandler 651A                              __size_of_oled_init 002E  
                              ??_oled_writeData 0001                       Set_Column_Address@address 0002  
        __end_of_EUSART1_SetFramingErrorHandler 6524         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 651A                            __size_of_sendCommand 0036  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 015E  
                                       _OSCTUNE 000F9B                          __size_of_oled_putUint8 0090  
                                       _SPBRGH1 000FB0                                       ?_get_Data 0001  
                                ?_init_mod_LoRa 0001                                         __Hparam 0000  
                                       __Lparam 0000                                _Set_Page_Address 656E  
                                       ___awdiv 6B6A                                         ___awmod 6ABA  
                                     ?_vfprintf 001B              oled_setContrastControlRegister@mod 0002  
                                       __pcinit 66E8                                         __ramtop 0800  
                                       __ptext0 6F2E                                         __ptext1 6A2A  
                                       __ptext2 6ABA                                         __ptext3 6B6A  
                                       __ptext4 668A                                         __ptext5 65FC  
                                       __ptext6 66B8                                         __ptext7 68B6  
                                       __ptext8 657E                                         __ptext9 6546  
                      __size_of_oled_setDisplay 0030                                oled_setFont@font 0001  
                         _OSCILLATOR_Initialize 6618                                   _oled_clearRow 6638  
                                    _oled_clear 65E2                               __end_of_init_port 656E  
                              ___awmod@dividend 0001                              _EUSART1_Initialize 67C6  
                      ??_PIN_MANAGER_Initialize 0001                                      ??_get_Data 0003  
                             __end_of_oled_init 66B8                      __size_of_SYSTEM_Initialize 000E  
                                       _sprintf 6806                            end_of_initialization 6712  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0003  
                                 __Lmediumconst 79EA                     _EUSART1_OverrunErrorHandler 008C  
                             _oled_powerControl 653A                              ?_oled_powerControl 0001  
                                 _oled_putUint8 6A2A                               __end_of_vfpfcnvrt 6F2E  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002A                            __end_of_oled_devInit 692E  
                                    ??_vfprintf 0021                            ??_EUSART1_Initialize 0003  
                           ??_oled_powerControl 0002                         oled_putUint8@start_page 0013  
                                ?_oled_clearRow 0001                            __end_of_oled_setFont 6618  
                            _Set_Column_Address 65B6                            __end_of_oled_putChar 69AA  
                               ??_init_mod_LoRa 0031                                       _TRISAbits 000F92  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                                     _TRISEbits 000F96                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                             ?_Set_Column_Address 0001  
                      oled_putString@start_page 0010                       __end_of_oled_powerControl 6546  
                  ??_oled_regulorResistorSelect 0002                                    _EUSART1_Read 6660  
                                ?_oled_putUint8 0012                        ??_oled_initialDispayLine 0002  
                              sendCommand@texto 0002                            ??_Set_Column_Address 0002  
                                   vfpfcnvrt@ap 0016                                     vfpfcnvrt@fp 0012  
                        ?_OSCILLATOR_Initialize 0001                        oled_writeCommand@command 0001  
                                   ?_oled_clear 0001                             start_initialization 66E8  
           __size_of_oled_regulorResistorSelect 000C                 __size_of_PIN_MANAGER_Initialize 003E  
                             ??_oled_setDisplay 0002                                       _OledFont0 79EB  
                         __end_of_EUSART1_Write 65E2                                     vfprintf@fmt 001D  
                                   __pdataBANK0 0091                                 ??_oled_clearRow 000D  
                     oled_putString@station_dot 000F                        __end_of_Set_Page_Address 657E  
                             __size_of_get_Data 0036                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                      __size_of_oled_powerControl 000C  
                               ??_oled_putUint8 0014                            oled_putString@string 000D  
                             _oled_writeCommand 658E                           __size_of_oled_devInit 0078  
                       oled_putChar@station_dot 0003                          _PIN_MANAGER_Initialize 6788  
                           __size_of_oled_clear 001A                 __size_of_oled_initialDispayLine 000C  
                            ?_oled_writeCommand 0001                                   __pmediumconst 79EA  
                                      ?___awdiv 0001                                        ?___awmod 0001  
                         __size_of_oled_setFont 001C                                   ??_sendCommand 0004  
                         __size_of_oled_putChar 007C                             ??_oled_writeCommand 0001  
                             __size_of_vfprintf 0062                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 008A  
                       _EUSART1_SetErrorHandler 6510                                        ?_sprintf 0023  
                                __size_of_fputc 00CA                                       _init_port 6560  
                                __size_of_putch 0002                                    _oled_devInit 68B6  
            __end_of_oled_regulorResistorSelect 6552                      _oled_regulorResistorSelect 6546  
                                     _oled_init 668A                                        _LATAbits 000F89  
                     __end_of_oled_writeCommand 65A2         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _LATEbits 000F8D                                    _oled_setFont 65FC  
                                  _oled_putChar 692E                                        _PIR1bits 000F9E  
                       __size_of_oled_putString 0080                                       _vfpfcnvrt 6DD0  
                       Set_Page_Address@address 0002                         __size_of_oled_writeData 0014  
                           __end_of_sendCommand 6788                          _oled_initialDispayLine 652E  
                                    vfpfcnvrt@c 001A                                      ?_init_port 0001  
                                   _INTCON2bits 000FF1                                      ?_oled_init 0001  
                                      __Hrparam 0000                                      vfprintf@ap 001F  
                                      __Lrparam 0000                                      vfprintf@fp 001B  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___awdiv 00C4  
                              __size_of___awmod 00B0                      oled_initialDispayLine@line 0002  
                                  _selectedFont 0091                     __size_of_EUSART1_Initialize 0040  
                               _oled_setDisplay 66B8                                      ?_vfpfcnvrt 0012  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@fmt 0025                                    ??_oled_clear 000F  
                                      _get_Data 671C                                        __ptext10 653A  
                                      __ptext11 652E                                        __ptext20 6752  
                                      __ptext12 6560                                        __ptext21 65CC  
                                      __ptext13 7436                                        __ptext30 671C  
                                      __ptext22 69AA                                        __ptext14 6806  
                                      __ptext31 6552                                        __ptext23 65E2  
                                      __ptext15 6854                                        __ptext32 6788  
                                      __ptext24 6638                                        __ptext16 6DD0  
                                      __ptext33 6618                                        __ptext25 692E  
                                      __ptext17 6CF8                                        __ptext34 67C6  
                                      __ptext26 65A2                                        __ptext18 6C2E  
                                      __ptext35 6524                                        __ptext27 656E  
                                      __ptext19 650A                                        __ptext36 651A  
                                      __ptext28 65B6                                        __ptext37 6510  
                                      __ptext29 658E                                        __ptext38 6660  
                         __end_of_init_mod_LoRa 79EA                                __size_of_sprintf 004E  
                                 __size_of_ctoa 00D8                                   __size_of_main 0508  
                    __size_of_oled_writeCommand 0014                                  _Contrast_level 0093  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                              __end_of_oled_clear 65FC  
                                      isa$xinst 000000                                        _vfprintf 6854  
                   __size_of_Set_Column_Address 0016                                        main@cont 005F  
                                      main@read 003F                                     _sendCommand 6752  
                            oled_clearRow@index 000E                     _EUSART1_FramingErrorHandler 008E  
                                    _INTCONbits 000FF2                               ?_Set_Page_Address 0001  
                                   ??_init_port 0001                                       sprintf@ap 0029  
                                   ??_oled_init 000F                              ??_Set_Page_Address 0002  
                          oled_powerControl@vol 0002                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 652E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 6524                                      _RCSTA1bits 000FAB  
                       __end_of_oled_setDisplay 66E8                                  _oled_putString 69AA  
                             oled_clearRow@page 000D  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                                   ??_vfpfcnvrt 0018                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0090                           __end_of_oled_clearRow 6660  
                                      sprintf@f 002B                                        sprintf@s 0023  
                                _oled_writeData 65A2                        oled_putUint8@station_dot 0012  
                __end_of_PIN_MANAGER_Initialize 67C6                     ?_oled_regulorResistorSelect 0001  
                         __end_of_oled_putUint8 6ABA                          __end_of_oled_putString 6A2A  
